// Copyright Â© 2025 Ping Identity Corporation
/*
PingOne Platform User and Configuration Management API - SDK Generator

PingOne is a cloud-based framework for secure identity access management. The PingOne API gives developers the tools to integrate enterprise and third-party applications with the PingOne platform.

Contact: devex@pingidentity.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
	"fmt"
)

// DaVinciFlowVersionDetailResponseSkcomponentOptionsShowPreview the model 'DaVinciFlowVersionDetailResponseSkcomponentOptionsShowPreview'
type DaVinciFlowVersionDetailResponseSkcomponentOptionsShowPreview string

// List of DaVinci_Flow_Version_Detail_Response_Skcomponent_Options_Show_Preview
const (
	DAVINCIFLOWVERSIONDETAILRESPONSESKCOMPONENTOPTIONSSHOWPREVIEW_NO  DaVinciFlowVersionDetailResponseSkcomponentOptionsShowPreview = "no"
	DAVINCIFLOWVERSIONDETAILRESPONSESKCOMPONENTOPTIONSSHOWPREVIEW_YES DaVinciFlowVersionDetailResponseSkcomponentOptionsShowPreview = "yes"
)

// All allowed values of DaVinciFlowVersionDetailResponseSkcomponentOptionsShowPreview enum
var AllowedDaVinciFlowVersionDetailResponseSkcomponentOptionsShowPreviewEnumValues = []DaVinciFlowVersionDetailResponseSkcomponentOptionsShowPreview{
	"no",
	"yes",
}

func (v *DaVinciFlowVersionDetailResponseSkcomponentOptionsShowPreview) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := DaVinciFlowVersionDetailResponseSkcomponentOptionsShowPreview(value)
	for _, existing := range AllowedDaVinciFlowVersionDetailResponseSkcomponentOptionsShowPreviewEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	*v = DaVinciFlowVersionDetailResponseSkcomponentOptionsShowPreview(fmt.Sprintf("%s", value))
	return nil
}

// NewDaVinciFlowVersionDetailResponseSkcomponentOptionsShowPreviewFromValue returns a pointer to a valid DaVinciFlowVersionDetailResponseSkcomponentOptionsShowPreview
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDaVinciFlowVersionDetailResponseSkcomponentOptionsShowPreviewFromValue(v string) (*DaVinciFlowVersionDetailResponseSkcomponentOptionsShowPreview, error) {
	ev := DaVinciFlowVersionDetailResponseSkcomponentOptionsShowPreview(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for DaVinciFlowVersionDetailResponseSkcomponentOptionsShowPreview: valid values are %v", v, AllowedDaVinciFlowVersionDetailResponseSkcomponentOptionsShowPreviewEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DaVinciFlowVersionDetailResponseSkcomponentOptionsShowPreview) IsValid() bool {
	for _, existing := range AllowedDaVinciFlowVersionDetailResponseSkcomponentOptionsShowPreviewEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to DaVinci_Flow_Version_Detail_Response_Skcomponent_Options_Show_Preview value
func (v DaVinciFlowVersionDetailResponseSkcomponentOptionsShowPreview) Ptr() *DaVinciFlowVersionDetailResponseSkcomponentOptionsShowPreview {
	return &v
}

type NullableDaVinciFlowVersionDetailResponseSkcomponentOptionsShowPreview struct {
	value *DaVinciFlowVersionDetailResponseSkcomponentOptionsShowPreview
	isSet bool
}

func (v NullableDaVinciFlowVersionDetailResponseSkcomponentOptionsShowPreview) Get() *DaVinciFlowVersionDetailResponseSkcomponentOptionsShowPreview {
	return v.value
}

func (v *NullableDaVinciFlowVersionDetailResponseSkcomponentOptionsShowPreview) Set(val *DaVinciFlowVersionDetailResponseSkcomponentOptionsShowPreview) {
	v.value = val
	v.isSet = true
}

func (v NullableDaVinciFlowVersionDetailResponseSkcomponentOptionsShowPreview) IsSet() bool {
	return v.isSet
}

func (v *NullableDaVinciFlowVersionDetailResponseSkcomponentOptionsShowPreview) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDaVinciFlowVersionDetailResponseSkcomponentOptionsShowPreview(val *DaVinciFlowVersionDetailResponseSkcomponentOptionsShowPreview) *NullableDaVinciFlowVersionDetailResponseSkcomponentOptionsShowPreview {
	return &NullableDaVinciFlowVersionDetailResponseSkcomponentOptionsShowPreview{value: val, isSet: true}
}

func (v NullableDaVinciFlowVersionDetailResponseSkcomponentOptionsShowPreview) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDaVinciFlowVersionDetailResponseSkcomponentOptionsShowPreview) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
