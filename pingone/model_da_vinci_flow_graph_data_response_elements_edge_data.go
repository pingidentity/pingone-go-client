// Copyright Â© 2025 Ping Identity Corporation
/*
PingOne Platform User and Configuration Management API - SDK Generator

PingOne is a cloud-based framework for secure identity access management. The PingOne API gives developers the tools to integrate enterprise and third-party applications with the PingOne platform.

Contact: devex@pingidentity.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
	"fmt"
	"log/slog"
)

// checks if the DaVinciFlowGraphDataResponseElementsEdgeData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DaVinciFlowGraphDataResponseElementsEdgeData{}

// checks if the DaVinciFlowGraphDataResponseElementsEdgeData type satisfies the LogValuer interface at compile time
var _ slog.LogValuer = &DaVinciFlowGraphDataResponseElementsEdgeData{}

// DaVinciFlowGraphDataResponseElementsEdgeData struct for DaVinciFlowGraphDataResponseElementsEdgeData
type DaVinciFlowGraphDataResponseElementsEdgeData struct {
	Id                   string `json:"id"`
	Source               string `json:"source"`
	Target               string `json:"target"`
	AdditionalProperties map[string]interface{}
}

type _DaVinciFlowGraphDataResponseElementsEdgeData DaVinciFlowGraphDataResponseElementsEdgeData

// NewDaVinciFlowGraphDataResponseElementsEdgeData instantiates a new DaVinciFlowGraphDataResponseElementsEdgeData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDaVinciFlowGraphDataResponseElementsEdgeData(id string, source string, target string) *DaVinciFlowGraphDataResponseElementsEdgeData {
	this := DaVinciFlowGraphDataResponseElementsEdgeData{}
	this.Id = id
	this.Source = source
	this.Target = target
	return &this
}

// NewDaVinciFlowGraphDataResponseElementsEdgeDataWithDefaults instantiates a new DaVinciFlowGraphDataResponseElementsEdgeData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDaVinciFlowGraphDataResponseElementsEdgeDataWithDefaults() *DaVinciFlowGraphDataResponseElementsEdgeData {
	this := DaVinciFlowGraphDataResponseElementsEdgeData{}
	return &this
}

// GetId returns the Id field value
func (o *DaVinciFlowGraphDataResponseElementsEdgeData) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *DaVinciFlowGraphDataResponseElementsEdgeData) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *DaVinciFlowGraphDataResponseElementsEdgeData) SetId(v string) {
	o.Id = v
}

// GetSource returns the Source field value
func (o *DaVinciFlowGraphDataResponseElementsEdgeData) GetSource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *DaVinciFlowGraphDataResponseElementsEdgeData) GetSourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *DaVinciFlowGraphDataResponseElementsEdgeData) SetSource(v string) {
	o.Source = v
}

// GetTarget returns the Target field value
func (o *DaVinciFlowGraphDataResponseElementsEdgeData) GetTarget() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Target
}

// GetTargetOk returns a tuple with the Target field value
// and a boolean to check if the value has been set.
func (o *DaVinciFlowGraphDataResponseElementsEdgeData) GetTargetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Target, true
}

// SetTarget sets field value
func (o *DaVinciFlowGraphDataResponseElementsEdgeData) SetTarget(v string) {
	o.Target = v
}

func (o DaVinciFlowGraphDataResponseElementsEdgeData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DaVinciFlowGraphDataResponseElementsEdgeData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["source"] = o.Source
	toSerialize["target"] = o.Target

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DaVinciFlowGraphDataResponseElementsEdgeData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"source",
		"target",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDaVinciFlowGraphDataResponseElementsEdgeData := _DaVinciFlowGraphDataResponseElementsEdgeData{}

	err = json.Unmarshal(data, &varDaVinciFlowGraphDataResponseElementsEdgeData)

	if err != nil {
		return err
	}

	*o = DaVinciFlowGraphDataResponseElementsEdgeData(varDaVinciFlowGraphDataResponseElementsEdgeData)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "source")
		delete(additionalProperties, "target")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

func (o DaVinciFlowGraphDataResponseElementsEdgeData) LogValue() slog.Value {
	logAttrs := make([]slog.Attr, 0)

	logAttrs = append(logAttrs, slog.Any("id", o.Id))
	logAttrs = append(logAttrs, slog.Any("source", o.Source))
	logAttrs = append(logAttrs, slog.Any("target", o.Target))
	logAttrs = append(logAttrs, slog.Any("additionalProperties", o.AdditionalProperties))

	return slog.GroupValue(logAttrs...)
}

type NullableDaVinciFlowGraphDataResponseElementsEdgeData struct {
	value *DaVinciFlowGraphDataResponseElementsEdgeData
	isSet bool
}

func (v NullableDaVinciFlowGraphDataResponseElementsEdgeData) Get() *DaVinciFlowGraphDataResponseElementsEdgeData {
	return v.value
}

func (v *NullableDaVinciFlowGraphDataResponseElementsEdgeData) Set(val *DaVinciFlowGraphDataResponseElementsEdgeData) {
	v.value = val
	v.isSet = true
}

func (v NullableDaVinciFlowGraphDataResponseElementsEdgeData) IsSet() bool {
	return v.isSet
}

func (v *NullableDaVinciFlowGraphDataResponseElementsEdgeData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDaVinciFlowGraphDataResponseElementsEdgeData(val *DaVinciFlowGraphDataResponseElementsEdgeData) *NullableDaVinciFlowGraphDataResponseElementsEdgeData {
	return &NullableDaVinciFlowGraphDataResponseElementsEdgeData{value: val, isSet: true}
}

func (v NullableDaVinciFlowGraphDataResponseElementsEdgeData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDaVinciFlowGraphDataResponseElementsEdgeData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
