// Copyright Â© 2025 Ping Identity Corporation
/*
PingOne Platform User and Configuration Management API - SDK Generator

PingOne is a cloud-based framework for secure identity access management. The PingOne API gives developers the tools to integrate enterprise and third-party applications with the PingOne platform.

Contact: developerexperiences@pingidentity.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
	"fmt"
)

// DaVinciFlowPolicyCreateRequestTriggerType the model 'DaVinciFlowPolicyCreateRequestTriggerType'
type DaVinciFlowPolicyCreateRequestTriggerType string

// List of DaVinci_Flow_Policy_Create_Request_Trigger_Type
const (
	DAVINCIFLOWPOLICYCREATEREQUESTTRIGGERTYPE_AUTHENTICATION DaVinciFlowPolicyCreateRequestTriggerType = "AUTHENTICATION"
)

// All allowed values of DaVinciFlowPolicyCreateRequestTriggerType enum
var AllowedDaVinciFlowPolicyCreateRequestTriggerTypeEnumValues = []DaVinciFlowPolicyCreateRequestTriggerType{
	"AUTHENTICATION",
}

func (v *DaVinciFlowPolicyCreateRequestTriggerType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := DaVinciFlowPolicyCreateRequestTriggerType(value)
	for _, existing := range AllowedDaVinciFlowPolicyCreateRequestTriggerTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	*v = DaVinciFlowPolicyCreateRequestTriggerType(fmt.Sprintf("%s", value))
	return nil
}

// NewDaVinciFlowPolicyCreateRequestTriggerTypeFromValue returns a pointer to a valid DaVinciFlowPolicyCreateRequestTriggerType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDaVinciFlowPolicyCreateRequestTriggerTypeFromValue(v string) (*DaVinciFlowPolicyCreateRequestTriggerType, error) {
	ev := DaVinciFlowPolicyCreateRequestTriggerType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for DaVinciFlowPolicyCreateRequestTriggerType: valid values are %v", v, AllowedDaVinciFlowPolicyCreateRequestTriggerTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DaVinciFlowPolicyCreateRequestTriggerType) IsValid() bool {
	for _, existing := range AllowedDaVinciFlowPolicyCreateRequestTriggerTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to DaVinci_Flow_Policy_Create_Request_Trigger_Type value
func (v DaVinciFlowPolicyCreateRequestTriggerType) Ptr() *DaVinciFlowPolicyCreateRequestTriggerType {
	return &v
}

type NullableDaVinciFlowPolicyCreateRequestTriggerType struct {
	value *DaVinciFlowPolicyCreateRequestTriggerType
	isSet bool
}

func (v NullableDaVinciFlowPolicyCreateRequestTriggerType) Get() *DaVinciFlowPolicyCreateRequestTriggerType {
	return v.value
}

func (v *NullableDaVinciFlowPolicyCreateRequestTriggerType) Set(val *DaVinciFlowPolicyCreateRequestTriggerType) {
	v.value = val
	v.isSet = true
}

func (v NullableDaVinciFlowPolicyCreateRequestTriggerType) IsSet() bool {
	return v.isSet
}

func (v *NullableDaVinciFlowPolicyCreateRequestTriggerType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDaVinciFlowPolicyCreateRequestTriggerType(val *DaVinciFlowPolicyCreateRequestTriggerType) *NullableDaVinciFlowPolicyCreateRequestTriggerType {
	return &NullableDaVinciFlowPolicyCreateRequestTriggerType{value: val, isSet: true}
}

func (v NullableDaVinciFlowPolicyCreateRequestTriggerType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDaVinciFlowPolicyCreateRequestTriggerType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
