// Copyright Â© 2025 Ping Identity Corporation
/*
PingOne Platform User and Configuration Management API - Go SDK

PingOne is a cloud-based framework for secure identity access management. The PingOne API gives developers the tools to integrate enterprise and third-party applications with the PingOne platform.

Contact: developerexperiences@pingidentity.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
	"fmt"
	"log/slog"
)

// EnvironmentCreateRequestRegion struct for EnvironmentCreateRequestRegion
type EnvironmentCreateRequestRegion struct {
	EnvironmentRegionCode *EnvironmentRegionCode
	String                *string
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *EnvironmentCreateRequestRegion) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into EnvironmentRegionCode
	err = json.Unmarshal(data, &dst.EnvironmentRegionCode)
	if err == nil {
		jsonEnvironmentRegionCode, _ := json.Marshal(dst.EnvironmentRegionCode)
		if string(jsonEnvironmentRegionCode) == "{}" { // empty struct
			dst.EnvironmentRegionCode = nil
		} else {
			return nil // data stored in dst.EnvironmentRegionCode, return on the first match
		}
	} else {
		dst.EnvironmentRegionCode = nil
	}

	// try to unmarshal JSON data into String
	err = json.Unmarshal(data, &dst.String)
	if err == nil {
		jsonString, _ := json.Marshal(dst.String)
		if string(jsonString) == "{}" { // empty struct
			dst.String = nil
		} else {
			return nil // data stored in dst.String, return on the first match
		}
	} else {
		dst.String = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(EnvironmentCreateRequestRegion)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src EnvironmentCreateRequestRegion) MarshalJSON() ([]byte, error) {
	if src.EnvironmentRegionCode != nil {
		return json.Marshal(&src.EnvironmentRegionCode)
	}

	if src.String != nil {
		return json.Marshal(&src.String)
	}

	return nil, nil // no data in anyOf schemas
}

func (o EnvironmentCreateRequestRegion) LogValue() slog.Value {
	logAttrs := make([]slog.Attr, 0)

	if !IsNil(o.String) {
		logAttrs = append(logAttrs, slog.Any("String", *o.String))
	}
	if !IsNil(o.EnvironmentCreateRequestRegionCode) {
		logAttrs = append(logAttrs, slog.Any("EnvironmentCreateRequestRegionCode", *o.EnvironmentCreateRequestRegionCode))
	}

	return slog.GroupValue(logAttrs...)
}

type NullableEnvironmentCreateRequestRegion struct {
	value *EnvironmentCreateRequestRegion
	isSet bool
}

func (v NullableEnvironmentCreateRequestRegion) Get() *EnvironmentCreateRequestRegion {
	return v.value
}

func (v *NullableEnvironmentCreateRequestRegion) Set(val *EnvironmentCreateRequestRegion) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentCreateRequestRegion) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentCreateRequestRegion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentCreateRequestRegion(val *EnvironmentCreateRequestRegion) *NullableEnvironmentCreateRequestRegion {
	return &NullableEnvironmentCreateRequestRegion{value: val, isSet: true}
}

func (v NullableEnvironmentCreateRequestRegion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentCreateRequestRegion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
