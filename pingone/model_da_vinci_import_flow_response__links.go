// Copyright Â© 2025 Ping Identity Corporation
/*
PingOne Platform User and Configuration Management API - Go SDK

PingOne is a cloud-based framework for secure identity access management. The PingOne API gives developers the tools to integrate enterprise and third-party applications with the PingOne platform.

Contact: developerexperiences@pingidentity.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
	"fmt"
	"log/slog"
)

// checks if the DaVinciImportFlowResponseLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DaVinciImportFlowResponseLinks{}

// checks if the DaVinciImportFlowResponseLinks type satisfies the LogValuer interface at compile time
var _ slog.LogValuer = &DaVinciImportFlowResponseLinks{}

// DaVinciImportFlowResponseLinks struct for DaVinciImportFlowResponseLinks
type DaVinciImportFlowResponseLinks struct {
	Environment          JSONHALLink  `json:"environment"`
	Self                 JSONHALLink  `json:"self"`
	ConnectorInstances   JSONHALLink  `json:"connectorInstances"`
	Connectors           JSONHALLink  `json:"connectors"`
	FlowDeploy           JSONHALLink  `json:"flow.deploy"`
	FlowClone            JSONHALLink  `json:"flow.clone"`
	FlowEnabled          JSONHALLink  `json:"flow.enabled"`
	FlowExport           JSONHALLink  `json:"flow.export"`
	FlowValidate         *JSONHALLink `json:"flow.validate,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DaVinciImportFlowResponseLinks DaVinciImportFlowResponseLinks

// NewDaVinciImportFlowResponseLinks instantiates a new DaVinciImportFlowResponseLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDaVinciImportFlowResponseLinks(environment JSONHALLink, self JSONHALLink, connectorInstances JSONHALLink, connectors JSONHALLink, flowDeploy JSONHALLink, flowClone JSONHALLink, flowEnabled JSONHALLink, flowExport JSONHALLink) *DaVinciImportFlowResponseLinks {
	this := DaVinciImportFlowResponseLinks{}
	this.Environment = environment
	this.Self = self
	this.ConnectorInstances = connectorInstances
	this.Connectors = connectors
	this.FlowDeploy = flowDeploy
	this.FlowClone = flowClone
	this.FlowEnabled = flowEnabled
	this.FlowExport = flowExport
	return &this
}

// NewDaVinciImportFlowResponseLinksWithDefaults instantiates a new DaVinciImportFlowResponseLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDaVinciImportFlowResponseLinksWithDefaults() *DaVinciImportFlowResponseLinks {
	this := DaVinciImportFlowResponseLinks{}
	return &this
}

// GetEnvironment returns the Environment field value
func (o *DaVinciImportFlowResponseLinks) GetEnvironment() JSONHALLink {
	if o == nil {
		var ret JSONHALLink
		return ret
	}

	return o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value
// and a boolean to check if the value has been set.
func (o *DaVinciImportFlowResponseLinks) GetEnvironmentOk() (*JSONHALLink, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Environment, true
}

// SetEnvironment sets field value
func (o *DaVinciImportFlowResponseLinks) SetEnvironment(v JSONHALLink) {
	o.Environment = v
}

// GetSelf returns the Self field value
func (o *DaVinciImportFlowResponseLinks) GetSelf() JSONHALLink {
	if o == nil {
		var ret JSONHALLink
		return ret
	}

	return o.Self
}

// GetSelfOk returns a tuple with the Self field value
// and a boolean to check if the value has been set.
func (o *DaVinciImportFlowResponseLinks) GetSelfOk() (*JSONHALLink, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Self, true
}

// SetSelf sets field value
func (o *DaVinciImportFlowResponseLinks) SetSelf(v JSONHALLink) {
	o.Self = v
}

// GetConnectorInstances returns the ConnectorInstances field value
func (o *DaVinciImportFlowResponseLinks) GetConnectorInstances() JSONHALLink {
	if o == nil {
		var ret JSONHALLink
		return ret
	}

	return o.ConnectorInstances
}

// GetConnectorInstancesOk returns a tuple with the ConnectorInstances field value
// and a boolean to check if the value has been set.
func (o *DaVinciImportFlowResponseLinks) GetConnectorInstancesOk() (*JSONHALLink, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectorInstances, true
}

// SetConnectorInstances sets field value
func (o *DaVinciImportFlowResponseLinks) SetConnectorInstances(v JSONHALLink) {
	o.ConnectorInstances = v
}

// GetConnectors returns the Connectors field value
func (o *DaVinciImportFlowResponseLinks) GetConnectors() JSONHALLink {
	if o == nil {
		var ret JSONHALLink
		return ret
	}

	return o.Connectors
}

// GetConnectorsOk returns a tuple with the Connectors field value
// and a boolean to check if the value has been set.
func (o *DaVinciImportFlowResponseLinks) GetConnectorsOk() (*JSONHALLink, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Connectors, true
}

// SetConnectors sets field value
func (o *DaVinciImportFlowResponseLinks) SetConnectors(v JSONHALLink) {
	o.Connectors = v
}

// GetFlowDeploy returns the FlowDeploy field value
func (o *DaVinciImportFlowResponseLinks) GetFlowDeploy() JSONHALLink {
	if o == nil {
		var ret JSONHALLink
		return ret
	}

	return o.FlowDeploy
}

// GetFlowDeployOk returns a tuple with the FlowDeploy field value
// and a boolean to check if the value has been set.
func (o *DaVinciImportFlowResponseLinks) GetFlowDeployOk() (*JSONHALLink, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FlowDeploy, true
}

// SetFlowDeploy sets field value
func (o *DaVinciImportFlowResponseLinks) SetFlowDeploy(v JSONHALLink) {
	o.FlowDeploy = v
}

// GetFlowClone returns the FlowClone field value
func (o *DaVinciImportFlowResponseLinks) GetFlowClone() JSONHALLink {
	if o == nil {
		var ret JSONHALLink
		return ret
	}

	return o.FlowClone
}

// GetFlowCloneOk returns a tuple with the FlowClone field value
// and a boolean to check if the value has been set.
func (o *DaVinciImportFlowResponseLinks) GetFlowCloneOk() (*JSONHALLink, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FlowClone, true
}

// SetFlowClone sets field value
func (o *DaVinciImportFlowResponseLinks) SetFlowClone(v JSONHALLink) {
	o.FlowClone = v
}

// GetFlowEnabled returns the FlowEnabled field value
func (o *DaVinciImportFlowResponseLinks) GetFlowEnabled() JSONHALLink {
	if o == nil {
		var ret JSONHALLink
		return ret
	}

	return o.FlowEnabled
}

// GetFlowEnabledOk returns a tuple with the FlowEnabled field value
// and a boolean to check if the value has been set.
func (o *DaVinciImportFlowResponseLinks) GetFlowEnabledOk() (*JSONHALLink, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FlowEnabled, true
}

// SetFlowEnabled sets field value
func (o *DaVinciImportFlowResponseLinks) SetFlowEnabled(v JSONHALLink) {
	o.FlowEnabled = v
}

// GetFlowExport returns the FlowExport field value
func (o *DaVinciImportFlowResponseLinks) GetFlowExport() JSONHALLink {
	if o == nil {
		var ret JSONHALLink
		return ret
	}

	return o.FlowExport
}

// GetFlowExportOk returns a tuple with the FlowExport field value
// and a boolean to check if the value has been set.
func (o *DaVinciImportFlowResponseLinks) GetFlowExportOk() (*JSONHALLink, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FlowExport, true
}

// SetFlowExport sets field value
func (o *DaVinciImportFlowResponseLinks) SetFlowExport(v JSONHALLink) {
	o.FlowExport = v
}

// GetFlowValidate returns the FlowValidate field value if set, zero value otherwise.
func (o *DaVinciImportFlowResponseLinks) GetFlowValidate() JSONHALLink {
	if o == nil || IsNil(o.FlowValidate) {
		var ret JSONHALLink
		return ret
	}
	return *o.FlowValidate
}

// GetFlowValidateOk returns a tuple with the FlowValidate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaVinciImportFlowResponseLinks) GetFlowValidateOk() (*JSONHALLink, bool) {
	if o == nil || IsNil(o.FlowValidate) {
		return nil, false
	}
	return o.FlowValidate, true
}

// HasFlowValidate returns a boolean if a field has been set.
func (o *DaVinciImportFlowResponseLinks) HasFlowValidate() bool {
	if o != nil && !IsNil(o.FlowValidate) {
		return true
	}

	return false
}

// SetFlowValidate gets a reference to the given JSONHALLink and assigns it to the FlowValidate field.
func (o *DaVinciImportFlowResponseLinks) SetFlowValidate(v JSONHALLink) {
	o.FlowValidate = &v
}

func (o DaVinciImportFlowResponseLinks) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DaVinciImportFlowResponseLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["environment"] = o.Environment
	toSerialize["self"] = o.Self
	toSerialize["connectorInstances"] = o.ConnectorInstances
	toSerialize["connectors"] = o.Connectors
	toSerialize["flow.deploy"] = o.FlowDeploy
	toSerialize["flow.clone"] = o.FlowClone
	toSerialize["flow.enabled"] = o.FlowEnabled
	toSerialize["flow.export"] = o.FlowExport
	if !IsNil(o.FlowValidate) {
		toSerialize["flow.validate"] = o.FlowValidate
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DaVinciImportFlowResponseLinks) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"environment",
		"self",
		"connectorInstances",
		"connectors",
		"flow.deploy",
		"flow.clone",
		"flow.enabled",
		"flow.export",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDaVinciImportFlowResponseLinks := _DaVinciImportFlowResponseLinks{}

	err = json.Unmarshal(data, &varDaVinciImportFlowResponseLinks)

	if err != nil {
		return err
	}

	*o = DaVinciImportFlowResponseLinks(varDaVinciImportFlowResponseLinks)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "environment")
		delete(additionalProperties, "self")
		delete(additionalProperties, "connectorInstances")
		delete(additionalProperties, "connectors")
		delete(additionalProperties, "flow.deploy")
		delete(additionalProperties, "flow.clone")
		delete(additionalProperties, "flow.enabled")
		delete(additionalProperties, "flow.export")
		delete(additionalProperties, "flow.validate")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

func (o DaVinciImportFlowResponseLinks) LogValue() slog.Value {
	logAttrs := make([]slog.Attr, 0)

	logAttrs = append(logAttrs, slog.Any("environment", o.Environment))
	logAttrs = append(logAttrs, slog.Any("self", o.Self))
	logAttrs = append(logAttrs, slog.Any("connectorInstances", o.ConnectorInstances))
	logAttrs = append(logAttrs, slog.Any("connectors", o.Connectors))
	logAttrs = append(logAttrs, slog.Any("flow.deploy", o.FlowDeploy))
	logAttrs = append(logAttrs, slog.Any("flow.clone", o.FlowClone))
	logAttrs = append(logAttrs, slog.Any("flow.enabled", o.FlowEnabled))
	logAttrs = append(logAttrs, slog.Any("flow.export", o.FlowExport))
	if !IsNil(o.FlowValidate) {
		logAttrs = append(logAttrs, slog.Any("flow.validate", *o.FlowValidate))
	}
	logAttrs = append(logAttrs, slog.Any("additionalProperties", o.AdditionalProperties))

	return slog.GroupValue(logAttrs...)
}

type NullableDaVinciImportFlowResponseLinks struct {
	value *DaVinciImportFlowResponseLinks
	isSet bool
}

func (v NullableDaVinciImportFlowResponseLinks) Get() *DaVinciImportFlowResponseLinks {
	return v.value
}

func (v *NullableDaVinciImportFlowResponseLinks) Set(val *DaVinciImportFlowResponseLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableDaVinciImportFlowResponseLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableDaVinciImportFlowResponseLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDaVinciImportFlowResponseLinks(val *DaVinciImportFlowResponseLinks) *NullableDaVinciImportFlowResponseLinks {
	return &NullableDaVinciImportFlowResponseLinks{value: val, isSet: true}
}

func (v NullableDaVinciImportFlowResponseLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDaVinciImportFlowResponseLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
