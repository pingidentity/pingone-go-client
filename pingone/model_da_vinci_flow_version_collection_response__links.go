// Copyright Â© 2025 Ping Identity Corporation
/*
PingOne Platform User and Configuration Management API - SDK Generator

PingOne is a cloud-based framework for secure identity access management. The PingOne API gives developers the tools to integrate enterprise and third-party applications with the PingOne platform.

Contact: devex@pingidentity.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
	"fmt"
	"log/slog"
)

// checks if the DaVinciFlowVersionCollectionResponseLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DaVinciFlowVersionCollectionResponseLinks{}

// checks if the DaVinciFlowVersionCollectionResponseLinks type satisfies the LogValuer interface at compile time
var _ slog.LogValuer = &DaVinciFlowVersionCollectionResponseLinks{}

// DaVinciFlowVersionCollectionResponseLinks struct for DaVinciFlowVersionCollectionResponseLinks
type DaVinciFlowVersionCollectionResponseLinks struct {
	Environment          JSONHALLink `json:"environment"`
	Self                 JSONHALLink `json:"self"`
	AdditionalProperties map[string]interface{}
}

type _DaVinciFlowVersionCollectionResponseLinks DaVinciFlowVersionCollectionResponseLinks

// NewDaVinciFlowVersionCollectionResponseLinks instantiates a new DaVinciFlowVersionCollectionResponseLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDaVinciFlowVersionCollectionResponseLinks(environment JSONHALLink, self JSONHALLink) *DaVinciFlowVersionCollectionResponseLinks {
	this := DaVinciFlowVersionCollectionResponseLinks{}
	this.Environment = environment
	this.Self = self
	return &this
}

// NewDaVinciFlowVersionCollectionResponseLinksWithDefaults instantiates a new DaVinciFlowVersionCollectionResponseLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDaVinciFlowVersionCollectionResponseLinksWithDefaults() *DaVinciFlowVersionCollectionResponseLinks {
	this := DaVinciFlowVersionCollectionResponseLinks{}
	return &this
}

// GetEnvironment returns the Environment field value
func (o *DaVinciFlowVersionCollectionResponseLinks) GetEnvironment() JSONHALLink {
	if o == nil {
		var ret JSONHALLink
		return ret
	}

	return o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value
// and a boolean to check if the value has been set.
func (o *DaVinciFlowVersionCollectionResponseLinks) GetEnvironmentOk() (*JSONHALLink, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Environment, true
}

// SetEnvironment sets field value
func (o *DaVinciFlowVersionCollectionResponseLinks) SetEnvironment(v JSONHALLink) {
	o.Environment = v
}

// GetSelf returns the Self field value
func (o *DaVinciFlowVersionCollectionResponseLinks) GetSelf() JSONHALLink {
	if o == nil {
		var ret JSONHALLink
		return ret
	}

	return o.Self
}

// GetSelfOk returns a tuple with the Self field value
// and a boolean to check if the value has been set.
func (o *DaVinciFlowVersionCollectionResponseLinks) GetSelfOk() (*JSONHALLink, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Self, true
}

// SetSelf sets field value
func (o *DaVinciFlowVersionCollectionResponseLinks) SetSelf(v JSONHALLink) {
	o.Self = v
}

func (o DaVinciFlowVersionCollectionResponseLinks) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DaVinciFlowVersionCollectionResponseLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["environment"] = o.Environment
	toSerialize["self"] = o.Self

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DaVinciFlowVersionCollectionResponseLinks) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"environment",
		"self",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDaVinciFlowVersionCollectionResponseLinks := _DaVinciFlowVersionCollectionResponseLinks{}

	err = json.Unmarshal(data, &varDaVinciFlowVersionCollectionResponseLinks)

	if err != nil {
		return err
	}

	*o = DaVinciFlowVersionCollectionResponseLinks(varDaVinciFlowVersionCollectionResponseLinks)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "environment")
		delete(additionalProperties, "self")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

func (o DaVinciFlowVersionCollectionResponseLinks) LogValue() slog.Value {
	logAttrs := make([]slog.Attr, 0)

	logAttrs = append(logAttrs, slog.Any("environment", o.Environment))
	logAttrs = append(logAttrs, slog.Any("self", o.Self))
	logAttrs = append(logAttrs, slog.Any("additionalProperties", o.AdditionalProperties))

	return slog.GroupValue(logAttrs...)
}

type NullableDaVinciFlowVersionCollectionResponseLinks struct {
	value *DaVinciFlowVersionCollectionResponseLinks
	isSet bool
}

func (v NullableDaVinciFlowVersionCollectionResponseLinks) Get() *DaVinciFlowVersionCollectionResponseLinks {
	return v.value
}

func (v *NullableDaVinciFlowVersionCollectionResponseLinks) Set(val *DaVinciFlowVersionCollectionResponseLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableDaVinciFlowVersionCollectionResponseLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableDaVinciFlowVersionCollectionResponseLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDaVinciFlowVersionCollectionResponseLinks(val *DaVinciFlowVersionCollectionResponseLinks) *NullableDaVinciFlowVersionCollectionResponseLinks {
	return &NullableDaVinciFlowVersionCollectionResponseLinks{value: val, isSet: true}
}

func (v NullableDaVinciFlowVersionCollectionResponseLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDaVinciFlowVersionCollectionResponseLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
