// Copyright Â© 2025 Ping Identity Corporation
/*
PingOne Platform User and Configuration Management API - SDK Generator

PingOne is a cloud-based framework for secure identity access management. The PingOne API gives developers the tools to integrate enterprise and third-party applications with the PingOne platform.

Contact: devex@pingidentity.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
	"fmt"
	"log/slog"
)

// checks if the DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem{}

// checks if the DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem type satisfies the LogValuer interface at compile time
var _ slog.LogValuer = &DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem{}

// DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem struct for DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem
type DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem struct {
	Name                 string   `json:"name"`
	Key                  *float32 `json:"key,omitempty"`
	Label                *string  `json:"label,omitempty"`
	NameDefault          *string  `json:"nameDefault,omitempty"`
	Type                 *string  `json:"type,omitempty"`
	Value                *string  `json:"value,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem

// NewDaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem instantiates a new DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem(name string) *DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem {
	this := DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem{}
	this.Name = name
	return &this
}

// NewDaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItemWithDefaults instantiates a new DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItemWithDefaults() *DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem {
	this := DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem{}
	return &this
}

// GetName returns the Name field value
func (o *DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem) SetName(v string) {
	o.Name = v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem) GetKey() float32 {
	if o == nil || IsNil(o.Key) {
		var ret float32
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem) GetKeyOk() (*float32, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given float32 and assigns it to the Key field.
func (o *DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem) SetKey(v float32) {
	o.Key = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem) SetLabel(v string) {
	o.Label = &v
}

// GetNameDefault returns the NameDefault field value if set, zero value otherwise.
func (o *DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem) GetNameDefault() string {
	if o == nil || IsNil(o.NameDefault) {
		var ret string
		return ret
	}
	return *o.NameDefault
}

// GetNameDefaultOk returns a tuple with the NameDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem) GetNameDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.NameDefault) {
		return nil, false
	}
	return o.NameDefault, true
}

// HasNameDefault returns a boolean if a field has been set.
func (o *DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem) HasNameDefault() bool {
	if o != nil && !IsNil(o.NameDefault) {
		return true
	}

	return false
}

// SetNameDefault gets a reference to the given string and assigns it to the NameDefault field.
func (o *DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem) SetNameDefault(v string) {
	o.NameDefault = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem) SetType(v string) {
	o.Type = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem) SetValue(v string) {
	o.Value = &v
}

func (o DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.NameDefault) {
		toSerialize["nameDefault"] = o.NameDefault
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem := _DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem{}

	err = json.Unmarshal(data, &varDaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem)

	if err != nil {
		return err
	}

	*o = DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem(varDaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "key")
		delete(additionalProperties, "label")
		delete(additionalProperties, "nameDefault")
		delete(additionalProperties, "type")
		delete(additionalProperties, "value")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

func (o DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem) LogValue() slog.Value {
	logAttrs := make([]slog.Attr, 0)

	logAttrs = append(logAttrs, slog.Any("name", o.Name))
	if !IsNil(o.Key) {
		logAttrs = append(logAttrs, slog.Any("key", *o.Key))
	}
	if !IsNil(o.Label) {
		logAttrs = append(logAttrs, slog.Any("label", *o.Label))
	}
	if !IsNil(o.NameDefault) {
		logAttrs = append(logAttrs, slog.Any("nameDefault", *o.NameDefault))
	}
	if !IsNil(o.Type) {
		logAttrs = append(logAttrs, slog.Any("type", *o.Type))
	}
	if !IsNil(o.Value) {
		logAttrs = append(logAttrs, slog.Any("value", *o.Value))
	}
	logAttrs = append(logAttrs, slog.Any("additionalProperties", o.AdditionalProperties))

	return slog.GroupValue(logAttrs...)
}

type NullableDaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem struct {
	value *DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem
	isSet bool
}

func (v NullableDaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem) Get() *DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem {
	return v.value
}

func (v *NullableDaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem) Set(val *DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem) {
	v.value = val
	v.isSet = true
}

func (v NullableDaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem) IsSet() bool {
	return v.isSet
}

func (v *NullableDaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem(val *DaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem) *NullableDaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem {
	return &NullableDaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem{value: val, isSet: true}
}

func (v NullableDaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDaVinciFlowGraphDataResponseElementsNodeDataPropertiesSaveVariablesValueItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
