// Copyright Â© 2025 Ping Identity Corporation
/*
PingOne Platform User and Configuration Management API - SDK Generator

PingOne is a cloud-based framework for secure identity access management. The PingOne API gives developers the tools to integrate enterprise and third-party applications with the PingOne platform.

Contact: devex@pingidentity.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
	"fmt"
	"log/slog"
)

// checks if the DaVinciFlowVersionDetailResponseTriggerConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DaVinciFlowVersionDetailResponseTriggerConfiguration{}

// checks if the DaVinciFlowVersionDetailResponseTriggerConfiguration type satisfies the LogValuer interface at compile time
var _ slog.LogValuer = &DaVinciFlowVersionDetailResponseTriggerConfiguration{}

// DaVinciFlowVersionDetailResponseTriggerConfiguration struct for DaVinciFlowVersionDetailResponseTriggerConfiguration
type DaVinciFlowVersionDetailResponseTriggerConfiguration struct {
	Mfa                  DaVinciFlowVersionDetailResponseTriggerConfigurationMFA      `json:"mfa"`
	Pwd                  DaVinciFlowVersionDetailResponseTriggerConfigurationPassword `json:"pwd"`
	AdditionalProperties map[string]interface{}
}

type _DaVinciFlowVersionDetailResponseTriggerConfiguration DaVinciFlowVersionDetailResponseTriggerConfiguration

// NewDaVinciFlowVersionDetailResponseTriggerConfiguration instantiates a new DaVinciFlowVersionDetailResponseTriggerConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDaVinciFlowVersionDetailResponseTriggerConfiguration(mfa DaVinciFlowVersionDetailResponseTriggerConfigurationMFA, pwd DaVinciFlowVersionDetailResponseTriggerConfigurationPassword) *DaVinciFlowVersionDetailResponseTriggerConfiguration {
	this := DaVinciFlowVersionDetailResponseTriggerConfiguration{}
	this.Mfa = mfa
	this.Pwd = pwd
	return &this
}

// NewDaVinciFlowVersionDetailResponseTriggerConfigurationWithDefaults instantiates a new DaVinciFlowVersionDetailResponseTriggerConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDaVinciFlowVersionDetailResponseTriggerConfigurationWithDefaults() *DaVinciFlowVersionDetailResponseTriggerConfiguration {
	this := DaVinciFlowVersionDetailResponseTriggerConfiguration{}
	return &this
}

// GetMfa returns the Mfa field value
func (o *DaVinciFlowVersionDetailResponseTriggerConfiguration) GetMfa() DaVinciFlowVersionDetailResponseTriggerConfigurationMFA {
	if o == nil {
		var ret DaVinciFlowVersionDetailResponseTriggerConfigurationMFA
		return ret
	}

	return o.Mfa
}

// GetMfaOk returns a tuple with the Mfa field value
// and a boolean to check if the value has been set.
func (o *DaVinciFlowVersionDetailResponseTriggerConfiguration) GetMfaOk() (*DaVinciFlowVersionDetailResponseTriggerConfigurationMFA, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Mfa, true
}

// SetMfa sets field value
func (o *DaVinciFlowVersionDetailResponseTriggerConfiguration) SetMfa(v DaVinciFlowVersionDetailResponseTriggerConfigurationMFA) {
	o.Mfa = v
}

// GetPwd returns the Pwd field value
func (o *DaVinciFlowVersionDetailResponseTriggerConfiguration) GetPwd() DaVinciFlowVersionDetailResponseTriggerConfigurationPassword {
	if o == nil {
		var ret DaVinciFlowVersionDetailResponseTriggerConfigurationPassword
		return ret
	}

	return o.Pwd
}

// GetPwdOk returns a tuple with the Pwd field value
// and a boolean to check if the value has been set.
func (o *DaVinciFlowVersionDetailResponseTriggerConfiguration) GetPwdOk() (*DaVinciFlowVersionDetailResponseTriggerConfigurationPassword, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pwd, true
}

// SetPwd sets field value
func (o *DaVinciFlowVersionDetailResponseTriggerConfiguration) SetPwd(v DaVinciFlowVersionDetailResponseTriggerConfigurationPassword) {
	o.Pwd = v
}

func (o DaVinciFlowVersionDetailResponseTriggerConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DaVinciFlowVersionDetailResponseTriggerConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["mfa"] = o.Mfa
	toSerialize["pwd"] = o.Pwd

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DaVinciFlowVersionDetailResponseTriggerConfiguration) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"mfa",
		"pwd",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDaVinciFlowVersionDetailResponseTriggerConfiguration := _DaVinciFlowVersionDetailResponseTriggerConfiguration{}

	err = json.Unmarshal(data, &varDaVinciFlowVersionDetailResponseTriggerConfiguration)

	if err != nil {
		return err
	}

	*o = DaVinciFlowVersionDetailResponseTriggerConfiguration(varDaVinciFlowVersionDetailResponseTriggerConfiguration)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "mfa")
		delete(additionalProperties, "pwd")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

func (o DaVinciFlowVersionDetailResponseTriggerConfiguration) LogValue() slog.Value {
	logAttrs := make([]slog.Attr, 0)

	logAttrs = append(logAttrs, slog.Any("mfa", o.Mfa))
	logAttrs = append(logAttrs, slog.Any("pwd", o.Pwd))
	logAttrs = append(logAttrs, slog.Any("additionalProperties", o.AdditionalProperties))

	return slog.GroupValue(logAttrs...)
}

type NullableDaVinciFlowVersionDetailResponseTriggerConfiguration struct {
	value *DaVinciFlowVersionDetailResponseTriggerConfiguration
	isSet bool
}

func (v NullableDaVinciFlowVersionDetailResponseTriggerConfiguration) Get() *DaVinciFlowVersionDetailResponseTriggerConfiguration {
	return v.value
}

func (v *NullableDaVinciFlowVersionDetailResponseTriggerConfiguration) Set(val *DaVinciFlowVersionDetailResponseTriggerConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableDaVinciFlowVersionDetailResponseTriggerConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableDaVinciFlowVersionDetailResponseTriggerConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDaVinciFlowVersionDetailResponseTriggerConfiguration(val *DaVinciFlowVersionDetailResponseTriggerConfiguration) *NullableDaVinciFlowVersionDetailResponseTriggerConfiguration {
	return &NullableDaVinciFlowVersionDetailResponseTriggerConfiguration{value: val, isSet: true}
}

func (v NullableDaVinciFlowVersionDetailResponseTriggerConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDaVinciFlowVersionDetailResponseTriggerConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
