// Copyright Â© 2025 Ping Identity Corporation
/*
PingOne Platform User and Configuration Management API - SDK Generator

PingOne is a cloud-based framework for secure identity access management. The PingOne API gives developers the tools to integrate enterprise and third-party applications with the PingOne platform.

Contact: developerexperiences@pingidentity.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
	"log/slog"
)

// checks if the DaVinciFlowPolicyReplaceRequestTriggerConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DaVinciFlowPolicyReplaceRequestTriggerConfiguration{}

// checks if the DaVinciFlowPolicyReplaceRequestTriggerConfiguration type satisfies the LogValuer interface at compile time
var _ slog.LogValuer = &DaVinciFlowPolicyReplaceRequestTriggerConfiguration{}

// DaVinciFlowPolicyReplaceRequestTriggerConfiguration struct for DaVinciFlowPolicyReplaceRequestTriggerConfiguration
type DaVinciFlowPolicyReplaceRequestTriggerConfiguration struct {
	Mfa                  *DaVinciFlowPolicyReplaceRequestTriggerConfigurationMFA      `json:"mfa,omitempty"`
	Pwd                  *DaVinciFlowPolicyReplaceRequestTriggerConfigurationPassword `json:"pwd,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DaVinciFlowPolicyReplaceRequestTriggerConfiguration DaVinciFlowPolicyReplaceRequestTriggerConfiguration

// NewDaVinciFlowPolicyReplaceRequestTriggerConfiguration instantiates a new DaVinciFlowPolicyReplaceRequestTriggerConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDaVinciFlowPolicyReplaceRequestTriggerConfiguration() *DaVinciFlowPolicyReplaceRequestTriggerConfiguration {
	this := DaVinciFlowPolicyReplaceRequestTriggerConfiguration{}
	return &this
}

// NewDaVinciFlowPolicyReplaceRequestTriggerConfigurationWithDefaults instantiates a new DaVinciFlowPolicyReplaceRequestTriggerConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDaVinciFlowPolicyReplaceRequestTriggerConfigurationWithDefaults() *DaVinciFlowPolicyReplaceRequestTriggerConfiguration {
	this := DaVinciFlowPolicyReplaceRequestTriggerConfiguration{}
	return &this
}

// GetMfa returns the Mfa field value if set, zero value otherwise.
func (o *DaVinciFlowPolicyReplaceRequestTriggerConfiguration) GetMfa() DaVinciFlowPolicyReplaceRequestTriggerConfigurationMFA {
	if o == nil || IsNil(o.Mfa) {
		var ret DaVinciFlowPolicyReplaceRequestTriggerConfigurationMFA
		return ret
	}
	return *o.Mfa
}

// GetMfaOk returns a tuple with the Mfa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaVinciFlowPolicyReplaceRequestTriggerConfiguration) GetMfaOk() (*DaVinciFlowPolicyReplaceRequestTriggerConfigurationMFA, bool) {
	if o == nil || IsNil(o.Mfa) {
		return nil, false
	}
	return o.Mfa, true
}

// HasMfa returns a boolean if a field has been set.
func (o *DaVinciFlowPolicyReplaceRequestTriggerConfiguration) HasMfa() bool {
	if o != nil && !IsNil(o.Mfa) {
		return true
	}

	return false
}

// SetMfa gets a reference to the given DaVinciFlowPolicyReplaceRequestTriggerConfigurationMFA and assigns it to the Mfa field.
func (o *DaVinciFlowPolicyReplaceRequestTriggerConfiguration) SetMfa(v DaVinciFlowPolicyReplaceRequestTriggerConfigurationMFA) {
	o.Mfa = &v
}

// GetPwd returns the Pwd field value if set, zero value otherwise.
func (o *DaVinciFlowPolicyReplaceRequestTriggerConfiguration) GetPwd() DaVinciFlowPolicyReplaceRequestTriggerConfigurationPassword {
	if o == nil || IsNil(o.Pwd) {
		var ret DaVinciFlowPolicyReplaceRequestTriggerConfigurationPassword
		return ret
	}
	return *o.Pwd
}

// GetPwdOk returns a tuple with the Pwd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaVinciFlowPolicyReplaceRequestTriggerConfiguration) GetPwdOk() (*DaVinciFlowPolicyReplaceRequestTriggerConfigurationPassword, bool) {
	if o == nil || IsNil(o.Pwd) {
		return nil, false
	}
	return o.Pwd, true
}

// HasPwd returns a boolean if a field has been set.
func (o *DaVinciFlowPolicyReplaceRequestTriggerConfiguration) HasPwd() bool {
	if o != nil && !IsNil(o.Pwd) {
		return true
	}

	return false
}

// SetPwd gets a reference to the given DaVinciFlowPolicyReplaceRequestTriggerConfigurationPassword and assigns it to the Pwd field.
func (o *DaVinciFlowPolicyReplaceRequestTriggerConfiguration) SetPwd(v DaVinciFlowPolicyReplaceRequestTriggerConfigurationPassword) {
	o.Pwd = &v
}

func (o DaVinciFlowPolicyReplaceRequestTriggerConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DaVinciFlowPolicyReplaceRequestTriggerConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Mfa) {
		toSerialize["mfa"] = o.Mfa
	}
	if !IsNil(o.Pwd) {
		toSerialize["pwd"] = o.Pwd
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DaVinciFlowPolicyReplaceRequestTriggerConfiguration) UnmarshalJSON(data []byte) (err error) {
	varDaVinciFlowPolicyReplaceRequestTriggerConfiguration := _DaVinciFlowPolicyReplaceRequestTriggerConfiguration{}

	err = json.Unmarshal(data, &varDaVinciFlowPolicyReplaceRequestTriggerConfiguration)

	if err != nil {
		return err
	}

	*o = DaVinciFlowPolicyReplaceRequestTriggerConfiguration(varDaVinciFlowPolicyReplaceRequestTriggerConfiguration)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "mfa")
		delete(additionalProperties, "pwd")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

func (o DaVinciFlowPolicyReplaceRequestTriggerConfiguration) LogValue() slog.Value {
	logAttrs := make([]slog.Attr, 0)

	if !IsNil(o.Mfa) {
		logAttrs = append(logAttrs, slog.Any("mfa", *o.Mfa))
	}
	if !IsNil(o.Pwd) {
		logAttrs = append(logAttrs, slog.Any("pwd", *o.Pwd))
	}
	logAttrs = append(logAttrs, slog.Any("additionalProperties", o.AdditionalProperties))

	return slog.GroupValue(logAttrs...)
}

type NullableDaVinciFlowPolicyReplaceRequestTriggerConfiguration struct {
	value *DaVinciFlowPolicyReplaceRequestTriggerConfiguration
	isSet bool
}

func (v NullableDaVinciFlowPolicyReplaceRequestTriggerConfiguration) Get() *DaVinciFlowPolicyReplaceRequestTriggerConfiguration {
	return v.value
}

func (v *NullableDaVinciFlowPolicyReplaceRequestTriggerConfiguration) Set(val *DaVinciFlowPolicyReplaceRequestTriggerConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableDaVinciFlowPolicyReplaceRequestTriggerConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableDaVinciFlowPolicyReplaceRequestTriggerConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDaVinciFlowPolicyReplaceRequestTriggerConfiguration(val *DaVinciFlowPolicyReplaceRequestTriggerConfiguration) *NullableDaVinciFlowPolicyReplaceRequestTriggerConfiguration {
	return &NullableDaVinciFlowPolicyReplaceRequestTriggerConfiguration{value: val, isSet: true}
}

func (v NullableDaVinciFlowPolicyReplaceRequestTriggerConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDaVinciFlowPolicyReplaceRequestTriggerConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
