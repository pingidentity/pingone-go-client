// Copyright Â© 2025 Ping Identity Corporation
/*
PingOne Platform User and Configuration Management API - SDK Generator

PingOne is a cloud-based framework for secure identity access management. The PingOne API gives developers the tools to integrate enterprise and third-party applications with the PingOne platform.

Contact: developerexperiences@pingidentity.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
	"fmt"
	"log/slog"
)

// checks if the TooManyRequestsErrorDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TooManyRequestsErrorDetail{}

// checks if the TooManyRequestsErrorDetail type satisfies the LogValuer interface at compile time
var _ slog.LogValuer = &TooManyRequestsErrorDetail{}

// TooManyRequestsErrorDetail struct for TooManyRequestsErrorDetail
type TooManyRequestsErrorDetail struct {
	Code                 TooManyRequestsErrorDetailCode        `json:"code"`
	Message              string                                `json:"message"`
	InnerError           *TooManyRequestsErrorDetailInnerError `json:"innerError,omitempty"`
	Target               *string                               `json:"target,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TooManyRequestsErrorDetail TooManyRequestsErrorDetail

// NewTooManyRequestsErrorDetail instantiates a new TooManyRequestsErrorDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTooManyRequestsErrorDetail(code TooManyRequestsErrorDetailCode, message string) *TooManyRequestsErrorDetail {
	this := TooManyRequestsErrorDetail{}
	this.Code = code
	this.Message = message
	return &this
}

// NewTooManyRequestsErrorDetailWithDefaults instantiates a new TooManyRequestsErrorDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTooManyRequestsErrorDetailWithDefaults() *TooManyRequestsErrorDetail {
	this := TooManyRequestsErrorDetail{}
	return &this
}

// GetCode returns the Code field value
func (o *TooManyRequestsErrorDetail) GetCode() TooManyRequestsErrorDetailCode {
	if o == nil {
		var ret TooManyRequestsErrorDetailCode
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *TooManyRequestsErrorDetail) GetCodeOk() (*TooManyRequestsErrorDetailCode, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *TooManyRequestsErrorDetail) SetCode(v TooManyRequestsErrorDetailCode) {
	o.Code = v
}

// GetMessage returns the Message field value
func (o *TooManyRequestsErrorDetail) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *TooManyRequestsErrorDetail) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *TooManyRequestsErrorDetail) SetMessage(v string) {
	o.Message = v
}

// GetInnerError returns the InnerError field value if set, zero value otherwise.
func (o *TooManyRequestsErrorDetail) GetInnerError() TooManyRequestsErrorDetailInnerError {
	if o == nil || IsNil(o.InnerError) {
		var ret TooManyRequestsErrorDetailInnerError
		return ret
	}
	return *o.InnerError
}

// GetInnerErrorOk returns a tuple with the InnerError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TooManyRequestsErrorDetail) GetInnerErrorOk() (*TooManyRequestsErrorDetailInnerError, bool) {
	if o == nil || IsNil(o.InnerError) {
		return nil, false
	}
	return o.InnerError, true
}

// HasInnerError returns a boolean if a field has been set.
func (o *TooManyRequestsErrorDetail) HasInnerError() bool {
	if o != nil && !IsNil(o.InnerError) {
		return true
	}

	return false
}

// SetInnerError gets a reference to the given TooManyRequestsErrorDetailInnerError and assigns it to the InnerError field.
func (o *TooManyRequestsErrorDetail) SetInnerError(v TooManyRequestsErrorDetailInnerError) {
	o.InnerError = &v
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *TooManyRequestsErrorDetail) GetTarget() string {
	if o == nil || IsNil(o.Target) {
		var ret string
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TooManyRequestsErrorDetail) GetTargetOk() (*string, bool) {
	if o == nil || IsNil(o.Target) {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *TooManyRequestsErrorDetail) HasTarget() bool {
	if o != nil && !IsNil(o.Target) {
		return true
	}

	return false
}

// SetTarget gets a reference to the given string and assigns it to the Target field.
func (o *TooManyRequestsErrorDetail) SetTarget(v string) {
	o.Target = &v
}

func (o TooManyRequestsErrorDetail) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TooManyRequestsErrorDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["code"] = o.Code
	toSerialize["message"] = o.Message
	if !IsNil(o.InnerError) {
		toSerialize["innerError"] = o.InnerError
	}
	if !IsNil(o.Target) {
		toSerialize["target"] = o.Target
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *TooManyRequestsErrorDetail) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"code",
		"message",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTooManyRequestsErrorDetail := _TooManyRequestsErrorDetail{}

	err = json.Unmarshal(data, &varTooManyRequestsErrorDetail)

	if err != nil {
		return err
	}

	*o = TooManyRequestsErrorDetail(varTooManyRequestsErrorDetail)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "code")
		delete(additionalProperties, "message")
		delete(additionalProperties, "innerError")
		delete(additionalProperties, "target")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

func (o TooManyRequestsErrorDetail) LogValue() slog.Value {
	logAttrs := make([]slog.Attr, 0)

	logAttrs = append(logAttrs, slog.Any("code", o.Code))
	logAttrs = append(logAttrs, slog.Any("message", o.Message))
	if !IsNil(o.InnerError) {
		logAttrs = append(logAttrs, slog.Any("innerError", *o.InnerError))
	}
	if !IsNil(o.Target) {
		logAttrs = append(logAttrs, slog.Any("target", *o.Target))
	}
	logAttrs = append(logAttrs, slog.Any("additionalProperties", o.AdditionalProperties))

	return slog.GroupValue(logAttrs...)
}

type NullableTooManyRequestsErrorDetail struct {
	value *TooManyRequestsErrorDetail
	isSet bool
}

func (v NullableTooManyRequestsErrorDetail) Get() *TooManyRequestsErrorDetail {
	return v.value
}

func (v *NullableTooManyRequestsErrorDetail) Set(val *TooManyRequestsErrorDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableTooManyRequestsErrorDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableTooManyRequestsErrorDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTooManyRequestsErrorDetail(val *TooManyRequestsErrorDetail) *NullableTooManyRequestsErrorDetail {
	return &NullableTooManyRequestsErrorDetail{value: val, isSet: true}
}

func (v NullableTooManyRequestsErrorDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTooManyRequestsErrorDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
