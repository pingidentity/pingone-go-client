// Copyright Â© 2025 Ping Identity Corporation
/*
PingOne Platform User and Configuration Management API - SDK Generator

PingOne is a cloud-based framework for secure identity access management. The PingOne API gives developers the tools to integrate enterprise and third-party applications with the PingOne platform.

Contact: devex@pingidentity.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
	"fmt"
)

// DaVinciFlowTriggerRequestType the model 'DaVinciFlowTriggerRequestType'
type DaVinciFlowTriggerRequestType string

// List of DaVinci_Flow_Trigger_Request_Type
const (
	DAVINCIFLOWTRIGGERREQUESTTYPE_AUTHENTICATION DaVinciFlowTriggerRequestType = "AUTHENTICATION"
	DAVINCIFLOWTRIGGERREQUESTTYPE_SCHEDULE       DaVinciFlowTriggerRequestType = "SCHEDULE"
)

// All allowed values of DaVinciFlowTriggerRequestType enum
var AllowedDaVinciFlowTriggerRequestTypeEnumValues = []DaVinciFlowTriggerRequestType{
	"AUTHENTICATION",
	"SCHEDULE",
}

func (v *DaVinciFlowTriggerRequestType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := DaVinciFlowTriggerRequestType(value)
	for _, existing := range AllowedDaVinciFlowTriggerRequestTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	*v = DaVinciFlowTriggerRequestType(fmt.Sprintf("%s", value))
	return nil
}

// NewDaVinciFlowTriggerRequestTypeFromValue returns a pointer to a valid DaVinciFlowTriggerRequestType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDaVinciFlowTriggerRequestTypeFromValue(v string) (*DaVinciFlowTriggerRequestType, error) {
	ev := DaVinciFlowTriggerRequestType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for DaVinciFlowTriggerRequestType: valid values are %v", v, AllowedDaVinciFlowTriggerRequestTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DaVinciFlowTriggerRequestType) IsValid() bool {
	for _, existing := range AllowedDaVinciFlowTriggerRequestTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to DaVinci_Flow_Trigger_Request_Type value
func (v DaVinciFlowTriggerRequestType) Ptr() *DaVinciFlowTriggerRequestType {
	return &v
}

type NullableDaVinciFlowTriggerRequestType struct {
	value *DaVinciFlowTriggerRequestType
	isSet bool
}

func (v NullableDaVinciFlowTriggerRequestType) Get() *DaVinciFlowTriggerRequestType {
	return v.value
}

func (v *NullableDaVinciFlowTriggerRequestType) Set(val *DaVinciFlowTriggerRequestType) {
	v.value = val
	v.isSet = true
}

func (v NullableDaVinciFlowTriggerRequestType) IsSet() bool {
	return v.isSet
}

func (v *NullableDaVinciFlowTriggerRequestType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDaVinciFlowTriggerRequestType(val *DaVinciFlowTriggerRequestType) *NullableDaVinciFlowTriggerRequestType {
	return &NullableDaVinciFlowTriggerRequestType{value: val, isSet: true}
}

func (v NullableDaVinciFlowTriggerRequestType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDaVinciFlowTriggerRequestType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
