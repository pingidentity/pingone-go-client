// Copyright Â© 2025 Ping Identity Corporation
/*
PingOne Platform User and Configuration Management API - SDK Generator

PingOne is a cloud-based framework for secure identity access management. The PingOne API gives developers the tools to integrate enterprise and third-party applications with the PingOne platform.

Contact: developerexperiences@pingidentity.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
	"fmt"
	"log/slog"
)

// checks if the DaVinciFlowPolicyResponseLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DaVinciFlowPolicyResponseLinks{}

// checks if the DaVinciFlowPolicyResponseLinks type satisfies the LogValuer interface at compile time
var _ slog.LogValuer = &DaVinciFlowPolicyResponseLinks{}

// DaVinciFlowPolicyResponseLinks struct for DaVinciFlowPolicyResponseLinks
type DaVinciFlowPolicyResponseLinks struct {
	Self                 JSONHALLink  `json:"self"`
	Environment          JSONHALLink  `json:"environment"`
	FlowIndex            *JSONHALLink `json:"flow.<index>,omitempty"`
	VersionFlowIdIndex   *JSONHALLink `json:"version.<flowId>.<index>,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DaVinciFlowPolicyResponseLinks DaVinciFlowPolicyResponseLinks

// NewDaVinciFlowPolicyResponseLinks instantiates a new DaVinciFlowPolicyResponseLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDaVinciFlowPolicyResponseLinks(self JSONHALLink, environment JSONHALLink) *DaVinciFlowPolicyResponseLinks {
	this := DaVinciFlowPolicyResponseLinks{}
	this.Self = self
	this.Environment = environment
	return &this
}

// NewDaVinciFlowPolicyResponseLinksWithDefaults instantiates a new DaVinciFlowPolicyResponseLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDaVinciFlowPolicyResponseLinksWithDefaults() *DaVinciFlowPolicyResponseLinks {
	this := DaVinciFlowPolicyResponseLinks{}
	return &this
}

// GetSelf returns the Self field value
func (o *DaVinciFlowPolicyResponseLinks) GetSelf() JSONHALLink {
	if o == nil {
		var ret JSONHALLink
		return ret
	}

	return o.Self
}

// GetSelfOk returns a tuple with the Self field value
// and a boolean to check if the value has been set.
func (o *DaVinciFlowPolicyResponseLinks) GetSelfOk() (*JSONHALLink, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Self, true
}

// SetSelf sets field value
func (o *DaVinciFlowPolicyResponseLinks) SetSelf(v JSONHALLink) {
	o.Self = v
}

// GetEnvironment returns the Environment field value
func (o *DaVinciFlowPolicyResponseLinks) GetEnvironment() JSONHALLink {
	if o == nil {
		var ret JSONHALLink
		return ret
	}

	return o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value
// and a boolean to check if the value has been set.
func (o *DaVinciFlowPolicyResponseLinks) GetEnvironmentOk() (*JSONHALLink, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Environment, true
}

// SetEnvironment sets field value
func (o *DaVinciFlowPolicyResponseLinks) SetEnvironment(v JSONHALLink) {
	o.Environment = v
}

// GetFlowIndex returns the FlowIndex field value if set, zero value otherwise.
func (o *DaVinciFlowPolicyResponseLinks) GetFlowIndex() JSONHALLink {
	if o == nil || IsNil(o.FlowIndex) {
		var ret JSONHALLink
		return ret
	}
	return *o.FlowIndex
}

// GetFlowIndexOk returns a tuple with the FlowIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaVinciFlowPolicyResponseLinks) GetFlowIndexOk() (*JSONHALLink, bool) {
	if o == nil || IsNil(o.FlowIndex) {
		return nil, false
	}
	return o.FlowIndex, true
}

// HasFlowIndex returns a boolean if a field has been set.
func (o *DaVinciFlowPolicyResponseLinks) HasFlowIndex() bool {
	if o != nil && !IsNil(o.FlowIndex) {
		return true
	}

	return false
}

// SetFlowIndex gets a reference to the given JSONHALLink and assigns it to the FlowIndex field.
func (o *DaVinciFlowPolicyResponseLinks) SetFlowIndex(v JSONHALLink) {
	o.FlowIndex = &v
}

// GetVersionFlowIdIndex returns the VersionFlowIdIndex field value if set, zero value otherwise.
func (o *DaVinciFlowPolicyResponseLinks) GetVersionFlowIdIndex() JSONHALLink {
	if o == nil || IsNil(o.VersionFlowIdIndex) {
		var ret JSONHALLink
		return ret
	}
	return *o.VersionFlowIdIndex
}

// GetVersionFlowIdIndexOk returns a tuple with the VersionFlowIdIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaVinciFlowPolicyResponseLinks) GetVersionFlowIdIndexOk() (*JSONHALLink, bool) {
	if o == nil || IsNil(o.VersionFlowIdIndex) {
		return nil, false
	}
	return o.VersionFlowIdIndex, true
}

// HasVersionFlowIdIndex returns a boolean if a field has been set.
func (o *DaVinciFlowPolicyResponseLinks) HasVersionFlowIdIndex() bool {
	if o != nil && !IsNil(o.VersionFlowIdIndex) {
		return true
	}

	return false
}

// SetVersionFlowIdIndex gets a reference to the given JSONHALLink and assigns it to the VersionFlowIdIndex field.
func (o *DaVinciFlowPolicyResponseLinks) SetVersionFlowIdIndex(v JSONHALLink) {
	o.VersionFlowIdIndex = &v
}

func (o DaVinciFlowPolicyResponseLinks) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DaVinciFlowPolicyResponseLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["self"] = o.Self
	toSerialize["environment"] = o.Environment
	if !IsNil(o.FlowIndex) {
		toSerialize["flow.<index>"] = o.FlowIndex
	}
	if !IsNil(o.VersionFlowIdIndex) {
		toSerialize["version.<flowId>.<index>"] = o.VersionFlowIdIndex
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DaVinciFlowPolicyResponseLinks) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"self",
		"environment",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDaVinciFlowPolicyResponseLinks := _DaVinciFlowPolicyResponseLinks{}

	err = json.Unmarshal(data, &varDaVinciFlowPolicyResponseLinks)

	if err != nil {
		return err
	}

	*o = DaVinciFlowPolicyResponseLinks(varDaVinciFlowPolicyResponseLinks)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "self")
		delete(additionalProperties, "environment")
		delete(additionalProperties, "flow.<index>")
		delete(additionalProperties, "version.<flowId>.<index>")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

func (o DaVinciFlowPolicyResponseLinks) LogValue() slog.Value {
	logAttrs := make([]slog.Attr, 0)

	logAttrs = append(logAttrs, slog.Any("self", o.Self))
	logAttrs = append(logAttrs, slog.Any("environment", o.Environment))
	if !IsNil(o.FlowIndex) {
		logAttrs = append(logAttrs, slog.Any("flow.&lt;index&gt;", *o.FlowIndex))
	}
	if !IsNil(o.VersionFlowIdIndex) {
		logAttrs = append(logAttrs, slog.Any("version.&lt;flowId&gt;.&lt;index&gt;", *o.VersionFlowIdIndex))
	}
	logAttrs = append(logAttrs, slog.Any("additionalProperties", o.AdditionalProperties))

	return slog.GroupValue(logAttrs...)
}

type NullableDaVinciFlowPolicyResponseLinks struct {
	value *DaVinciFlowPolicyResponseLinks
	isSet bool
}

func (v NullableDaVinciFlowPolicyResponseLinks) Get() *DaVinciFlowPolicyResponseLinks {
	return v.value
}

func (v *NullableDaVinciFlowPolicyResponseLinks) Set(val *DaVinciFlowPolicyResponseLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableDaVinciFlowPolicyResponseLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableDaVinciFlowPolicyResponseLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDaVinciFlowPolicyResponseLinks(val *DaVinciFlowPolicyResponseLinks) *NullableDaVinciFlowPolicyResponseLinks {
	return &NullableDaVinciFlowPolicyResponseLinks{value: val, isSet: true}
}

func (v NullableDaVinciFlowPolicyResponseLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDaVinciFlowPolicyResponseLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
