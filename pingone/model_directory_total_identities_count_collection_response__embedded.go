// Copyright Â© 2025 Ping Identity Corporation
/*
PingOne Platform User and Configuration Management API - SDK Generator

PingOne is a cloud-based framework for secure identity access management. The PingOne API gives developers the tools to integrate enterprise and third-party applications with the PingOne platform.

Contact: developerexperiences@pingidentity.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
	"log/slog"
)

// checks if the DirectoryTotalIdentitiesCountCollectionResponseEmbedded type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DirectoryTotalIdentitiesCountCollectionResponseEmbedded{}

// checks if the DirectoryTotalIdentitiesCountCollectionResponseEmbedded type satisfies the LogValuer interface at compile time
var _ slog.LogValuer = &DirectoryTotalIdentitiesCountCollectionResponseEmbedded{}

// DirectoryTotalIdentitiesCountCollectionResponseEmbedded struct for DirectoryTotalIdentitiesCountCollectionResponseEmbedded
type DirectoryTotalIdentitiesCountCollectionResponseEmbedded struct {
	TotalIdentities      []DirectoryTotalIdentitiesCountResponse `json:"totalIdentities,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DirectoryTotalIdentitiesCountCollectionResponseEmbedded DirectoryTotalIdentitiesCountCollectionResponseEmbedded

// NewDirectoryTotalIdentitiesCountCollectionResponseEmbedded instantiates a new DirectoryTotalIdentitiesCountCollectionResponseEmbedded object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDirectoryTotalIdentitiesCountCollectionResponseEmbedded() *DirectoryTotalIdentitiesCountCollectionResponseEmbedded {
	this := DirectoryTotalIdentitiesCountCollectionResponseEmbedded{}
	return &this
}

// NewDirectoryTotalIdentitiesCountCollectionResponseEmbeddedWithDefaults instantiates a new DirectoryTotalIdentitiesCountCollectionResponseEmbedded object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDirectoryTotalIdentitiesCountCollectionResponseEmbeddedWithDefaults() *DirectoryTotalIdentitiesCountCollectionResponseEmbedded {
	this := DirectoryTotalIdentitiesCountCollectionResponseEmbedded{}
	return &this
}

// GetTotalIdentities returns the TotalIdentities field value if set, zero value otherwise.
func (o *DirectoryTotalIdentitiesCountCollectionResponseEmbedded) GetTotalIdentities() []DirectoryTotalIdentitiesCountResponse {
	if o == nil || IsNil(o.TotalIdentities) {
		var ret []DirectoryTotalIdentitiesCountResponse
		return ret
	}
	return o.TotalIdentities
}

// GetTotalIdentitiesOk returns a tuple with the TotalIdentities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectoryTotalIdentitiesCountCollectionResponseEmbedded) GetTotalIdentitiesOk() ([]DirectoryTotalIdentitiesCountResponse, bool) {
	if o == nil || IsNil(o.TotalIdentities) {
		return nil, false
	}
	return o.TotalIdentities, true
}

// HasTotalIdentities returns a boolean if a field has been set.
func (o *DirectoryTotalIdentitiesCountCollectionResponseEmbedded) HasTotalIdentities() bool {
	if o != nil && !IsNil(o.TotalIdentities) {
		return true
	}

	return false
}

// SetTotalIdentities gets a reference to the given []DirectoryTotalIdentitiesCountResponse and assigns it to the TotalIdentities field.
func (o *DirectoryTotalIdentitiesCountCollectionResponseEmbedded) SetTotalIdentities(v []DirectoryTotalIdentitiesCountResponse) {
	o.TotalIdentities = v
}

func (o DirectoryTotalIdentitiesCountCollectionResponseEmbedded) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DirectoryTotalIdentitiesCountCollectionResponseEmbedded) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TotalIdentities) {
		toSerialize["totalIdentities"] = o.TotalIdentities
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DirectoryTotalIdentitiesCountCollectionResponseEmbedded) UnmarshalJSON(data []byte) (err error) {
	varDirectoryTotalIdentitiesCountCollectionResponseEmbedded := _DirectoryTotalIdentitiesCountCollectionResponseEmbedded{}

	err = json.Unmarshal(data, &varDirectoryTotalIdentitiesCountCollectionResponseEmbedded)

	if err != nil {
		return err
	}

	*o = DirectoryTotalIdentitiesCountCollectionResponseEmbedded(varDirectoryTotalIdentitiesCountCollectionResponseEmbedded)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "totalIdentities")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

func (o DirectoryTotalIdentitiesCountCollectionResponseEmbedded) LogValue() slog.Value {
	logAttrs := make([]slog.Attr, 0)

	if !IsNil(o.TotalIdentities) {
		logAttrs = append(logAttrs, slog.Any("totalIdentities", o.TotalIdentities))
	}
	logAttrs = append(logAttrs, slog.Any("additionalProperties", o.AdditionalProperties))

	return slog.GroupValue(logAttrs...)
}

type NullableDirectoryTotalIdentitiesCountCollectionResponseEmbedded struct {
	value *DirectoryTotalIdentitiesCountCollectionResponseEmbedded
	isSet bool
}

func (v NullableDirectoryTotalIdentitiesCountCollectionResponseEmbedded) Get() *DirectoryTotalIdentitiesCountCollectionResponseEmbedded {
	return v.value
}

func (v *NullableDirectoryTotalIdentitiesCountCollectionResponseEmbedded) Set(val *DirectoryTotalIdentitiesCountCollectionResponseEmbedded) {
	v.value = val
	v.isSet = true
}

func (v NullableDirectoryTotalIdentitiesCountCollectionResponseEmbedded) IsSet() bool {
	return v.isSet
}

func (v *NullableDirectoryTotalIdentitiesCountCollectionResponseEmbedded) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDirectoryTotalIdentitiesCountCollectionResponseEmbedded(val *DirectoryTotalIdentitiesCountCollectionResponseEmbedded) *NullableDirectoryTotalIdentitiesCountCollectionResponseEmbedded {
	return &NullableDirectoryTotalIdentitiesCountCollectionResponseEmbedded{value: val, isSet: true}
}

func (v NullableDirectoryTotalIdentitiesCountCollectionResponseEmbedded) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDirectoryTotalIdentitiesCountCollectionResponseEmbedded) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
