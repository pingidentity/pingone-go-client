// Copyright Â© 2025 Ping Identity Corporation
/*
PingOne Platform User and Configuration Management API - Go SDK

PingOne is a cloud-based framework for secure identity access management. The PingOne API gives developers the tools to integrate enterprise and third-party applications with the PingOne platform.

Contact: developerexperiences@pingidentity.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
	"log/slog"
)

// checks if the ResourceRelationshipGeneric type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceRelationshipGeneric{}

// checks if the ResourceRelationshipGeneric type satisfies the LogValuer interface at compile time
var _ slog.LogValuer = &ResourceRelationshipGeneric{}

// ResourceRelationshipGeneric struct for ResourceRelationshipGeneric
type ResourceRelationshipGeneric struct {
	Id                   *string `json:"id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ResourceRelationshipGeneric ResourceRelationshipGeneric

// NewResourceRelationshipGeneric instantiates a new ResourceRelationshipGeneric object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceRelationshipGeneric() *ResourceRelationshipGeneric {
	this := ResourceRelationshipGeneric{}
	return &this
}

// NewResourceRelationshipGenericWithDefaults instantiates a new ResourceRelationshipGeneric object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceRelationshipGenericWithDefaults() *ResourceRelationshipGeneric {
	this := ResourceRelationshipGeneric{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ResourceRelationshipGeneric) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceRelationshipGeneric) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ResourceRelationshipGeneric) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ResourceRelationshipGeneric) SetId(v string) {
	o.Id = &v
}

func (o ResourceRelationshipGeneric) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceRelationshipGeneric) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ResourceRelationshipGeneric) UnmarshalJSON(data []byte) (err error) {
	varResourceRelationshipGeneric := _ResourceRelationshipGeneric{}

	err = json.Unmarshal(data, &varResourceRelationshipGeneric)

	if err != nil {
		return err
	}

	*o = ResourceRelationshipGeneric(varResourceRelationshipGeneric)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

func (o ResourceRelationshipGeneric) LogValue() slog.Value {
	logAttrs := make([]slog.Attr, 0)

	if !IsNil(o.Id) {
		logAttrs = append(logAttrs, slog.Any("id", *o.Id))
	}
	logAttrs = append(logAttrs, slog.Any("additionalProperties", o.AdditionalProperties))

	return slog.GroupValue(logAttrs...)
}

type NullableResourceRelationshipGeneric struct {
	value *ResourceRelationshipGeneric
	isSet bool
}

func (v NullableResourceRelationshipGeneric) Get() *ResourceRelationshipGeneric {
	return v.value
}

func (v *NullableResourceRelationshipGeneric) Set(val *ResourceRelationshipGeneric) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceRelationshipGeneric) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceRelationshipGeneric) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceRelationshipGeneric(val *ResourceRelationshipGeneric) *NullableResourceRelationshipGeneric {
	return &NullableResourceRelationshipGeneric{value: val, isSet: true}
}

func (v NullableResourceRelationshipGeneric) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceRelationshipGeneric) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
