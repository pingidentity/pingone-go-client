// Copyright Â© 2025 Ping Identity Corporation
/*
PingOne Platform User and Configuration Management API - SDK Generator

PingOne is a cloud-based framework for secure identity access management. The PingOne API gives developers the tools to integrate enterprise and third-party applications with the PingOne platform.

Contact: devex@pingidentity.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
	"log/slog"
)

// checks if the SnapshotResourceInformation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SnapshotResourceInformation{}

// checks if the SnapshotResourceInformation type satisfies the LogValuer interface at compile time
var _ slog.LogValuer = &SnapshotResourceInformation{}

// SnapshotResourceInformation struct for SnapshotResourceInformation
type SnapshotResourceInformation struct {
	Category             *string `json:"category,omitempty"`
	Id                   *string `json:"id,omitempty"`
	Name                 *string `json:"name,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SnapshotResourceInformation SnapshotResourceInformation

// NewSnapshotResourceInformation instantiates a new SnapshotResourceInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnapshotResourceInformation() *SnapshotResourceInformation {
	this := SnapshotResourceInformation{}
	return &this
}

// NewSnapshotResourceInformationWithDefaults instantiates a new SnapshotResourceInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnapshotResourceInformationWithDefaults() *SnapshotResourceInformation {
	this := SnapshotResourceInformation{}
	return &this
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *SnapshotResourceInformation) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotResourceInformation) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *SnapshotResourceInformation) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *SnapshotResourceInformation) SetCategory(v string) {
	o.Category = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SnapshotResourceInformation) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotResourceInformation) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SnapshotResourceInformation) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SnapshotResourceInformation) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SnapshotResourceInformation) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotResourceInformation) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SnapshotResourceInformation) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SnapshotResourceInformation) SetName(v string) {
	o.Name = &v
}

func (o SnapshotResourceInformation) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SnapshotResourceInformation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SnapshotResourceInformation) UnmarshalJSON(data []byte) (err error) {
	varSnapshotResourceInformation := _SnapshotResourceInformation{}

	err = json.Unmarshal(data, &varSnapshotResourceInformation)

	if err != nil {
		return err
	}

	*o = SnapshotResourceInformation(varSnapshotResourceInformation)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "category")
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

func (o SnapshotResourceInformation) LogValue() slog.Value {
	logAttrs := make([]slog.Attr, 0)

	if !IsNil(o.Category) {
		logAttrs = append(logAttrs, slog.Any("category", *o.Category))
	}
	if !IsNil(o.Id) {
		logAttrs = append(logAttrs, slog.Any("id", *o.Id))
	}
	if !IsNil(o.Name) {
		logAttrs = append(logAttrs, slog.Any("name", *o.Name))
	}
	logAttrs = append(logAttrs, slog.Any("additionalProperties", o.AdditionalProperties))

	return slog.GroupValue(logAttrs...)
}

type NullableSnapshotResourceInformation struct {
	value *SnapshotResourceInformation
	isSet bool
}

func (v NullableSnapshotResourceInformation) Get() *SnapshotResourceInformation {
	return v.value
}

func (v *NullableSnapshotResourceInformation) Set(val *SnapshotResourceInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableSnapshotResourceInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableSnapshotResourceInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnapshotResourceInformation(val *SnapshotResourceInformation) *NullableSnapshotResourceInformation {
	return &NullableSnapshotResourceInformation{value: val, isSet: true}
}

func (v NullableSnapshotResourceInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnapshotResourceInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
