// Copyright Â© 2025 Ping Identity Corporation
/*
PingOne Platform User and Configuration Management API - Go SDK

PingOne is a cloud-based framework for secure identity access management. The PingOne API gives developers the tools to integrate enterprise and third-party applications with the PingOne platform.

Contact: developerexperiences@pingidentity.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
	"log/slog"
	"time"
)

// checks if the TotalIdentitiesCountResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TotalIdentitiesCountResponse{}

// checks if the TotalIdentitiesCountResponse type satisfies the LogValuer interface at compile time
var _ slog.LogValuer = &TotalIdentitiesCountResponse{}

// TotalIdentitiesCountResponse struct for TotalIdentitiesCountResponse
type TotalIdentitiesCountResponse struct {
	Date                 *time.Time `json:"date,omitempty"`
	TotalIdentities      *int32     `json:"totalIdentities,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TotalIdentitiesCountResponse TotalIdentitiesCountResponse

// NewTotalIdentitiesCountResponse instantiates a new TotalIdentitiesCountResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTotalIdentitiesCountResponse() *TotalIdentitiesCountResponse {
	this := TotalIdentitiesCountResponse{}
	return &this
}

// NewTotalIdentitiesCountResponseWithDefaults instantiates a new TotalIdentitiesCountResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTotalIdentitiesCountResponseWithDefaults() *TotalIdentitiesCountResponse {
	this := TotalIdentitiesCountResponse{}
	return &this
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *TotalIdentitiesCountResponse) GetDate() time.Time {
	if o == nil || IsNil(o.Date) {
		var ret time.Time
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotalIdentitiesCountResponse) GetDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *TotalIdentitiesCountResponse) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given time.Time and assigns it to the Date field.
func (o *TotalIdentitiesCountResponse) SetDate(v time.Time) {
	o.Date = &v
}

// GetTotalIdentities returns the TotalIdentities field value if set, zero value otherwise.
func (o *TotalIdentitiesCountResponse) GetTotalIdentities() int32 {
	if o == nil || IsNil(o.TotalIdentities) {
		var ret int32
		return ret
	}
	return *o.TotalIdentities
}

// GetTotalIdentitiesOk returns a tuple with the TotalIdentities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotalIdentitiesCountResponse) GetTotalIdentitiesOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalIdentities) {
		return nil, false
	}
	return o.TotalIdentities, true
}

// HasTotalIdentities returns a boolean if a field has been set.
func (o *TotalIdentitiesCountResponse) HasTotalIdentities() bool {
	if o != nil && !IsNil(o.TotalIdentities) {
		return true
	}

	return false
}

// SetTotalIdentities gets a reference to the given int32 and assigns it to the TotalIdentities field.
func (o *TotalIdentitiesCountResponse) SetTotalIdentities(v int32) {
	o.TotalIdentities = &v
}

func (o TotalIdentitiesCountResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TotalIdentitiesCountResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Date) {
		toSerialize["date"] = o.Date
	}
	if !IsNil(o.TotalIdentities) {
		toSerialize["totalIdentities"] = o.TotalIdentities
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *TotalIdentitiesCountResponse) UnmarshalJSON(data []byte) (err error) {
	varTotalIdentitiesCountResponse := _TotalIdentitiesCountResponse{}

	err = json.Unmarshal(data, &varTotalIdentitiesCountResponse)

	if err != nil {
		return err
	}

	*o = TotalIdentitiesCountResponse(varTotalIdentitiesCountResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "date")
		delete(additionalProperties, "totalIdentities")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

func (o TotalIdentitiesCountResponse) LogValue() slog.Value {
	logAttrs := make([]slog.Attr, 0)

	if !IsNil(o.Date) {
		logAttrs = append(logAttrs, slog.Any("date", *o.Date))
	}
	if !IsNil(o.TotalIdentities) {
		logAttrs = append(logAttrs, slog.Any("totalIdentities", *o.TotalIdentities))
	}
	logAttrs = append(logAttrs, slog.Any("additionalProperties", o.AdditionalProperties))

	return slog.GroupValue(logAttrs...)
}

type NullableTotalIdentitiesCountResponse struct {
	value *TotalIdentitiesCountResponse
	isSet bool
}

func (v NullableTotalIdentitiesCountResponse) Get() *TotalIdentitiesCountResponse {
	return v.value
}

func (v *NullableTotalIdentitiesCountResponse) Set(val *TotalIdentitiesCountResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTotalIdentitiesCountResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTotalIdentitiesCountResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTotalIdentitiesCountResponse(val *TotalIdentitiesCountResponse) *NullableTotalIdentitiesCountResponse {
	return &NullableTotalIdentitiesCountResponse{value: val, isSet: true}
}

func (v NullableTotalIdentitiesCountResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTotalIdentitiesCountResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
