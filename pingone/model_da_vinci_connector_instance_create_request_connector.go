// Copyright Â© 2025 Ping Identity Corporation
/*
PingOne User and Configuration Management API

The PingOne User and Configuration Management API provides the interface to configure and manage users in the PingOne directory and the administration configuration of your PingOne organization.

Contact: developerexperiences@pingidentity.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
	"log/slog"
)

// checks if the DaVinciConnectorInstanceCreateRequestConnector type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DaVinciConnectorInstanceCreateRequestConnector{}

// checks if the DaVinciConnectorInstanceCreateRequestConnector type satisfies the LogValuer interface at compile time
var _ slog.LogValuer = &DaVinciConnectorInstanceCreateRequestConnector{}

// DaVinciConnectorInstanceCreateRequestConnector struct for DaVinciConnectorInstanceCreateRequestConnector
type DaVinciConnectorInstanceCreateRequestConnector struct {
	Id                   *string `json:"id,omitempty" validate:"regexp=^(?=\\\\S)[\\\\p{L}\\\\p{M}\\\\p{N}\\\\p{So}\\/.'_ -]*(?!.*((<)|(\\\\$\\\\{)))"`
	AdditionalProperties map[string]interface{}
}

type _DaVinciConnectorInstanceCreateRequestConnector DaVinciConnectorInstanceCreateRequestConnector

// NewDaVinciConnectorInstanceCreateRequestConnector instantiates a new DaVinciConnectorInstanceCreateRequestConnector object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDaVinciConnectorInstanceCreateRequestConnector() *DaVinciConnectorInstanceCreateRequestConnector {
	this := DaVinciConnectorInstanceCreateRequestConnector{}
	return &this
}

// NewDaVinciConnectorInstanceCreateRequestConnectorWithDefaults instantiates a new DaVinciConnectorInstanceCreateRequestConnector object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDaVinciConnectorInstanceCreateRequestConnectorWithDefaults() *DaVinciConnectorInstanceCreateRequestConnector {
	this := DaVinciConnectorInstanceCreateRequestConnector{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DaVinciConnectorInstanceCreateRequestConnector) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaVinciConnectorInstanceCreateRequestConnector) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DaVinciConnectorInstanceCreateRequestConnector) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DaVinciConnectorInstanceCreateRequestConnector) SetId(v string) {
	o.Id = &v
}

func (o DaVinciConnectorInstanceCreateRequestConnector) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DaVinciConnectorInstanceCreateRequestConnector) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DaVinciConnectorInstanceCreateRequestConnector) UnmarshalJSON(data []byte) (err error) {
	varDaVinciConnectorInstanceCreateRequestConnector := _DaVinciConnectorInstanceCreateRequestConnector{}

	err = json.Unmarshal(data, &varDaVinciConnectorInstanceCreateRequestConnector)

	if err != nil {
		return err
	}

	*o = DaVinciConnectorInstanceCreateRequestConnector(varDaVinciConnectorInstanceCreateRequestConnector)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

func (o DaVinciConnectorInstanceCreateRequestConnector) LogValue() slog.Value {
	logAttrs := make([]slog.Attr, 0)

	if !IsNil(o.Id) {
		logAttrs = append(logAttrs, slog.Any("id", *o.Id))
	}
	logAttrs = append(logAttrs, slog.Any("additionalProperties", o.AdditionalProperties))

	return slog.GroupValue(logAttrs...)
}

type NullableDaVinciConnectorInstanceCreateRequestConnector struct {
	value *DaVinciConnectorInstanceCreateRequestConnector
	isSet bool
}

func (v NullableDaVinciConnectorInstanceCreateRequestConnector) Get() *DaVinciConnectorInstanceCreateRequestConnector {
	return v.value
}

func (v *NullableDaVinciConnectorInstanceCreateRequestConnector) Set(val *DaVinciConnectorInstanceCreateRequestConnector) {
	v.value = val
	v.isSet = true
}

func (v NullableDaVinciConnectorInstanceCreateRequestConnector) IsSet() bool {
	return v.isSet
}

func (v *NullableDaVinciConnectorInstanceCreateRequestConnector) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDaVinciConnectorInstanceCreateRequestConnector(val *DaVinciConnectorInstanceCreateRequestConnector) *NullableDaVinciConnectorInstanceCreateRequestConnector {
	return &NullableDaVinciConnectorInstanceCreateRequestConnector{value: val, isSet: true}
}

func (v NullableDaVinciConnectorInstanceCreateRequestConnector) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDaVinciConnectorInstanceCreateRequestConnector) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
