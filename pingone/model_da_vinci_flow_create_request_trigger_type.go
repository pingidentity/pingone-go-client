// Copyright Â© 2025 Ping Identity Corporation
/*
PingOne Platform User and Configuration Management API - SDK Generator

PingOne is a cloud-based framework for secure identity access management. The PingOne API gives developers the tools to integrate enterprise and third-party applications with the PingOne platform.

Contact: devex@pingidentity.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
	"fmt"
)

// DaVinciFlowCreateRequestTriggerType the model 'DaVinciFlowCreateRequestTriggerType'
type DaVinciFlowCreateRequestTriggerType string

// List of DaVinci_Flow_Create_Request_Trigger_Type
const (
	DAVINCIFLOWCREATEREQUESTTRIGGERTYPE_AUTHENTICATION DaVinciFlowCreateRequestTriggerType = "AUTHENTICATION"
	DAVINCIFLOWCREATEREQUESTTRIGGERTYPE_SCHEDULE       DaVinciFlowCreateRequestTriggerType = "SCHEDULE"
)

// All allowed values of DaVinciFlowCreateRequestTriggerType enum
var AllowedDaVinciFlowCreateRequestTriggerTypeEnumValues = []DaVinciFlowCreateRequestTriggerType{
	"AUTHENTICATION",
	"SCHEDULE",
}

func (v *DaVinciFlowCreateRequestTriggerType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := DaVinciFlowCreateRequestTriggerType(value)
	for _, existing := range AllowedDaVinciFlowCreateRequestTriggerTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	*v = DaVinciFlowCreateRequestTriggerType(fmt.Sprintf("%s", value))
	return nil
}

// NewDaVinciFlowCreateRequestTriggerTypeFromValue returns a pointer to a valid DaVinciFlowCreateRequestTriggerType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDaVinciFlowCreateRequestTriggerTypeFromValue(v string) (*DaVinciFlowCreateRequestTriggerType, error) {
	ev := DaVinciFlowCreateRequestTriggerType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for DaVinciFlowCreateRequestTriggerType: valid values are %v", v, AllowedDaVinciFlowCreateRequestTriggerTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DaVinciFlowCreateRequestTriggerType) IsValid() bool {
	for _, existing := range AllowedDaVinciFlowCreateRequestTriggerTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to DaVinci_Flow_Create_Request_Trigger_Type value
func (v DaVinciFlowCreateRequestTriggerType) Ptr() *DaVinciFlowCreateRequestTriggerType {
	return &v
}

type NullableDaVinciFlowCreateRequestTriggerType struct {
	value *DaVinciFlowCreateRequestTriggerType
	isSet bool
}

func (v NullableDaVinciFlowCreateRequestTriggerType) Get() *DaVinciFlowCreateRequestTriggerType {
	return v.value
}

func (v *NullableDaVinciFlowCreateRequestTriggerType) Set(val *DaVinciFlowCreateRequestTriggerType) {
	v.value = val
	v.isSet = true
}

func (v NullableDaVinciFlowCreateRequestTriggerType) IsSet() bool {
	return v.isSet
}

func (v *NullableDaVinciFlowCreateRequestTriggerType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDaVinciFlowCreateRequestTriggerType(val *DaVinciFlowCreateRequestTriggerType) *NullableDaVinciFlowCreateRequestTriggerType {
	return &NullableDaVinciFlowCreateRequestTriggerType{value: val, isSet: true}
}

func (v NullableDaVinciFlowCreateRequestTriggerType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDaVinciFlowCreateRequestTriggerType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
