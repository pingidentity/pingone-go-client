// Copyright Â© 2025 Ping Identity Corporation
/*
PingOne Platform User and Configuration Management API - SDK Generator

PingOne is a cloud-based framework for secure identity access management. The PingOne API gives developers the tools to integrate enterprise and third-party applications with the PingOne platform.

Contact: devex@pingidentity.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
	"log/slog"
)

// checks if the DaVinciImportFlowResponseOutputSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DaVinciImportFlowResponseOutputSchema{}

// checks if the DaVinciImportFlowResponseOutputSchema type satisfies the LogValuer interface at compile time
var _ slog.LogValuer = &DaVinciImportFlowResponseOutputSchema{}

// DaVinciImportFlowResponseOutputSchema struct for DaVinciImportFlowResponseOutputSchema
type DaVinciImportFlowResponseOutputSchema struct {
}

// NewDaVinciImportFlowResponseOutputSchema instantiates a new DaVinciImportFlowResponseOutputSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDaVinciImportFlowResponseOutputSchema() *DaVinciImportFlowResponseOutputSchema {
	this := DaVinciImportFlowResponseOutputSchema{}
	return &this
}

// NewDaVinciImportFlowResponseOutputSchemaWithDefaults instantiates a new DaVinciImportFlowResponseOutputSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDaVinciImportFlowResponseOutputSchemaWithDefaults() *DaVinciImportFlowResponseOutputSchema {
	this := DaVinciImportFlowResponseOutputSchema{}
	return &this
}

func (o DaVinciImportFlowResponseOutputSchema) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DaVinciImportFlowResponseOutputSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	return toSerialize, nil
}

func (o DaVinciImportFlowResponseOutputSchema) LogValue() slog.Value {
	logAttrs := make([]slog.Attr, 0)

	return slog.GroupValue(logAttrs...)
}

type NullableDaVinciImportFlowResponseOutputSchema struct {
	value *DaVinciImportFlowResponseOutputSchema
	isSet bool
}

func (v NullableDaVinciImportFlowResponseOutputSchema) Get() *DaVinciImportFlowResponseOutputSchema {
	return v.value
}

func (v *NullableDaVinciImportFlowResponseOutputSchema) Set(val *DaVinciImportFlowResponseOutputSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableDaVinciImportFlowResponseOutputSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableDaVinciImportFlowResponseOutputSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDaVinciImportFlowResponseOutputSchema(val *DaVinciImportFlowResponseOutputSchema) *NullableDaVinciImportFlowResponseOutputSchema {
	return &NullableDaVinciImportFlowResponseOutputSchema{value: val, isSet: true}
}

func (v NullableDaVinciImportFlowResponseOutputSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDaVinciImportFlowResponseOutputSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
