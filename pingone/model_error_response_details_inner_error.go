/*
PingOne User and Configuration Management API

The PingOne User and Configuration Management API provides the interface to configure and manage users in the PingOne directory and the administration configuration of your PingOne organization.

API version: development-2025-05-07T13-55-49
Contact: developerexperiences@pingidentity.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
)

// checks if the ErrorResponseDetailsInnerError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ErrorResponseDetailsInnerError{}

// ErrorResponseDetailsInnerError struct for ErrorResponseDetailsInnerError
type ErrorResponseDetailsInnerError struct {
	AllowedPattern       interface{} `json:"allowedPattern,omitempty"`
	AllowedValues        interface{} `json:"allowedValues,omitempty"`
	MaximumValue         interface{} `json:"maximumValue,omitempty"`
	QuotaLimit           interface{} `json:"quotaLimit,omitempty"`
	QuotaResetTime       interface{} `json:"quotaResetTime,omitempty"`
	RangeMaximumValue    interface{} `json:"rangeMaximumValue,omitempty"`
	RangeMinimumValue    interface{} `json:"rangeMinimumValue,omitempty"`
	RetryAfter           interface{} `json:"retryAfter,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ErrorResponseDetailsInnerError ErrorResponseDetailsInnerError

// NewErrorResponseDetailsInnerError instantiates a new ErrorResponseDetailsInnerError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewErrorResponseDetailsInnerError() *ErrorResponseDetailsInnerError {
	this := ErrorResponseDetailsInnerError{}
	return &this
}

// NewErrorResponseDetailsInnerErrorWithDefaults instantiates a new ErrorResponseDetailsInnerError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewErrorResponseDetailsInnerErrorWithDefaults() *ErrorResponseDetailsInnerError {
	this := ErrorResponseDetailsInnerError{}
	return &this
}

// GetAllowedPattern returns the AllowedPattern field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ErrorResponseDetailsInnerError) GetAllowedPattern() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.AllowedPattern
}

// GetAllowedPatternOk returns a tuple with the AllowedPattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ErrorResponseDetailsInnerError) GetAllowedPatternOk() (*interface{}, bool) {
	if o == nil || IsNil(o.AllowedPattern) {
		return nil, false
	}
	return &o.AllowedPattern, true
}

// HasAllowedPattern returns a boolean if a field has been set.
func (o *ErrorResponseDetailsInnerError) HasAllowedPattern() bool {
	if o != nil && !IsNil(o.AllowedPattern) {
		return true
	}

	return false
}

// SetAllowedPattern gets a reference to the given interface{} and assigns it to the AllowedPattern field.
func (o *ErrorResponseDetailsInnerError) SetAllowedPattern(v interface{}) {
	o.AllowedPattern = v
}

// GetAllowedValues returns the AllowedValues field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ErrorResponseDetailsInnerError) GetAllowedValues() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.AllowedValues
}

// GetAllowedValuesOk returns a tuple with the AllowedValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ErrorResponseDetailsInnerError) GetAllowedValuesOk() (*interface{}, bool) {
	if o == nil || IsNil(o.AllowedValues) {
		return nil, false
	}
	return &o.AllowedValues, true
}

// HasAllowedValues returns a boolean if a field has been set.
func (o *ErrorResponseDetailsInnerError) HasAllowedValues() bool {
	if o != nil && !IsNil(o.AllowedValues) {
		return true
	}

	return false
}

// SetAllowedValues gets a reference to the given interface{} and assigns it to the AllowedValues field.
func (o *ErrorResponseDetailsInnerError) SetAllowedValues(v interface{}) {
	o.AllowedValues = v
}

// GetMaximumValue returns the MaximumValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ErrorResponseDetailsInnerError) GetMaximumValue() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.MaximumValue
}

// GetMaximumValueOk returns a tuple with the MaximumValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ErrorResponseDetailsInnerError) GetMaximumValueOk() (*interface{}, bool) {
	if o == nil || IsNil(o.MaximumValue) {
		return nil, false
	}
	return &o.MaximumValue, true
}

// HasMaximumValue returns a boolean if a field has been set.
func (o *ErrorResponseDetailsInnerError) HasMaximumValue() bool {
	if o != nil && !IsNil(o.MaximumValue) {
		return true
	}

	return false
}

// SetMaximumValue gets a reference to the given interface{} and assigns it to the MaximumValue field.
func (o *ErrorResponseDetailsInnerError) SetMaximumValue(v interface{}) {
	o.MaximumValue = v
}

// GetQuotaLimit returns the QuotaLimit field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ErrorResponseDetailsInnerError) GetQuotaLimit() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.QuotaLimit
}

// GetQuotaLimitOk returns a tuple with the QuotaLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ErrorResponseDetailsInnerError) GetQuotaLimitOk() (*interface{}, bool) {
	if o == nil || IsNil(o.QuotaLimit) {
		return nil, false
	}
	return &o.QuotaLimit, true
}

// HasQuotaLimit returns a boolean if a field has been set.
func (o *ErrorResponseDetailsInnerError) HasQuotaLimit() bool {
	if o != nil && !IsNil(o.QuotaLimit) {
		return true
	}

	return false
}

// SetQuotaLimit gets a reference to the given interface{} and assigns it to the QuotaLimit field.
func (o *ErrorResponseDetailsInnerError) SetQuotaLimit(v interface{}) {
	o.QuotaLimit = v
}

// GetQuotaResetTime returns the QuotaResetTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ErrorResponseDetailsInnerError) GetQuotaResetTime() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.QuotaResetTime
}

// GetQuotaResetTimeOk returns a tuple with the QuotaResetTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ErrorResponseDetailsInnerError) GetQuotaResetTimeOk() (*interface{}, bool) {
	if o == nil || IsNil(o.QuotaResetTime) {
		return nil, false
	}
	return &o.QuotaResetTime, true
}

// HasQuotaResetTime returns a boolean if a field has been set.
func (o *ErrorResponseDetailsInnerError) HasQuotaResetTime() bool {
	if o != nil && !IsNil(o.QuotaResetTime) {
		return true
	}

	return false
}

// SetQuotaResetTime gets a reference to the given interface{} and assigns it to the QuotaResetTime field.
func (o *ErrorResponseDetailsInnerError) SetQuotaResetTime(v interface{}) {
	o.QuotaResetTime = v
}

// GetRangeMaximumValue returns the RangeMaximumValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ErrorResponseDetailsInnerError) GetRangeMaximumValue() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.RangeMaximumValue
}

// GetRangeMaximumValueOk returns a tuple with the RangeMaximumValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ErrorResponseDetailsInnerError) GetRangeMaximumValueOk() (*interface{}, bool) {
	if o == nil || IsNil(o.RangeMaximumValue) {
		return nil, false
	}
	return &o.RangeMaximumValue, true
}

// HasRangeMaximumValue returns a boolean if a field has been set.
func (o *ErrorResponseDetailsInnerError) HasRangeMaximumValue() bool {
	if o != nil && !IsNil(o.RangeMaximumValue) {
		return true
	}

	return false
}

// SetRangeMaximumValue gets a reference to the given interface{} and assigns it to the RangeMaximumValue field.
func (o *ErrorResponseDetailsInnerError) SetRangeMaximumValue(v interface{}) {
	o.RangeMaximumValue = v
}

// GetRangeMinimumValue returns the RangeMinimumValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ErrorResponseDetailsInnerError) GetRangeMinimumValue() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.RangeMinimumValue
}

// GetRangeMinimumValueOk returns a tuple with the RangeMinimumValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ErrorResponseDetailsInnerError) GetRangeMinimumValueOk() (*interface{}, bool) {
	if o == nil || IsNil(o.RangeMinimumValue) {
		return nil, false
	}
	return &o.RangeMinimumValue, true
}

// HasRangeMinimumValue returns a boolean if a field has been set.
func (o *ErrorResponseDetailsInnerError) HasRangeMinimumValue() bool {
	if o != nil && !IsNil(o.RangeMinimumValue) {
		return true
	}

	return false
}

// SetRangeMinimumValue gets a reference to the given interface{} and assigns it to the RangeMinimumValue field.
func (o *ErrorResponseDetailsInnerError) SetRangeMinimumValue(v interface{}) {
	o.RangeMinimumValue = v
}

// GetRetryAfter returns the RetryAfter field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ErrorResponseDetailsInnerError) GetRetryAfter() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.RetryAfter
}

// GetRetryAfterOk returns a tuple with the RetryAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ErrorResponseDetailsInnerError) GetRetryAfterOk() (*interface{}, bool) {
	if o == nil || IsNil(o.RetryAfter) {
		return nil, false
	}
	return &o.RetryAfter, true
}

// HasRetryAfter returns a boolean if a field has been set.
func (o *ErrorResponseDetailsInnerError) HasRetryAfter() bool {
	if o != nil && !IsNil(o.RetryAfter) {
		return true
	}

	return false
}

// SetRetryAfter gets a reference to the given interface{} and assigns it to the RetryAfter field.
func (o *ErrorResponseDetailsInnerError) SetRetryAfter(v interface{}) {
	o.RetryAfter = v
}

func (o ErrorResponseDetailsInnerError) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ErrorResponseDetailsInnerError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowedPattern != nil {
		toSerialize["allowedPattern"] = o.AllowedPattern
	}
	if o.AllowedValues != nil {
		toSerialize["allowedValues"] = o.AllowedValues
	}
	if o.MaximumValue != nil {
		toSerialize["maximumValue"] = o.MaximumValue
	}
	if o.QuotaLimit != nil {
		toSerialize["quotaLimit"] = o.QuotaLimit
	}
	if o.QuotaResetTime != nil {
		toSerialize["quotaResetTime"] = o.QuotaResetTime
	}
	if o.RangeMaximumValue != nil {
		toSerialize["rangeMaximumValue"] = o.RangeMaximumValue
	}
	if o.RangeMinimumValue != nil {
		toSerialize["rangeMinimumValue"] = o.RangeMinimumValue
	}
	if o.RetryAfter != nil {
		toSerialize["retryAfter"] = o.RetryAfter
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ErrorResponseDetailsInnerError) UnmarshalJSON(data []byte) (err error) {
	varErrorResponseDetailsInnerError := _ErrorResponseDetailsInnerError{}

	err = json.Unmarshal(data, &varErrorResponseDetailsInnerError)

	if err != nil {
		return err
	}

	*o = ErrorResponseDetailsInnerError(varErrorResponseDetailsInnerError)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "allowedPattern")
		delete(additionalProperties, "allowedValues")
		delete(additionalProperties, "maximumValue")
		delete(additionalProperties, "quotaLimit")
		delete(additionalProperties, "quotaResetTime")
		delete(additionalProperties, "rangeMaximumValue")
		delete(additionalProperties, "rangeMinimumValue")
		delete(additionalProperties, "retryAfter")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableErrorResponseDetailsInnerError struct {
	value *ErrorResponseDetailsInnerError
	isSet bool
}

func (v NullableErrorResponseDetailsInnerError) Get() *ErrorResponseDetailsInnerError {
	return v.value
}

func (v *NullableErrorResponseDetailsInnerError) Set(val *ErrorResponseDetailsInnerError) {
	v.value = val
	v.isSet = true
}

func (v NullableErrorResponseDetailsInnerError) IsSet() bool {
	return v.isSet
}

func (v *NullableErrorResponseDetailsInnerError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableErrorResponseDetailsInnerError(val *ErrorResponseDetailsInnerError) *NullableErrorResponseDetailsInnerError {
	return &NullableErrorResponseDetailsInnerError{value: val, isSet: true}
}

func (v NullableErrorResponseDetailsInnerError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableErrorResponseDetailsInnerError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
