// Copyright Â© 2025 Ping Identity Corporation
/*
PingOne Platform User and Configuration Management API - SDK Generator

PingOne is a cloud-based framework for secure identity access management. The PingOne API gives developers the tools to integrate enterprise and third-party applications with the PingOne platform.

Contact: devex@pingidentity.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
	"fmt"
	"log/slog"
)

// checks if the DaVinciFlowGraphDataResponseElementsNodePosition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DaVinciFlowGraphDataResponseElementsNodePosition{}

// checks if the DaVinciFlowGraphDataResponseElementsNodePosition type satisfies the LogValuer interface at compile time
var _ slog.LogValuer = &DaVinciFlowGraphDataResponseElementsNodePosition{}

// DaVinciFlowGraphDataResponseElementsNodePosition struct for DaVinciFlowGraphDataResponseElementsNodePosition
type DaVinciFlowGraphDataResponseElementsNodePosition struct {
	X                    float32 `json:"x"`
	Y                    float32 `json:"y"`
	AdditionalProperties map[string]interface{}
}

type _DaVinciFlowGraphDataResponseElementsNodePosition DaVinciFlowGraphDataResponseElementsNodePosition

// NewDaVinciFlowGraphDataResponseElementsNodePosition instantiates a new DaVinciFlowGraphDataResponseElementsNodePosition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDaVinciFlowGraphDataResponseElementsNodePosition(x float32, y float32) *DaVinciFlowGraphDataResponseElementsNodePosition {
	this := DaVinciFlowGraphDataResponseElementsNodePosition{}
	this.X = x
	this.Y = y
	return &this
}

// NewDaVinciFlowGraphDataResponseElementsNodePositionWithDefaults instantiates a new DaVinciFlowGraphDataResponseElementsNodePosition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDaVinciFlowGraphDataResponseElementsNodePositionWithDefaults() *DaVinciFlowGraphDataResponseElementsNodePosition {
	this := DaVinciFlowGraphDataResponseElementsNodePosition{}
	return &this
}

// GetX returns the X field value
func (o *DaVinciFlowGraphDataResponseElementsNodePosition) GetX() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.X
}

// GetXOk returns a tuple with the X field value
// and a boolean to check if the value has been set.
func (o *DaVinciFlowGraphDataResponseElementsNodePosition) GetXOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.X, true
}

// SetX sets field value
func (o *DaVinciFlowGraphDataResponseElementsNodePosition) SetX(v float32) {
	o.X = v
}

// GetY returns the Y field value
func (o *DaVinciFlowGraphDataResponseElementsNodePosition) GetY() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Y
}

// GetYOk returns a tuple with the Y field value
// and a boolean to check if the value has been set.
func (o *DaVinciFlowGraphDataResponseElementsNodePosition) GetYOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Y, true
}

// SetY sets field value
func (o *DaVinciFlowGraphDataResponseElementsNodePosition) SetY(v float32) {
	o.Y = v
}

func (o DaVinciFlowGraphDataResponseElementsNodePosition) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DaVinciFlowGraphDataResponseElementsNodePosition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["x"] = o.X
	toSerialize["y"] = o.Y

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DaVinciFlowGraphDataResponseElementsNodePosition) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"x",
		"y",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDaVinciFlowGraphDataResponseElementsNodePosition := _DaVinciFlowGraphDataResponseElementsNodePosition{}

	err = json.Unmarshal(data, &varDaVinciFlowGraphDataResponseElementsNodePosition)

	if err != nil {
		return err
	}

	*o = DaVinciFlowGraphDataResponseElementsNodePosition(varDaVinciFlowGraphDataResponseElementsNodePosition)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "x")
		delete(additionalProperties, "y")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

func (o DaVinciFlowGraphDataResponseElementsNodePosition) LogValue() slog.Value {
	logAttrs := make([]slog.Attr, 0)

	logAttrs = append(logAttrs, slog.Any("x", o.X))
	logAttrs = append(logAttrs, slog.Any("y", o.Y))
	logAttrs = append(logAttrs, slog.Any("additionalProperties", o.AdditionalProperties))

	return slog.GroupValue(logAttrs...)
}

type NullableDaVinciFlowGraphDataResponseElementsNodePosition struct {
	value *DaVinciFlowGraphDataResponseElementsNodePosition
	isSet bool
}

func (v NullableDaVinciFlowGraphDataResponseElementsNodePosition) Get() *DaVinciFlowGraphDataResponseElementsNodePosition {
	return v.value
}

func (v *NullableDaVinciFlowGraphDataResponseElementsNodePosition) Set(val *DaVinciFlowGraphDataResponseElementsNodePosition) {
	v.value = val
	v.isSet = true
}

func (v NullableDaVinciFlowGraphDataResponseElementsNodePosition) IsSet() bool {
	return v.isSet
}

func (v *NullableDaVinciFlowGraphDataResponseElementsNodePosition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDaVinciFlowGraphDataResponseElementsNodePosition(val *DaVinciFlowGraphDataResponseElementsNodePosition) *NullableDaVinciFlowGraphDataResponseElementsNodePosition {
	return &NullableDaVinciFlowGraphDataResponseElementsNodePosition{value: val, isSet: true}
}

func (v NullableDaVinciFlowGraphDataResponseElementsNodePosition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDaVinciFlowGraphDataResponseElementsNodePosition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
