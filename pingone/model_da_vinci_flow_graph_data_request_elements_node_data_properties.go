// Copyright Â© 2025 Ping Identity Corporation
/*
PingOne Platform User and Configuration Management API - SDK Generator

PingOne is a cloud-based framework for secure identity access management. The PingOne API gives developers the tools to integrate enterprise and third-party applications with the PingOne platform.

Contact: devex@pingidentity.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
	"log/slog"
)

// checks if the DaVinciFlowGraphDataRequestElementsNodeDataProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DaVinciFlowGraphDataRequestElementsNodeDataProperties{}

// checks if the DaVinciFlowGraphDataRequestElementsNodeDataProperties type satisfies the LogValuer interface at compile time
var _ slog.LogValuer = &DaVinciFlowGraphDataRequestElementsNodeDataProperties{}

// DaVinciFlowGraphDataRequestElementsNodeDataProperties struct for DaVinciFlowGraphDataRequestElementsNodeDataProperties
type DaVinciFlowGraphDataRequestElementsNodeDataProperties struct {
	BackgroundColor      *DaVinciFlowGraphDataRequestElementsNodeDataPropertiesBackgroundColor    `json:"backgroundColor,omitempty"`
	Code                 *DaVinciFlowGraphDataRequestElementsNodeDataPropertiesCode               `json:"code,omitempty"`
	CustomCSS            *DaVinciFlowGraphDataRequestElementsNodeDataPropertiesCustomCSS          `json:"customCSS,omitempty"`
	CustomHTML           *DaVinciFlowGraphDataRequestElementsNodeDataPropertiesCustomHTML         `json:"customHTML,omitempty"`
	CustomScript         *DaVinciFlowGraphDataRequestElementsNodeDataPropertiesCustomScript       `json:"customScript,omitempty"`
	FormFieldsList       *DaVinciFlowGraphDataRequestElementsNodeDataPropertiesFormFieldsList     `json:"formFieldsList,omitempty"`
	InputSchema          *DaVinciFlowGraphDataRequestElementsNodeDataPropertiesInputSchema        `json:"inputSchema,omitempty"`
	Message              *DaVinciFlowGraphDataRequestElementsNodeDataPropertiesMessage            `json:"message,omitempty"`
	NodeTitle            *DaVinciFlowGraphDataRequestElementsNodeDataPropertiesNodeTitle          `json:"nodeTitle,omitempty"`
	OutputSchema         *DaVinciFlowGraphDataRequestElementsNodeDataPropertiesOutputSchema       `json:"outputSchema,omitempty"`
	SaveVariables        *DaVinciFlowGraphDataRequestElementsNodeDataPropertiesSaveVariables      `json:"saveVariables,omitempty"`
	ShowContinueButton   *DaVinciFlowGraphDataRequestElementsNodeDataPropertiesShowContinueButton `json:"showContinueButton,omitempty"`
	Type                 *DaVinciFlowGraphDataRequestElementsNodeDataPropertiesType               `json:"type,omitempty"`
	VariableInputList    *DaVinciFlowGraphDataRequestElementsNodeDataPropertiesVariableInputList  `json:"variableInputList,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DaVinciFlowGraphDataRequestElementsNodeDataProperties DaVinciFlowGraphDataRequestElementsNodeDataProperties

// NewDaVinciFlowGraphDataRequestElementsNodeDataProperties instantiates a new DaVinciFlowGraphDataRequestElementsNodeDataProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDaVinciFlowGraphDataRequestElementsNodeDataProperties() *DaVinciFlowGraphDataRequestElementsNodeDataProperties {
	this := DaVinciFlowGraphDataRequestElementsNodeDataProperties{}
	return &this
}

// NewDaVinciFlowGraphDataRequestElementsNodeDataPropertiesWithDefaults instantiates a new DaVinciFlowGraphDataRequestElementsNodeDataProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDaVinciFlowGraphDataRequestElementsNodeDataPropertiesWithDefaults() *DaVinciFlowGraphDataRequestElementsNodeDataProperties {
	this := DaVinciFlowGraphDataRequestElementsNodeDataProperties{}
	return &this
}

// GetBackgroundColor returns the BackgroundColor field value if set, zero value otherwise.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) GetBackgroundColor() DaVinciFlowGraphDataRequestElementsNodeDataPropertiesBackgroundColor {
	if o == nil || IsNil(o.BackgroundColor) {
		var ret DaVinciFlowGraphDataRequestElementsNodeDataPropertiesBackgroundColor
		return ret
	}
	return *o.BackgroundColor
}

// GetBackgroundColorOk returns a tuple with the BackgroundColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) GetBackgroundColorOk() (*DaVinciFlowGraphDataRequestElementsNodeDataPropertiesBackgroundColor, bool) {
	if o == nil || IsNil(o.BackgroundColor) {
		return nil, false
	}
	return o.BackgroundColor, true
}

// HasBackgroundColor returns a boolean if a field has been set.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) HasBackgroundColor() bool {
	if o != nil && !IsNil(o.BackgroundColor) {
		return true
	}

	return false
}

// SetBackgroundColor gets a reference to the given DaVinciFlowGraphDataRequestElementsNodeDataPropertiesBackgroundColor and assigns it to the BackgroundColor field.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) SetBackgroundColor(v DaVinciFlowGraphDataRequestElementsNodeDataPropertiesBackgroundColor) {
	o.BackgroundColor = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) GetCode() DaVinciFlowGraphDataRequestElementsNodeDataPropertiesCode {
	if o == nil || IsNil(o.Code) {
		var ret DaVinciFlowGraphDataRequestElementsNodeDataPropertiesCode
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) GetCodeOk() (*DaVinciFlowGraphDataRequestElementsNodeDataPropertiesCode, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given DaVinciFlowGraphDataRequestElementsNodeDataPropertiesCode and assigns it to the Code field.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) SetCode(v DaVinciFlowGraphDataRequestElementsNodeDataPropertiesCode) {
	o.Code = &v
}

// GetCustomCSS returns the CustomCSS field value if set, zero value otherwise.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) GetCustomCSS() DaVinciFlowGraphDataRequestElementsNodeDataPropertiesCustomCSS {
	if o == nil || IsNil(o.CustomCSS) {
		var ret DaVinciFlowGraphDataRequestElementsNodeDataPropertiesCustomCSS
		return ret
	}
	return *o.CustomCSS
}

// GetCustomCSSOk returns a tuple with the CustomCSS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) GetCustomCSSOk() (*DaVinciFlowGraphDataRequestElementsNodeDataPropertiesCustomCSS, bool) {
	if o == nil || IsNil(o.CustomCSS) {
		return nil, false
	}
	return o.CustomCSS, true
}

// HasCustomCSS returns a boolean if a field has been set.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) HasCustomCSS() bool {
	if o != nil && !IsNil(o.CustomCSS) {
		return true
	}

	return false
}

// SetCustomCSS gets a reference to the given DaVinciFlowGraphDataRequestElementsNodeDataPropertiesCustomCSS and assigns it to the CustomCSS field.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) SetCustomCSS(v DaVinciFlowGraphDataRequestElementsNodeDataPropertiesCustomCSS) {
	o.CustomCSS = &v
}

// GetCustomHTML returns the CustomHTML field value if set, zero value otherwise.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) GetCustomHTML() DaVinciFlowGraphDataRequestElementsNodeDataPropertiesCustomHTML {
	if o == nil || IsNil(o.CustomHTML) {
		var ret DaVinciFlowGraphDataRequestElementsNodeDataPropertiesCustomHTML
		return ret
	}
	return *o.CustomHTML
}

// GetCustomHTMLOk returns a tuple with the CustomHTML field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) GetCustomHTMLOk() (*DaVinciFlowGraphDataRequestElementsNodeDataPropertiesCustomHTML, bool) {
	if o == nil || IsNil(o.CustomHTML) {
		return nil, false
	}
	return o.CustomHTML, true
}

// HasCustomHTML returns a boolean if a field has been set.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) HasCustomHTML() bool {
	if o != nil && !IsNil(o.CustomHTML) {
		return true
	}

	return false
}

// SetCustomHTML gets a reference to the given DaVinciFlowGraphDataRequestElementsNodeDataPropertiesCustomHTML and assigns it to the CustomHTML field.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) SetCustomHTML(v DaVinciFlowGraphDataRequestElementsNodeDataPropertiesCustomHTML) {
	o.CustomHTML = &v
}

// GetCustomScript returns the CustomScript field value if set, zero value otherwise.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) GetCustomScript() DaVinciFlowGraphDataRequestElementsNodeDataPropertiesCustomScript {
	if o == nil || IsNil(o.CustomScript) {
		var ret DaVinciFlowGraphDataRequestElementsNodeDataPropertiesCustomScript
		return ret
	}
	return *o.CustomScript
}

// GetCustomScriptOk returns a tuple with the CustomScript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) GetCustomScriptOk() (*DaVinciFlowGraphDataRequestElementsNodeDataPropertiesCustomScript, bool) {
	if o == nil || IsNil(o.CustomScript) {
		return nil, false
	}
	return o.CustomScript, true
}

// HasCustomScript returns a boolean if a field has been set.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) HasCustomScript() bool {
	if o != nil && !IsNil(o.CustomScript) {
		return true
	}

	return false
}

// SetCustomScript gets a reference to the given DaVinciFlowGraphDataRequestElementsNodeDataPropertiesCustomScript and assigns it to the CustomScript field.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) SetCustomScript(v DaVinciFlowGraphDataRequestElementsNodeDataPropertiesCustomScript) {
	o.CustomScript = &v
}

// GetFormFieldsList returns the FormFieldsList field value if set, zero value otherwise.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) GetFormFieldsList() DaVinciFlowGraphDataRequestElementsNodeDataPropertiesFormFieldsList {
	if o == nil || IsNil(o.FormFieldsList) {
		var ret DaVinciFlowGraphDataRequestElementsNodeDataPropertiesFormFieldsList
		return ret
	}
	return *o.FormFieldsList
}

// GetFormFieldsListOk returns a tuple with the FormFieldsList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) GetFormFieldsListOk() (*DaVinciFlowGraphDataRequestElementsNodeDataPropertiesFormFieldsList, bool) {
	if o == nil || IsNil(o.FormFieldsList) {
		return nil, false
	}
	return o.FormFieldsList, true
}

// HasFormFieldsList returns a boolean if a field has been set.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) HasFormFieldsList() bool {
	if o != nil && !IsNil(o.FormFieldsList) {
		return true
	}

	return false
}

// SetFormFieldsList gets a reference to the given DaVinciFlowGraphDataRequestElementsNodeDataPropertiesFormFieldsList and assigns it to the FormFieldsList field.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) SetFormFieldsList(v DaVinciFlowGraphDataRequestElementsNodeDataPropertiesFormFieldsList) {
	o.FormFieldsList = &v
}

// GetInputSchema returns the InputSchema field value if set, zero value otherwise.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) GetInputSchema() DaVinciFlowGraphDataRequestElementsNodeDataPropertiesInputSchema {
	if o == nil || IsNil(o.InputSchema) {
		var ret DaVinciFlowGraphDataRequestElementsNodeDataPropertiesInputSchema
		return ret
	}
	return *o.InputSchema
}

// GetInputSchemaOk returns a tuple with the InputSchema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) GetInputSchemaOk() (*DaVinciFlowGraphDataRequestElementsNodeDataPropertiesInputSchema, bool) {
	if o == nil || IsNil(o.InputSchema) {
		return nil, false
	}
	return o.InputSchema, true
}

// HasInputSchema returns a boolean if a field has been set.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) HasInputSchema() bool {
	if o != nil && !IsNil(o.InputSchema) {
		return true
	}

	return false
}

// SetInputSchema gets a reference to the given DaVinciFlowGraphDataRequestElementsNodeDataPropertiesInputSchema and assigns it to the InputSchema field.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) SetInputSchema(v DaVinciFlowGraphDataRequestElementsNodeDataPropertiesInputSchema) {
	o.InputSchema = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) GetMessage() DaVinciFlowGraphDataRequestElementsNodeDataPropertiesMessage {
	if o == nil || IsNil(o.Message) {
		var ret DaVinciFlowGraphDataRequestElementsNodeDataPropertiesMessage
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) GetMessageOk() (*DaVinciFlowGraphDataRequestElementsNodeDataPropertiesMessage, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given DaVinciFlowGraphDataRequestElementsNodeDataPropertiesMessage and assigns it to the Message field.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) SetMessage(v DaVinciFlowGraphDataRequestElementsNodeDataPropertiesMessage) {
	o.Message = &v
}

// GetNodeTitle returns the NodeTitle field value if set, zero value otherwise.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) GetNodeTitle() DaVinciFlowGraphDataRequestElementsNodeDataPropertiesNodeTitle {
	if o == nil || IsNil(o.NodeTitle) {
		var ret DaVinciFlowGraphDataRequestElementsNodeDataPropertiesNodeTitle
		return ret
	}
	return *o.NodeTitle
}

// GetNodeTitleOk returns a tuple with the NodeTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) GetNodeTitleOk() (*DaVinciFlowGraphDataRequestElementsNodeDataPropertiesNodeTitle, bool) {
	if o == nil || IsNil(o.NodeTitle) {
		return nil, false
	}
	return o.NodeTitle, true
}

// HasNodeTitle returns a boolean if a field has been set.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) HasNodeTitle() bool {
	if o != nil && !IsNil(o.NodeTitle) {
		return true
	}

	return false
}

// SetNodeTitle gets a reference to the given DaVinciFlowGraphDataRequestElementsNodeDataPropertiesNodeTitle and assigns it to the NodeTitle field.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) SetNodeTitle(v DaVinciFlowGraphDataRequestElementsNodeDataPropertiesNodeTitle) {
	o.NodeTitle = &v
}

// GetOutputSchema returns the OutputSchema field value if set, zero value otherwise.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) GetOutputSchema() DaVinciFlowGraphDataRequestElementsNodeDataPropertiesOutputSchema {
	if o == nil || IsNil(o.OutputSchema) {
		var ret DaVinciFlowGraphDataRequestElementsNodeDataPropertiesOutputSchema
		return ret
	}
	return *o.OutputSchema
}

// GetOutputSchemaOk returns a tuple with the OutputSchema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) GetOutputSchemaOk() (*DaVinciFlowGraphDataRequestElementsNodeDataPropertiesOutputSchema, bool) {
	if o == nil || IsNil(o.OutputSchema) {
		return nil, false
	}
	return o.OutputSchema, true
}

// HasOutputSchema returns a boolean if a field has been set.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) HasOutputSchema() bool {
	if o != nil && !IsNil(o.OutputSchema) {
		return true
	}

	return false
}

// SetOutputSchema gets a reference to the given DaVinciFlowGraphDataRequestElementsNodeDataPropertiesOutputSchema and assigns it to the OutputSchema field.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) SetOutputSchema(v DaVinciFlowGraphDataRequestElementsNodeDataPropertiesOutputSchema) {
	o.OutputSchema = &v
}

// GetSaveVariables returns the SaveVariables field value if set, zero value otherwise.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) GetSaveVariables() DaVinciFlowGraphDataRequestElementsNodeDataPropertiesSaveVariables {
	if o == nil || IsNil(o.SaveVariables) {
		var ret DaVinciFlowGraphDataRequestElementsNodeDataPropertiesSaveVariables
		return ret
	}
	return *o.SaveVariables
}

// GetSaveVariablesOk returns a tuple with the SaveVariables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) GetSaveVariablesOk() (*DaVinciFlowGraphDataRequestElementsNodeDataPropertiesSaveVariables, bool) {
	if o == nil || IsNil(o.SaveVariables) {
		return nil, false
	}
	return o.SaveVariables, true
}

// HasSaveVariables returns a boolean if a field has been set.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) HasSaveVariables() bool {
	if o != nil && !IsNil(o.SaveVariables) {
		return true
	}

	return false
}

// SetSaveVariables gets a reference to the given DaVinciFlowGraphDataRequestElementsNodeDataPropertiesSaveVariables and assigns it to the SaveVariables field.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) SetSaveVariables(v DaVinciFlowGraphDataRequestElementsNodeDataPropertiesSaveVariables) {
	o.SaveVariables = &v
}

// GetShowContinueButton returns the ShowContinueButton field value if set, zero value otherwise.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) GetShowContinueButton() DaVinciFlowGraphDataRequestElementsNodeDataPropertiesShowContinueButton {
	if o == nil || IsNil(o.ShowContinueButton) {
		var ret DaVinciFlowGraphDataRequestElementsNodeDataPropertiesShowContinueButton
		return ret
	}
	return *o.ShowContinueButton
}

// GetShowContinueButtonOk returns a tuple with the ShowContinueButton field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) GetShowContinueButtonOk() (*DaVinciFlowGraphDataRequestElementsNodeDataPropertiesShowContinueButton, bool) {
	if o == nil || IsNil(o.ShowContinueButton) {
		return nil, false
	}
	return o.ShowContinueButton, true
}

// HasShowContinueButton returns a boolean if a field has been set.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) HasShowContinueButton() bool {
	if o != nil && !IsNil(o.ShowContinueButton) {
		return true
	}

	return false
}

// SetShowContinueButton gets a reference to the given DaVinciFlowGraphDataRequestElementsNodeDataPropertiesShowContinueButton and assigns it to the ShowContinueButton field.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) SetShowContinueButton(v DaVinciFlowGraphDataRequestElementsNodeDataPropertiesShowContinueButton) {
	o.ShowContinueButton = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) GetType() DaVinciFlowGraphDataRequestElementsNodeDataPropertiesType {
	if o == nil || IsNil(o.Type) {
		var ret DaVinciFlowGraphDataRequestElementsNodeDataPropertiesType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) GetTypeOk() (*DaVinciFlowGraphDataRequestElementsNodeDataPropertiesType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given DaVinciFlowGraphDataRequestElementsNodeDataPropertiesType and assigns it to the Type field.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) SetType(v DaVinciFlowGraphDataRequestElementsNodeDataPropertiesType) {
	o.Type = &v
}

// GetVariableInputList returns the VariableInputList field value if set, zero value otherwise.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) GetVariableInputList() DaVinciFlowGraphDataRequestElementsNodeDataPropertiesVariableInputList {
	if o == nil || IsNil(o.VariableInputList) {
		var ret DaVinciFlowGraphDataRequestElementsNodeDataPropertiesVariableInputList
		return ret
	}
	return *o.VariableInputList
}

// GetVariableInputListOk returns a tuple with the VariableInputList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) GetVariableInputListOk() (*DaVinciFlowGraphDataRequestElementsNodeDataPropertiesVariableInputList, bool) {
	if o == nil || IsNil(o.VariableInputList) {
		return nil, false
	}
	return o.VariableInputList, true
}

// HasVariableInputList returns a boolean if a field has been set.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) HasVariableInputList() bool {
	if o != nil && !IsNil(o.VariableInputList) {
		return true
	}

	return false
}

// SetVariableInputList gets a reference to the given DaVinciFlowGraphDataRequestElementsNodeDataPropertiesVariableInputList and assigns it to the VariableInputList field.
func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) SetVariableInputList(v DaVinciFlowGraphDataRequestElementsNodeDataPropertiesVariableInputList) {
	o.VariableInputList = &v
}

func (o DaVinciFlowGraphDataRequestElementsNodeDataProperties) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DaVinciFlowGraphDataRequestElementsNodeDataProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BackgroundColor) {
		toSerialize["backgroundColor"] = o.BackgroundColor
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.CustomCSS) {
		toSerialize["customCSS"] = o.CustomCSS
	}
	if !IsNil(o.CustomHTML) {
		toSerialize["customHTML"] = o.CustomHTML
	}
	if !IsNil(o.CustomScript) {
		toSerialize["customScript"] = o.CustomScript
	}
	if !IsNil(o.FormFieldsList) {
		toSerialize["formFieldsList"] = o.FormFieldsList
	}
	if !IsNil(o.InputSchema) {
		toSerialize["inputSchema"] = o.InputSchema
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.NodeTitle) {
		toSerialize["nodeTitle"] = o.NodeTitle
	}
	if !IsNil(o.OutputSchema) {
		toSerialize["outputSchema"] = o.OutputSchema
	}
	if !IsNil(o.SaveVariables) {
		toSerialize["saveVariables"] = o.SaveVariables
	}
	if !IsNil(o.ShowContinueButton) {
		toSerialize["showContinueButton"] = o.ShowContinueButton
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.VariableInputList) {
		toSerialize["variableInputList"] = o.VariableInputList
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DaVinciFlowGraphDataRequestElementsNodeDataProperties) UnmarshalJSON(data []byte) (err error) {
	varDaVinciFlowGraphDataRequestElementsNodeDataProperties := _DaVinciFlowGraphDataRequestElementsNodeDataProperties{}

	err = json.Unmarshal(data, &varDaVinciFlowGraphDataRequestElementsNodeDataProperties)

	if err != nil {
		return err
	}

	*o = DaVinciFlowGraphDataRequestElementsNodeDataProperties(varDaVinciFlowGraphDataRequestElementsNodeDataProperties)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "backgroundColor")
		delete(additionalProperties, "code")
		delete(additionalProperties, "customCSS")
		delete(additionalProperties, "customHTML")
		delete(additionalProperties, "customScript")
		delete(additionalProperties, "formFieldsList")
		delete(additionalProperties, "inputSchema")
		delete(additionalProperties, "message")
		delete(additionalProperties, "nodeTitle")
		delete(additionalProperties, "outputSchema")
		delete(additionalProperties, "saveVariables")
		delete(additionalProperties, "showContinueButton")
		delete(additionalProperties, "type")
		delete(additionalProperties, "variableInputList")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

func (o DaVinciFlowGraphDataRequestElementsNodeDataProperties) LogValue() slog.Value {
	logAttrs := make([]slog.Attr, 0)

	if !IsNil(o.BackgroundColor) {
		logAttrs = append(logAttrs, slog.Any("backgroundColor", *o.BackgroundColor))
	}
	if !IsNil(o.Code) {
		logAttrs = append(logAttrs, slog.Any("code", *o.Code))
	}
	if !IsNil(o.CustomCSS) {
		logAttrs = append(logAttrs, slog.Any("customCSS", *o.CustomCSS))
	}
	if !IsNil(o.CustomHTML) {
		logAttrs = append(logAttrs, slog.Any("customHTML", *o.CustomHTML))
	}
	if !IsNil(o.CustomScript) {
		logAttrs = append(logAttrs, slog.Any("customScript", *o.CustomScript))
	}
	if !IsNil(o.FormFieldsList) {
		logAttrs = append(logAttrs, slog.Any("formFieldsList", *o.FormFieldsList))
	}
	if !IsNil(o.InputSchema) {
		logAttrs = append(logAttrs, slog.Any("inputSchema", *o.InputSchema))
	}
	if !IsNil(o.Message) {
		logAttrs = append(logAttrs, slog.Any("message", *o.Message))
	}
	if !IsNil(o.NodeTitle) {
		logAttrs = append(logAttrs, slog.Any("nodeTitle", *o.NodeTitle))
	}
	if !IsNil(o.OutputSchema) {
		logAttrs = append(logAttrs, slog.Any("outputSchema", *o.OutputSchema))
	}
	if !IsNil(o.SaveVariables) {
		logAttrs = append(logAttrs, slog.Any("saveVariables", *o.SaveVariables))
	}
	if !IsNil(o.ShowContinueButton) {
		logAttrs = append(logAttrs, slog.Any("showContinueButton", *o.ShowContinueButton))
	}
	if !IsNil(o.Type) {
		logAttrs = append(logAttrs, slog.Any("type", *o.Type))
	}
	if !IsNil(o.VariableInputList) {
		logAttrs = append(logAttrs, slog.Any("variableInputList", *o.VariableInputList))
	}
	logAttrs = append(logAttrs, slog.Any("additionalProperties", o.AdditionalProperties))

	return slog.GroupValue(logAttrs...)
}

type NullableDaVinciFlowGraphDataRequestElementsNodeDataProperties struct {
	value *DaVinciFlowGraphDataRequestElementsNodeDataProperties
	isSet bool
}

func (v NullableDaVinciFlowGraphDataRequestElementsNodeDataProperties) Get() *DaVinciFlowGraphDataRequestElementsNodeDataProperties {
	return v.value
}

func (v *NullableDaVinciFlowGraphDataRequestElementsNodeDataProperties) Set(val *DaVinciFlowGraphDataRequestElementsNodeDataProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableDaVinciFlowGraphDataRequestElementsNodeDataProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableDaVinciFlowGraphDataRequestElementsNodeDataProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDaVinciFlowGraphDataRequestElementsNodeDataProperties(val *DaVinciFlowGraphDataRequestElementsNodeDataProperties) *NullableDaVinciFlowGraphDataRequestElementsNodeDataProperties {
	return &NullableDaVinciFlowGraphDataRequestElementsNodeDataProperties{value: val, isSet: true}
}

func (v NullableDaVinciFlowGraphDataRequestElementsNodeDataProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDaVinciFlowGraphDataRequestElementsNodeDataProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
