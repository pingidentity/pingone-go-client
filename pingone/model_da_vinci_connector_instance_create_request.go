// Copyright Â© 2025 Ping Identity Corporation
/*
PingOne Platform User and Configuration Management API - Go SDK

PingOne is a cloud-based framework for secure identity access management. The PingOne API gives developers the tools to integrate enterprise and third-party applications with the PingOne platform.

Contact: developerexperiences@pingidentity.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
	"fmt"
	"log/slog"
)

// checks if the DaVinciConnectorInstanceCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DaVinciConnectorInstanceCreateRequest{}

// checks if the DaVinciConnectorInstanceCreateRequest type satisfies the LogValuer interface at compile time
var _ slog.LogValuer = &DaVinciConnectorInstanceCreateRequest{}

// DaVinciConnectorInstanceCreateRequest struct for DaVinciConnectorInstanceCreateRequest
type DaVinciConnectorInstanceCreateRequest struct {
	Name                 string                      `json:"name" validate:"regexp=^(?=\\\\S)[\\\\p{L}\\\\p{M}\\\\p{N}\\\\p{So}\\/.'_ -]*(?!.*((<)|(\\\\$\\\\{)))"`
	Connector            ResourceRelationshipDaVinci `json:"connector"`
	Properties           map[string]interface{}      `json:"properties,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DaVinciConnectorInstanceCreateRequest DaVinciConnectorInstanceCreateRequest

// NewDaVinciConnectorInstanceCreateRequest instantiates a new DaVinciConnectorInstanceCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDaVinciConnectorInstanceCreateRequest(name string, connector ResourceRelationshipDaVinci) *DaVinciConnectorInstanceCreateRequest {
	this := DaVinciConnectorInstanceCreateRequest{}
	this.Name = name
	this.Connector = connector
	return &this
}

// NewDaVinciConnectorInstanceCreateRequestWithDefaults instantiates a new DaVinciConnectorInstanceCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDaVinciConnectorInstanceCreateRequestWithDefaults() *DaVinciConnectorInstanceCreateRequest {
	this := DaVinciConnectorInstanceCreateRequest{}
	return &this
}

// GetName returns the Name field value
func (o *DaVinciConnectorInstanceCreateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DaVinciConnectorInstanceCreateRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DaVinciConnectorInstanceCreateRequest) SetName(v string) {
	o.Name = v
}

// GetConnector returns the Connector field value
func (o *DaVinciConnectorInstanceCreateRequest) GetConnector() ResourceRelationshipDaVinci {
	if o == nil {
		var ret ResourceRelationshipDaVinci
		return ret
	}

	return o.Connector
}

// GetConnectorOk returns a tuple with the Connector field value
// and a boolean to check if the value has been set.
func (o *DaVinciConnectorInstanceCreateRequest) GetConnectorOk() (*ResourceRelationshipDaVinci, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Connector, true
}

// SetConnector sets field value
func (o *DaVinciConnectorInstanceCreateRequest) SetConnector(v ResourceRelationshipDaVinci) {
	o.Connector = v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *DaVinciConnectorInstanceCreateRequest) GetProperties() map[string]interface{} {
	if o == nil || IsNil(o.Properties) {
		var ret map[string]interface{}
		return ret
	}
	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaVinciConnectorInstanceCreateRequest) GetPropertiesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Properties) {
		return map[string]interface{}{}, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *DaVinciConnectorInstanceCreateRequest) HasProperties() bool {
	if o != nil && !IsNil(o.Properties) {
		return true
	}

	return false
}

// SetProperties gets a reference to the given map[string]interface{} and assigns it to the Properties field.
func (o *DaVinciConnectorInstanceCreateRequest) SetProperties(v map[string]interface{}) {
	o.Properties = v
}

func (o DaVinciConnectorInstanceCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DaVinciConnectorInstanceCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["connector"] = o.Connector
	if !IsNil(o.Properties) {
		toSerialize["properties"] = o.Properties
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DaVinciConnectorInstanceCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"connector",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDaVinciConnectorInstanceCreateRequest := _DaVinciConnectorInstanceCreateRequest{}

	err = json.Unmarshal(data, &varDaVinciConnectorInstanceCreateRequest)

	if err != nil {
		return err
	}

	*o = DaVinciConnectorInstanceCreateRequest(varDaVinciConnectorInstanceCreateRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "connector")
		delete(additionalProperties, "properties")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

func (o DaVinciConnectorInstanceCreateRequest) LogValue() slog.Value {
	logAttrs := make([]slog.Attr, 0)

	logAttrs = append(logAttrs, slog.Any("name", o.Name))
	logAttrs = append(logAttrs, slog.Any("connector", o.Connector))
	if !IsNil(o.Properties) {
		logAttrs = append(logAttrs, slog.Any("properties", o.Properties))
	}
	logAttrs = append(logAttrs, slog.Any("additionalProperties", o.AdditionalProperties))

	return slog.GroupValue(logAttrs...)
}

type NullableDaVinciConnectorInstanceCreateRequest struct {
	value *DaVinciConnectorInstanceCreateRequest
	isSet bool
}

func (v NullableDaVinciConnectorInstanceCreateRequest) Get() *DaVinciConnectorInstanceCreateRequest {
	return v.value
}

func (v *NullableDaVinciConnectorInstanceCreateRequest) Set(val *DaVinciConnectorInstanceCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDaVinciConnectorInstanceCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDaVinciConnectorInstanceCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDaVinciConnectorInstanceCreateRequest(val *DaVinciConnectorInstanceCreateRequest) *NullableDaVinciConnectorInstanceCreateRequest {
	return &NullableDaVinciConnectorInstanceCreateRequest{value: val, isSet: true}
}

func (v NullableDaVinciConnectorInstanceCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDaVinciConnectorInstanceCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
