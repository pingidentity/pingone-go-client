// Copyright Â© 2025 Ping Identity Corporation
/*
PingOne Platform User and Configuration Management API - SDK Generator

PingOne is a cloud-based framework for secure identity access management. The PingOne API gives developers the tools to integrate enterprise and third-party applications with the PingOne platform.

Contact: devex@pingidentity.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
	"log/slog"
)

// checks if the DaVinciFlowValidateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DaVinciFlowValidateRequest{}

// checks if the DaVinciFlowValidateRequest type satisfies the LogValuer interface at compile time
var _ slog.LogValuer = &DaVinciFlowValidateRequest{}

// DaVinciFlowValidateRequest struct for DaVinciFlowValidateRequest
type DaVinciFlowValidateRequest struct {
	GraphData            *DaVinciFlowGraphDataRequest `json:"graphData,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DaVinciFlowValidateRequest DaVinciFlowValidateRequest

// NewDaVinciFlowValidateRequest instantiates a new DaVinciFlowValidateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDaVinciFlowValidateRequest() *DaVinciFlowValidateRequest {
	this := DaVinciFlowValidateRequest{}
	return &this
}

// NewDaVinciFlowValidateRequestWithDefaults instantiates a new DaVinciFlowValidateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDaVinciFlowValidateRequestWithDefaults() *DaVinciFlowValidateRequest {
	this := DaVinciFlowValidateRequest{}
	return &this
}

// GetGraphData returns the GraphData field value if set, zero value otherwise.
func (o *DaVinciFlowValidateRequest) GetGraphData() DaVinciFlowGraphDataRequest {
	if o == nil || IsNil(o.GraphData) {
		var ret DaVinciFlowGraphDataRequest
		return ret
	}
	return *o.GraphData
}

// GetGraphDataOk returns a tuple with the GraphData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaVinciFlowValidateRequest) GetGraphDataOk() (*DaVinciFlowGraphDataRequest, bool) {
	if o == nil || IsNil(o.GraphData) {
		return nil, false
	}
	return o.GraphData, true
}

// HasGraphData returns a boolean if a field has been set.
func (o *DaVinciFlowValidateRequest) HasGraphData() bool {
	if o != nil && !IsNil(o.GraphData) {
		return true
	}

	return false
}

// SetGraphData gets a reference to the given DaVinciFlowGraphDataRequest and assigns it to the GraphData field.
func (o *DaVinciFlowValidateRequest) SetGraphData(v DaVinciFlowGraphDataRequest) {
	o.GraphData = &v
}

func (o DaVinciFlowValidateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DaVinciFlowValidateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GraphData) {
		toSerialize["graphData"] = o.GraphData
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DaVinciFlowValidateRequest) UnmarshalJSON(data []byte) (err error) {
	varDaVinciFlowValidateRequest := _DaVinciFlowValidateRequest{}

	err = json.Unmarshal(data, &varDaVinciFlowValidateRequest)

	if err != nil {
		return err
	}

	*o = DaVinciFlowValidateRequest(varDaVinciFlowValidateRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "graphData")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

func (o DaVinciFlowValidateRequest) LogValue() slog.Value {
	logAttrs := make([]slog.Attr, 0)

	if !IsNil(o.GraphData) {
		logAttrs = append(logAttrs, slog.Any("graphData", *o.GraphData))
	}
	logAttrs = append(logAttrs, slog.Any("additionalProperties", o.AdditionalProperties))

	return slog.GroupValue(logAttrs...)
}

type NullableDaVinciFlowValidateRequest struct {
	value *DaVinciFlowValidateRequest
	isSet bool
}

func (v NullableDaVinciFlowValidateRequest) Get() *DaVinciFlowValidateRequest {
	return v.value
}

func (v *NullableDaVinciFlowValidateRequest) Set(val *DaVinciFlowValidateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDaVinciFlowValidateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDaVinciFlowValidateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDaVinciFlowValidateRequest(val *DaVinciFlowValidateRequest) *NullableDaVinciFlowValidateRequest {
	return &NullableDaVinciFlowValidateRequest{value: val, isSet: true}
}

func (v NullableDaVinciFlowValidateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDaVinciFlowValidateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
