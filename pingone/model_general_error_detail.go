// Copyright Â© 2025 Ping Identity Corporation
/*
PingOne Platform User and Configuration Management API - Go SDK

PingOne is a cloud-based framework for secure identity access management. The PingOne API gives developers the tools to integrate enterprise and third-party applications with the PingOne platform.

Contact: developerexperiences@pingidentity.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
	"log/slog"
)

// checks if the GeneralErrorDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GeneralErrorDetail{}

// checks if the GeneralErrorDetail type satisfies the LogValuer interface at compile time
var _ slog.LogValuer = &GeneralErrorDetail{}

// GeneralErrorDetail struct for GeneralErrorDetail
type GeneralErrorDetail struct {
	Code                 *string                           `json:"code,omitempty"`
	InnerError           map[string]map[string]interface{} `json:"innerError,omitempty"`
	Message              *string                           `json:"message,omitempty"`
	Target               *string                           `json:"target,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GeneralErrorDetail GeneralErrorDetail

// NewGeneralErrorDetail instantiates a new GeneralErrorDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGeneralErrorDetail() *GeneralErrorDetail {
	this := GeneralErrorDetail{}
	return &this
}

// NewGeneralErrorDetailWithDefaults instantiates a new GeneralErrorDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGeneralErrorDetailWithDefaults() *GeneralErrorDetail {
	this := GeneralErrorDetail{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *GeneralErrorDetail) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralErrorDetail) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *GeneralErrorDetail) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *GeneralErrorDetail) SetCode(v string) {
	o.Code = &v
}

// GetInnerError returns the InnerError field value if set, zero value otherwise.
func (o *GeneralErrorDetail) GetInnerError() map[string]map[string]interface{} {
	if o == nil || IsNil(o.InnerError) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.InnerError
}

// GetInnerErrorOk returns a tuple with the InnerError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralErrorDetail) GetInnerErrorOk() (map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.InnerError) {
		return map[string]map[string]interface{}{}, false
	}
	return o.InnerError, true
}

// HasInnerError returns a boolean if a field has been set.
func (o *GeneralErrorDetail) HasInnerError() bool {
	if o != nil && !IsNil(o.InnerError) {
		return true
	}

	return false
}

// SetInnerError gets a reference to the given map[string]map[string]interface{} and assigns it to the InnerError field.
func (o *GeneralErrorDetail) SetInnerError(v map[string]map[string]interface{}) {
	o.InnerError = v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *GeneralErrorDetail) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralErrorDetail) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *GeneralErrorDetail) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *GeneralErrorDetail) SetMessage(v string) {
	o.Message = &v
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *GeneralErrorDetail) GetTarget() string {
	if o == nil || IsNil(o.Target) {
		var ret string
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneralErrorDetail) GetTargetOk() (*string, bool) {
	if o == nil || IsNil(o.Target) {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *GeneralErrorDetail) HasTarget() bool {
	if o != nil && !IsNil(o.Target) {
		return true
	}

	return false
}

// SetTarget gets a reference to the given string and assigns it to the Target field.
func (o *GeneralErrorDetail) SetTarget(v string) {
	o.Target = &v
}

func (o GeneralErrorDetail) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GeneralErrorDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.InnerError) {
		toSerialize["innerError"] = o.InnerError
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Target) {
		toSerialize["target"] = o.Target
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GeneralErrorDetail) UnmarshalJSON(data []byte) (err error) {
	varGeneralErrorDetail := _GeneralErrorDetail{}

	err = json.Unmarshal(data, &varGeneralErrorDetail)

	if err != nil {
		return err
	}

	*o = GeneralErrorDetail(varGeneralErrorDetail)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "code")
		delete(additionalProperties, "innerError")
		delete(additionalProperties, "message")
		delete(additionalProperties, "target")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

func (o GeneralErrorDetail) LogValue() slog.Value {
	logAttrs := make([]slog.Attr, 0)

	if !IsNil(o.Code) {
		logAttrs = append(logAttrs, slog.Any("code", *o.Code))
	}
	if !IsNil(o.InnerError) {
		logAttrs = append(logAttrs, slog.Any("innerError", o.InnerError))
	}
	if !IsNil(o.Message) {
		logAttrs = append(logAttrs, slog.Any("message", *o.Message))
	}
	if !IsNil(o.Target) {
		logAttrs = append(logAttrs, slog.Any("target", *o.Target))
	}
	logAttrs = append(logAttrs, slog.Any("additionalProperties", o.AdditionalProperties))

	return slog.GroupValue(logAttrs...)
}

type NullableGeneralErrorDetail struct {
	value *GeneralErrorDetail
	isSet bool
}

func (v NullableGeneralErrorDetail) Get() *GeneralErrorDetail {
	return v.value
}

func (v *NullableGeneralErrorDetail) Set(val *GeneralErrorDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableGeneralErrorDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableGeneralErrorDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGeneralErrorDetail(val *GeneralErrorDetail) *NullableGeneralErrorDetail {
	return &NullableGeneralErrorDetail{value: val, isSet: true}
}

func (v NullableGeneralErrorDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGeneralErrorDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
