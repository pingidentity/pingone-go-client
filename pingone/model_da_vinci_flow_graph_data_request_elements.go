// Copyright Â© 2025 Ping Identity Corporation
/*
PingOne Platform User and Configuration Management API - SDK Generator

PingOne is a cloud-based framework for secure identity access management. The PingOne API gives developers the tools to integrate enterprise and third-party applications with the PingOne platform.

Contact: devex@pingidentity.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
	"log/slog"
)

// checks if the DaVinciFlowGraphDataRequestElements type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DaVinciFlowGraphDataRequestElements{}

// checks if the DaVinciFlowGraphDataRequestElements type satisfies the LogValuer interface at compile time
var _ slog.LogValuer = &DaVinciFlowGraphDataRequestElements{}

// DaVinciFlowGraphDataRequestElements struct for DaVinciFlowGraphDataRequestElements
type DaVinciFlowGraphDataRequestElements struct {
	Edges                []DaVinciFlowGraphDataRequestElementsEdge `json:"edges,omitempty"`
	Nodes                []DaVinciFlowGraphDataRequestElementsNode `json:"nodes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DaVinciFlowGraphDataRequestElements DaVinciFlowGraphDataRequestElements

// NewDaVinciFlowGraphDataRequestElements instantiates a new DaVinciFlowGraphDataRequestElements object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDaVinciFlowGraphDataRequestElements() *DaVinciFlowGraphDataRequestElements {
	this := DaVinciFlowGraphDataRequestElements{}
	return &this
}

// NewDaVinciFlowGraphDataRequestElementsWithDefaults instantiates a new DaVinciFlowGraphDataRequestElements object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDaVinciFlowGraphDataRequestElementsWithDefaults() *DaVinciFlowGraphDataRequestElements {
	this := DaVinciFlowGraphDataRequestElements{}
	return &this
}

// GetEdges returns the Edges field value if set, zero value otherwise.
func (o *DaVinciFlowGraphDataRequestElements) GetEdges() []DaVinciFlowGraphDataRequestElementsEdge {
	if o == nil || IsNil(o.Edges) {
		var ret []DaVinciFlowGraphDataRequestElementsEdge
		return ret
	}
	return o.Edges
}

// GetEdgesOk returns a tuple with the Edges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaVinciFlowGraphDataRequestElements) GetEdgesOk() ([]DaVinciFlowGraphDataRequestElementsEdge, bool) {
	if o == nil || IsNil(o.Edges) {
		return nil, false
	}
	return o.Edges, true
}

// HasEdges returns a boolean if a field has been set.
func (o *DaVinciFlowGraphDataRequestElements) HasEdges() bool {
	if o != nil && !IsNil(o.Edges) {
		return true
	}

	return false
}

// SetEdges gets a reference to the given []DaVinciFlowGraphDataRequestElementsEdge and assigns it to the Edges field.
func (o *DaVinciFlowGraphDataRequestElements) SetEdges(v []DaVinciFlowGraphDataRequestElementsEdge) {
	o.Edges = v
}

// GetNodes returns the Nodes field value if set, zero value otherwise.
func (o *DaVinciFlowGraphDataRequestElements) GetNodes() []DaVinciFlowGraphDataRequestElementsNode {
	if o == nil || IsNil(o.Nodes) {
		var ret []DaVinciFlowGraphDataRequestElementsNode
		return ret
	}
	return o.Nodes
}

// GetNodesOk returns a tuple with the Nodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaVinciFlowGraphDataRequestElements) GetNodesOk() ([]DaVinciFlowGraphDataRequestElementsNode, bool) {
	if o == nil || IsNil(o.Nodes) {
		return nil, false
	}
	return o.Nodes, true
}

// HasNodes returns a boolean if a field has been set.
func (o *DaVinciFlowGraphDataRequestElements) HasNodes() bool {
	if o != nil && !IsNil(o.Nodes) {
		return true
	}

	return false
}

// SetNodes gets a reference to the given []DaVinciFlowGraphDataRequestElementsNode and assigns it to the Nodes field.
func (o *DaVinciFlowGraphDataRequestElements) SetNodes(v []DaVinciFlowGraphDataRequestElementsNode) {
	o.Nodes = v
}

func (o DaVinciFlowGraphDataRequestElements) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DaVinciFlowGraphDataRequestElements) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Edges) {
		toSerialize["edges"] = o.Edges
	}
	if !IsNil(o.Nodes) {
		toSerialize["nodes"] = o.Nodes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DaVinciFlowGraphDataRequestElements) UnmarshalJSON(data []byte) (err error) {
	varDaVinciFlowGraphDataRequestElements := _DaVinciFlowGraphDataRequestElements{}

	err = json.Unmarshal(data, &varDaVinciFlowGraphDataRequestElements)

	if err != nil {
		return err
	}

	*o = DaVinciFlowGraphDataRequestElements(varDaVinciFlowGraphDataRequestElements)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "edges")
		delete(additionalProperties, "nodes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

func (o DaVinciFlowGraphDataRequestElements) LogValue() slog.Value {
	logAttrs := make([]slog.Attr, 0)

	if !IsNil(o.Edges) {
		logAttrs = append(logAttrs, slog.Any("edges", o.Edges))
	}
	if !IsNil(o.Nodes) {
		logAttrs = append(logAttrs, slog.Any("nodes", o.Nodes))
	}
	logAttrs = append(logAttrs, slog.Any("additionalProperties", o.AdditionalProperties))

	return slog.GroupValue(logAttrs...)
}

type NullableDaVinciFlowGraphDataRequestElements struct {
	value *DaVinciFlowGraphDataRequestElements
	isSet bool
}

func (v NullableDaVinciFlowGraphDataRequestElements) Get() *DaVinciFlowGraphDataRequestElements {
	return v.value
}

func (v *NullableDaVinciFlowGraphDataRequestElements) Set(val *DaVinciFlowGraphDataRequestElements) {
	v.value = val
	v.isSet = true
}

func (v NullableDaVinciFlowGraphDataRequestElements) IsSet() bool {
	return v.isSet
}

func (v *NullableDaVinciFlowGraphDataRequestElements) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDaVinciFlowGraphDataRequestElements(val *DaVinciFlowGraphDataRequestElements) *NullableDaVinciFlowGraphDataRequestElements {
	return &NullableDaVinciFlowGraphDataRequestElements{value: val, isSet: true}
}

func (v NullableDaVinciFlowGraphDataRequestElements) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDaVinciFlowGraphDataRequestElements) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
