// Copyright Â© 2025 Ping Identity Corporation
/*
PingOne Platform User and Configuration Management API - SDK Generator

PingOne is a cloud-based framework for secure identity access management. The PingOne API gives developers the tools to integrate enterprise and third-party applications with the PingOne platform.

Contact: devex@pingidentity.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
	"fmt"
)

// DaVinciFlowOutputSchemaRequestOutputType the model 'DaVinciFlowOutputSchemaRequestOutputType'
type DaVinciFlowOutputSchemaRequestOutputType string

// List of DaVinci_Flow_Output_Schema_Request_Output_Type
const (
	DAVINCIFLOWOUTPUTSCHEMAREQUESTOUTPUTTYPE_OBJECT DaVinciFlowOutputSchemaRequestOutputType = "object"
)

// All allowed values of DaVinciFlowOutputSchemaRequestOutputType enum
var AllowedDaVinciFlowOutputSchemaRequestOutputTypeEnumValues = []DaVinciFlowOutputSchemaRequestOutputType{
	"object",
}

func (v *DaVinciFlowOutputSchemaRequestOutputType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := DaVinciFlowOutputSchemaRequestOutputType(value)
	for _, existing := range AllowedDaVinciFlowOutputSchemaRequestOutputTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	*v = DaVinciFlowOutputSchemaRequestOutputType(fmt.Sprintf("%s", value))
	return nil
}

// NewDaVinciFlowOutputSchemaRequestOutputTypeFromValue returns a pointer to a valid DaVinciFlowOutputSchemaRequestOutputType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDaVinciFlowOutputSchemaRequestOutputTypeFromValue(v string) (*DaVinciFlowOutputSchemaRequestOutputType, error) {
	ev := DaVinciFlowOutputSchemaRequestOutputType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for DaVinciFlowOutputSchemaRequestOutputType: valid values are %v", v, AllowedDaVinciFlowOutputSchemaRequestOutputTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DaVinciFlowOutputSchemaRequestOutputType) IsValid() bool {
	for _, existing := range AllowedDaVinciFlowOutputSchemaRequestOutputTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to DaVinci_Flow_Output_Schema_Request_Output_Type value
func (v DaVinciFlowOutputSchemaRequestOutputType) Ptr() *DaVinciFlowOutputSchemaRequestOutputType {
	return &v
}

type NullableDaVinciFlowOutputSchemaRequestOutputType struct {
	value *DaVinciFlowOutputSchemaRequestOutputType
	isSet bool
}

func (v NullableDaVinciFlowOutputSchemaRequestOutputType) Get() *DaVinciFlowOutputSchemaRequestOutputType {
	return v.value
}

func (v *NullableDaVinciFlowOutputSchemaRequestOutputType) Set(val *DaVinciFlowOutputSchemaRequestOutputType) {
	v.value = val
	v.isSet = true
}

func (v NullableDaVinciFlowOutputSchemaRequestOutputType) IsSet() bool {
	return v.isSet
}

func (v *NullableDaVinciFlowOutputSchemaRequestOutputType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDaVinciFlowOutputSchemaRequestOutputType(val *DaVinciFlowOutputSchemaRequestOutputType) *NullableDaVinciFlowOutputSchemaRequestOutputType {
	return &NullableDaVinciFlowOutputSchemaRequestOutputType{value: val, isSet: true}
}

func (v NullableDaVinciFlowOutputSchemaRequestOutputType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDaVinciFlowOutputSchemaRequestOutputType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
