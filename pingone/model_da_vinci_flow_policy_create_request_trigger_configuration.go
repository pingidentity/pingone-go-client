// Copyright Â© 2025 Ping Identity Corporation
/*
PingOne User and Configuration Management API

The PingOne User and Configuration Management API provides the interface to configure and manage users in the PingOne directory and the administration configuration of your PingOne organization.

Contact: developerexperiences@pingidentity.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
	"log/slog"
)

// checks if the DaVinciFlowPolicyCreateRequestTriggerConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DaVinciFlowPolicyCreateRequestTriggerConfiguration{}

// checks if the DaVinciFlowPolicyCreateRequestTriggerConfiguration type satisfies the LogValuer interface at compile time
var _ slog.LogValuer = &DaVinciFlowPolicyCreateRequestTriggerConfiguration{}

// DaVinciFlowPolicyCreateRequestTriggerConfiguration struct for DaVinciFlowPolicyCreateRequestTriggerConfiguration
type DaVinciFlowPolicyCreateRequestTriggerConfiguration struct {
	Mfa                  *DaVinciFlowPolicyCreateRequestTriggerConfigurationMFA      `json:"mfa,omitempty"`
	Pwd                  *DaVinciFlowPolicyCreateRequestTriggerConfigurationPassword `json:"pwd,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DaVinciFlowPolicyCreateRequestTriggerConfiguration DaVinciFlowPolicyCreateRequestTriggerConfiguration

// NewDaVinciFlowPolicyCreateRequestTriggerConfiguration instantiates a new DaVinciFlowPolicyCreateRequestTriggerConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDaVinciFlowPolicyCreateRequestTriggerConfiguration() *DaVinciFlowPolicyCreateRequestTriggerConfiguration {
	this := DaVinciFlowPolicyCreateRequestTriggerConfiguration{}
	return &this
}

// NewDaVinciFlowPolicyCreateRequestTriggerConfigurationWithDefaults instantiates a new DaVinciFlowPolicyCreateRequestTriggerConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDaVinciFlowPolicyCreateRequestTriggerConfigurationWithDefaults() *DaVinciFlowPolicyCreateRequestTriggerConfiguration {
	this := DaVinciFlowPolicyCreateRequestTriggerConfiguration{}
	return &this
}

// GetMfa returns the Mfa field value if set, zero value otherwise.
func (o *DaVinciFlowPolicyCreateRequestTriggerConfiguration) GetMfa() DaVinciFlowPolicyCreateRequestTriggerConfigurationMFA {
	if o == nil || IsNil(o.Mfa) {
		var ret DaVinciFlowPolicyCreateRequestTriggerConfigurationMFA
		return ret
	}
	return *o.Mfa
}

// GetMfaOk returns a tuple with the Mfa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaVinciFlowPolicyCreateRequestTriggerConfiguration) GetMfaOk() (*DaVinciFlowPolicyCreateRequestTriggerConfigurationMFA, bool) {
	if o == nil || IsNil(o.Mfa) {
		return nil, false
	}
	return o.Mfa, true
}

// HasMfa returns a boolean if a field has been set.
func (o *DaVinciFlowPolicyCreateRequestTriggerConfiguration) HasMfa() bool {
	if o != nil && !IsNil(o.Mfa) {
		return true
	}

	return false
}

// SetMfa gets a reference to the given DaVinciFlowPolicyCreateRequestTriggerConfigurationMFA and assigns it to the Mfa field.
func (o *DaVinciFlowPolicyCreateRequestTriggerConfiguration) SetMfa(v DaVinciFlowPolicyCreateRequestTriggerConfigurationMFA) {
	o.Mfa = &v
}

// GetPwd returns the Pwd field value if set, zero value otherwise.
func (o *DaVinciFlowPolicyCreateRequestTriggerConfiguration) GetPwd() DaVinciFlowPolicyCreateRequestTriggerConfigurationPassword {
	if o == nil || IsNil(o.Pwd) {
		var ret DaVinciFlowPolicyCreateRequestTriggerConfigurationPassword
		return ret
	}
	return *o.Pwd
}

// GetPwdOk returns a tuple with the Pwd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaVinciFlowPolicyCreateRequestTriggerConfiguration) GetPwdOk() (*DaVinciFlowPolicyCreateRequestTriggerConfigurationPassword, bool) {
	if o == nil || IsNil(o.Pwd) {
		return nil, false
	}
	return o.Pwd, true
}

// HasPwd returns a boolean if a field has been set.
func (o *DaVinciFlowPolicyCreateRequestTriggerConfiguration) HasPwd() bool {
	if o != nil && !IsNil(o.Pwd) {
		return true
	}

	return false
}

// SetPwd gets a reference to the given DaVinciFlowPolicyCreateRequestTriggerConfigurationPassword and assigns it to the Pwd field.
func (o *DaVinciFlowPolicyCreateRequestTriggerConfiguration) SetPwd(v DaVinciFlowPolicyCreateRequestTriggerConfigurationPassword) {
	o.Pwd = &v
}

func (o DaVinciFlowPolicyCreateRequestTriggerConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DaVinciFlowPolicyCreateRequestTriggerConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Mfa) {
		toSerialize["mfa"] = o.Mfa
	}
	if !IsNil(o.Pwd) {
		toSerialize["pwd"] = o.Pwd
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DaVinciFlowPolicyCreateRequestTriggerConfiguration) UnmarshalJSON(data []byte) (err error) {
	varDaVinciFlowPolicyCreateRequestTriggerConfiguration := _DaVinciFlowPolicyCreateRequestTriggerConfiguration{}

	err = json.Unmarshal(data, &varDaVinciFlowPolicyCreateRequestTriggerConfiguration)

	if err != nil {
		return err
	}

	*o = DaVinciFlowPolicyCreateRequestTriggerConfiguration(varDaVinciFlowPolicyCreateRequestTriggerConfiguration)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "mfa")
		delete(additionalProperties, "pwd")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

func (o DaVinciFlowPolicyCreateRequestTriggerConfiguration) LogValue() slog.Value {
	logAttrs := make([]slog.Attr, 0)

	if !IsNil(o.Mfa) {
		logAttrs = append(logAttrs, slog.Any("mfa", *o.Mfa))
	}
	if !IsNil(o.Pwd) {
		logAttrs = append(logAttrs, slog.Any("pwd", *o.Pwd))
	}
	logAttrs = append(logAttrs, slog.Any("additionalProperties", o.AdditionalProperties))

	return slog.GroupValue(logAttrs...)
}

type NullableDaVinciFlowPolicyCreateRequestTriggerConfiguration struct {
	value *DaVinciFlowPolicyCreateRequestTriggerConfiguration
	isSet bool
}

func (v NullableDaVinciFlowPolicyCreateRequestTriggerConfiguration) Get() *DaVinciFlowPolicyCreateRequestTriggerConfiguration {
	return v.value
}

func (v *NullableDaVinciFlowPolicyCreateRequestTriggerConfiguration) Set(val *DaVinciFlowPolicyCreateRequestTriggerConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableDaVinciFlowPolicyCreateRequestTriggerConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableDaVinciFlowPolicyCreateRequestTriggerConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDaVinciFlowPolicyCreateRequestTriggerConfiguration(val *DaVinciFlowPolicyCreateRequestTriggerConfiguration) *NullableDaVinciFlowPolicyCreateRequestTriggerConfiguration {
	return &NullableDaVinciFlowPolicyCreateRequestTriggerConfiguration{value: val, isSet: true}
}

func (v NullableDaVinciFlowPolicyCreateRequestTriggerConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDaVinciFlowPolicyCreateRequestTriggerConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
