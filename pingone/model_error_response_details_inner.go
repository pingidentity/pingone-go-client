/*
PingOne User and Configuration Management API

The PingOne User and Configuration Management API provides the interface to configure and manage users in the PingOne directory and the administration configuration of your PingOne organization.

API version: development-2025-05-01T13-01-46
Contact: developerexperiences@pingidentity.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
	"fmt"
)

// checks if the ErrorResponseDetailsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ErrorResponseDetailsInner{}

// ErrorResponseDetailsInner struct for ErrorResponseDetailsInner
type ErrorResponseDetailsInner struct {
	Code                 string                               `json:"code"`
	InnerError           *ErrorResponseDetailsInnerInnerError `json:"innerError,omitempty"`
	Message              string                               `json:"message"`
	Target               *string                              `json:"target,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ErrorResponseDetailsInner ErrorResponseDetailsInner

// NewErrorResponseDetailsInner instantiates a new ErrorResponseDetailsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewErrorResponseDetailsInner(code string, message string) *ErrorResponseDetailsInner {
	this := ErrorResponseDetailsInner{}
	this.Code = code
	this.Message = message
	return &this
}

// NewErrorResponseDetailsInnerWithDefaults instantiates a new ErrorResponseDetailsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewErrorResponseDetailsInnerWithDefaults() *ErrorResponseDetailsInner {
	this := ErrorResponseDetailsInner{}
	return &this
}

// GetCode returns the Code field value
func (o *ErrorResponseDetailsInner) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *ErrorResponseDetailsInner) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *ErrorResponseDetailsInner) SetCode(v string) {
	o.Code = v
}

// GetInnerError returns the InnerError field value if set, zero value otherwise.
func (o *ErrorResponseDetailsInner) GetInnerError() ErrorResponseDetailsInnerInnerError {
	if o == nil || IsNil(o.InnerError) {
		var ret ErrorResponseDetailsInnerInnerError
		return ret
	}
	return *o.InnerError
}

// GetInnerErrorOk returns a tuple with the InnerError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorResponseDetailsInner) GetInnerErrorOk() (*ErrorResponseDetailsInnerInnerError, bool) {
	if o == nil || IsNil(o.InnerError) {
		return nil, false
	}
	return o.InnerError, true
}

// HasInnerError returns a boolean if a field has been set.
func (o *ErrorResponseDetailsInner) HasInnerError() bool {
	if o != nil && !IsNil(o.InnerError) {
		return true
	}

	return false
}

// SetInnerError gets a reference to the given ErrorResponseDetailsInnerInnerError and assigns it to the InnerError field.
func (o *ErrorResponseDetailsInner) SetInnerError(v ErrorResponseDetailsInnerInnerError) {
	o.InnerError = &v
}

// GetMessage returns the Message field value
func (o *ErrorResponseDetailsInner) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *ErrorResponseDetailsInner) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *ErrorResponseDetailsInner) SetMessage(v string) {
	o.Message = v
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *ErrorResponseDetailsInner) GetTarget() string {
	if o == nil || IsNil(o.Target) {
		var ret string
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorResponseDetailsInner) GetTargetOk() (*string, bool) {
	if o == nil || IsNil(o.Target) {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *ErrorResponseDetailsInner) HasTarget() bool {
	if o != nil && !IsNil(o.Target) {
		return true
	}

	return false
}

// SetTarget gets a reference to the given string and assigns it to the Target field.
func (o *ErrorResponseDetailsInner) SetTarget(v string) {
	o.Target = &v
}

func (o ErrorResponseDetailsInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ErrorResponseDetailsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["code"] = o.Code
	if !IsNil(o.InnerError) {
		toSerialize["innerError"] = o.InnerError
	}
	toSerialize["message"] = o.Message
	if !IsNil(o.Target) {
		toSerialize["target"] = o.Target
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ErrorResponseDetailsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"code",
		"message",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varErrorResponseDetailsInner := _ErrorResponseDetailsInner{}

	err = json.Unmarshal(data, &varErrorResponseDetailsInner)

	if err != nil {
		return err
	}

	*o = ErrorResponseDetailsInner(varErrorResponseDetailsInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "code")
		delete(additionalProperties, "innerError")
		delete(additionalProperties, "message")
		delete(additionalProperties, "target")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableErrorResponseDetailsInner struct {
	value *ErrorResponseDetailsInner
	isSet bool
}

func (v NullableErrorResponseDetailsInner) Get() *ErrorResponseDetailsInner {
	return v.value
}

func (v *NullableErrorResponseDetailsInner) Set(val *ErrorResponseDetailsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableErrorResponseDetailsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableErrorResponseDetailsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableErrorResponseDetailsInner(val *ErrorResponseDetailsInner) *NullableErrorResponseDetailsInner {
	return &NullableErrorResponseDetailsInner{value: val, isSet: true}
}

func (v NullableErrorResponseDetailsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableErrorResponseDetailsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
