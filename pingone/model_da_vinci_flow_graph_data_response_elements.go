// Copyright Â© 2025 Ping Identity Corporation
/*
PingOne Platform User and Configuration Management API - SDK Generator

PingOne is a cloud-based framework for secure identity access management. The PingOne API gives developers the tools to integrate enterprise and third-party applications with the PingOne platform.

Contact: devex@pingidentity.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
	"fmt"
	"log/slog"
)

// checks if the DaVinciFlowGraphDataResponseElements type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DaVinciFlowGraphDataResponseElements{}

// checks if the DaVinciFlowGraphDataResponseElements type satisfies the LogValuer interface at compile time
var _ slog.LogValuer = &DaVinciFlowGraphDataResponseElements{}

// DaVinciFlowGraphDataResponseElements struct for DaVinciFlowGraphDataResponseElements
type DaVinciFlowGraphDataResponseElements struct {
	Nodes                []DaVinciFlowGraphDataResponseElementsNode `json:"nodes"`
	Edges                []DaVinciFlowGraphDataResponseElementsEdge `json:"edges,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DaVinciFlowGraphDataResponseElements DaVinciFlowGraphDataResponseElements

// NewDaVinciFlowGraphDataResponseElements instantiates a new DaVinciFlowGraphDataResponseElements object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDaVinciFlowGraphDataResponseElements(nodes []DaVinciFlowGraphDataResponseElementsNode) *DaVinciFlowGraphDataResponseElements {
	this := DaVinciFlowGraphDataResponseElements{}
	this.Nodes = nodes
	return &this
}

// NewDaVinciFlowGraphDataResponseElementsWithDefaults instantiates a new DaVinciFlowGraphDataResponseElements object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDaVinciFlowGraphDataResponseElementsWithDefaults() *DaVinciFlowGraphDataResponseElements {
	this := DaVinciFlowGraphDataResponseElements{}
	return &this
}

// GetNodes returns the Nodes field value
func (o *DaVinciFlowGraphDataResponseElements) GetNodes() []DaVinciFlowGraphDataResponseElementsNode {
	if o == nil {
		var ret []DaVinciFlowGraphDataResponseElementsNode
		return ret
	}

	return o.Nodes
}

// GetNodesOk returns a tuple with the Nodes field value
// and a boolean to check if the value has been set.
func (o *DaVinciFlowGraphDataResponseElements) GetNodesOk() ([]DaVinciFlowGraphDataResponseElementsNode, bool) {
	if o == nil {
		return nil, false
	}
	return o.Nodes, true
}

// SetNodes sets field value
func (o *DaVinciFlowGraphDataResponseElements) SetNodes(v []DaVinciFlowGraphDataResponseElementsNode) {
	o.Nodes = v
}

// GetEdges returns the Edges field value if set, zero value otherwise.
func (o *DaVinciFlowGraphDataResponseElements) GetEdges() []DaVinciFlowGraphDataResponseElementsEdge {
	if o == nil || IsNil(o.Edges) {
		var ret []DaVinciFlowGraphDataResponseElementsEdge
		return ret
	}
	return o.Edges
}

// GetEdgesOk returns a tuple with the Edges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaVinciFlowGraphDataResponseElements) GetEdgesOk() ([]DaVinciFlowGraphDataResponseElementsEdge, bool) {
	if o == nil || IsNil(o.Edges) {
		return nil, false
	}
	return o.Edges, true
}

// HasEdges returns a boolean if a field has been set.
func (o *DaVinciFlowGraphDataResponseElements) HasEdges() bool {
	if o != nil && !IsNil(o.Edges) {
		return true
	}

	return false
}

// SetEdges gets a reference to the given []DaVinciFlowGraphDataResponseElementsEdge and assigns it to the Edges field.
func (o *DaVinciFlowGraphDataResponseElements) SetEdges(v []DaVinciFlowGraphDataResponseElementsEdge) {
	o.Edges = v
}

func (o DaVinciFlowGraphDataResponseElements) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DaVinciFlowGraphDataResponseElements) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["nodes"] = o.Nodes
	if !IsNil(o.Edges) {
		toSerialize["edges"] = o.Edges
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DaVinciFlowGraphDataResponseElements) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"nodes",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDaVinciFlowGraphDataResponseElements := _DaVinciFlowGraphDataResponseElements{}

	err = json.Unmarshal(data, &varDaVinciFlowGraphDataResponseElements)

	if err != nil {
		return err
	}

	*o = DaVinciFlowGraphDataResponseElements(varDaVinciFlowGraphDataResponseElements)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "nodes")
		delete(additionalProperties, "edges")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

func (o DaVinciFlowGraphDataResponseElements) LogValue() slog.Value {
	logAttrs := make([]slog.Attr, 0)

	logAttrs = append(logAttrs, slog.Any("nodes", o.Nodes))
	if !IsNil(o.Edges) {
		logAttrs = append(logAttrs, slog.Any("edges", o.Edges))
	}
	logAttrs = append(logAttrs, slog.Any("additionalProperties", o.AdditionalProperties))

	return slog.GroupValue(logAttrs...)
}

type NullableDaVinciFlowGraphDataResponseElements struct {
	value *DaVinciFlowGraphDataResponseElements
	isSet bool
}

func (v NullableDaVinciFlowGraphDataResponseElements) Get() *DaVinciFlowGraphDataResponseElements {
	return v.value
}

func (v *NullableDaVinciFlowGraphDataResponseElements) Set(val *DaVinciFlowGraphDataResponseElements) {
	v.value = val
	v.isSet = true
}

func (v NullableDaVinciFlowGraphDataResponseElements) IsSet() bool {
	return v.isSet
}

func (v *NullableDaVinciFlowGraphDataResponseElements) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDaVinciFlowGraphDataResponseElements(val *DaVinciFlowGraphDataResponseElements) *NullableDaVinciFlowGraphDataResponseElements {
	return &NullableDaVinciFlowGraphDataResponseElements{value: val, isSet: true}
}

func (v NullableDaVinciFlowGraphDataResponseElements) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDaVinciFlowGraphDataResponseElements) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
