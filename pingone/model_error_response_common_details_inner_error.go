// Copyright Â© 2025 Ping Identity Corporation
/*
PingOne User and Configuration Management API

The PingOne User and Configuration Management API provides the interface to configure and manage users in the PingOne directory and the administration configuration of your PingOne organization.

Contact: developerexperiences@pingidentity.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
	"log/slog"
	"time"
)

// checks if the ErrorResponseCommonDetailsInnerError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ErrorResponseCommonDetailsInnerError{}

// checks if the ErrorResponseCommonDetailsInnerError type satisfies the LogValuer interface at compile time
var _ slog.LogValuer = &ErrorResponseCommonDetailsInnerError{}

// ErrorResponseCommonDetailsInnerError struct for ErrorResponseCommonDetailsInnerError
type ErrorResponseCommonDetailsInnerError struct {
	AllowedPattern       *string       `json:"allowedPattern,omitempty"`
	AllowedValues        []interface{} `json:"allowedValues,omitempty"`
	MaximumValue         *float32      `json:"maximumValue,omitempty"`
	QuotaLimit           *float32      `json:"quotaLimit,omitempty"`
	QuotaResetTime       *time.Time    `json:"quotaResetTime,omitempty"`
	RangeMaximumValue    *float32      `json:"rangeMaximumValue,omitempty"`
	RangeMinimumValue    *float32      `json:"rangeMinimumValue,omitempty"`
	RetryAfter           *string       `json:"retryAfter,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ErrorResponseCommonDetailsInnerError ErrorResponseCommonDetailsInnerError

// NewErrorResponseCommonDetailsInnerError instantiates a new ErrorResponseCommonDetailsInnerError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewErrorResponseCommonDetailsInnerError() *ErrorResponseCommonDetailsInnerError {
	this := ErrorResponseCommonDetailsInnerError{}
	return &this
}

// NewErrorResponseCommonDetailsInnerErrorWithDefaults instantiates a new ErrorResponseCommonDetailsInnerError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewErrorResponseCommonDetailsInnerErrorWithDefaults() *ErrorResponseCommonDetailsInnerError {
	this := ErrorResponseCommonDetailsInnerError{}
	return &this
}

// GetAllowedPattern returns the AllowedPattern field value if set, zero value otherwise.
func (o *ErrorResponseCommonDetailsInnerError) GetAllowedPattern() string {
	if o == nil || IsNil(o.AllowedPattern) {
		var ret string
		return ret
	}
	return *o.AllowedPattern
}

// GetAllowedPatternOk returns a tuple with the AllowedPattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorResponseCommonDetailsInnerError) GetAllowedPatternOk() (*string, bool) {
	if o == nil || IsNil(o.AllowedPattern) {
		return nil, false
	}
	return o.AllowedPattern, true
}

// HasAllowedPattern returns a boolean if a field has been set.
func (o *ErrorResponseCommonDetailsInnerError) HasAllowedPattern() bool {
	if o != nil && !IsNil(o.AllowedPattern) {
		return true
	}

	return false
}

// SetAllowedPattern gets a reference to the given string and assigns it to the AllowedPattern field.
func (o *ErrorResponseCommonDetailsInnerError) SetAllowedPattern(v string) {
	o.AllowedPattern = &v
}

// GetAllowedValues returns the AllowedValues field value if set, zero value otherwise.
func (o *ErrorResponseCommonDetailsInnerError) GetAllowedValues() []interface{} {
	if o == nil || IsNil(o.AllowedValues) {
		var ret []interface{}
		return ret
	}
	return o.AllowedValues
}

// GetAllowedValuesOk returns a tuple with the AllowedValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorResponseCommonDetailsInnerError) GetAllowedValuesOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.AllowedValues) {
		return nil, false
	}
	return o.AllowedValues, true
}

// HasAllowedValues returns a boolean if a field has been set.
func (o *ErrorResponseCommonDetailsInnerError) HasAllowedValues() bool {
	if o != nil && !IsNil(o.AllowedValues) {
		return true
	}

	return false
}

// SetAllowedValues gets a reference to the given []interface{} and assigns it to the AllowedValues field.
func (o *ErrorResponseCommonDetailsInnerError) SetAllowedValues(v []interface{}) {
	o.AllowedValues = v
}

// GetMaximumValue returns the MaximumValue field value if set, zero value otherwise.
func (o *ErrorResponseCommonDetailsInnerError) GetMaximumValue() float32 {
	if o == nil || IsNil(o.MaximumValue) {
		var ret float32
		return ret
	}
	return *o.MaximumValue
}

// GetMaximumValueOk returns a tuple with the MaximumValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorResponseCommonDetailsInnerError) GetMaximumValueOk() (*float32, bool) {
	if o == nil || IsNil(o.MaximumValue) {
		return nil, false
	}
	return o.MaximumValue, true
}

// HasMaximumValue returns a boolean if a field has been set.
func (o *ErrorResponseCommonDetailsInnerError) HasMaximumValue() bool {
	if o != nil && !IsNil(o.MaximumValue) {
		return true
	}

	return false
}

// SetMaximumValue gets a reference to the given float32 and assigns it to the MaximumValue field.
func (o *ErrorResponseCommonDetailsInnerError) SetMaximumValue(v float32) {
	o.MaximumValue = &v
}

// GetQuotaLimit returns the QuotaLimit field value if set, zero value otherwise.
func (o *ErrorResponseCommonDetailsInnerError) GetQuotaLimit() float32 {
	if o == nil || IsNil(o.QuotaLimit) {
		var ret float32
		return ret
	}
	return *o.QuotaLimit
}

// GetQuotaLimitOk returns a tuple with the QuotaLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorResponseCommonDetailsInnerError) GetQuotaLimitOk() (*float32, bool) {
	if o == nil || IsNil(o.QuotaLimit) {
		return nil, false
	}
	return o.QuotaLimit, true
}

// HasQuotaLimit returns a boolean if a field has been set.
func (o *ErrorResponseCommonDetailsInnerError) HasQuotaLimit() bool {
	if o != nil && !IsNil(o.QuotaLimit) {
		return true
	}

	return false
}

// SetQuotaLimit gets a reference to the given float32 and assigns it to the QuotaLimit field.
func (o *ErrorResponseCommonDetailsInnerError) SetQuotaLimit(v float32) {
	o.QuotaLimit = &v
}

// GetQuotaResetTime returns the QuotaResetTime field value if set, zero value otherwise.
func (o *ErrorResponseCommonDetailsInnerError) GetQuotaResetTime() time.Time {
	if o == nil || IsNil(o.QuotaResetTime) {
		var ret time.Time
		return ret
	}
	return *o.QuotaResetTime
}

// GetQuotaResetTimeOk returns a tuple with the QuotaResetTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorResponseCommonDetailsInnerError) GetQuotaResetTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.QuotaResetTime) {
		return nil, false
	}
	return o.QuotaResetTime, true
}

// HasQuotaResetTime returns a boolean if a field has been set.
func (o *ErrorResponseCommonDetailsInnerError) HasQuotaResetTime() bool {
	if o != nil && !IsNil(o.QuotaResetTime) {
		return true
	}

	return false
}

// SetQuotaResetTime gets a reference to the given time.Time and assigns it to the QuotaResetTime field.
func (o *ErrorResponseCommonDetailsInnerError) SetQuotaResetTime(v time.Time) {
	o.QuotaResetTime = &v
}

// GetRangeMaximumValue returns the RangeMaximumValue field value if set, zero value otherwise.
func (o *ErrorResponseCommonDetailsInnerError) GetRangeMaximumValue() float32 {
	if o == nil || IsNil(o.RangeMaximumValue) {
		var ret float32
		return ret
	}
	return *o.RangeMaximumValue
}

// GetRangeMaximumValueOk returns a tuple with the RangeMaximumValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorResponseCommonDetailsInnerError) GetRangeMaximumValueOk() (*float32, bool) {
	if o == nil || IsNil(o.RangeMaximumValue) {
		return nil, false
	}
	return o.RangeMaximumValue, true
}

// HasRangeMaximumValue returns a boolean if a field has been set.
func (o *ErrorResponseCommonDetailsInnerError) HasRangeMaximumValue() bool {
	if o != nil && !IsNil(o.RangeMaximumValue) {
		return true
	}

	return false
}

// SetRangeMaximumValue gets a reference to the given float32 and assigns it to the RangeMaximumValue field.
func (o *ErrorResponseCommonDetailsInnerError) SetRangeMaximumValue(v float32) {
	o.RangeMaximumValue = &v
}

// GetRangeMinimumValue returns the RangeMinimumValue field value if set, zero value otherwise.
func (o *ErrorResponseCommonDetailsInnerError) GetRangeMinimumValue() float32 {
	if o == nil || IsNil(o.RangeMinimumValue) {
		var ret float32
		return ret
	}
	return *o.RangeMinimumValue
}

// GetRangeMinimumValueOk returns a tuple with the RangeMinimumValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorResponseCommonDetailsInnerError) GetRangeMinimumValueOk() (*float32, bool) {
	if o == nil || IsNil(o.RangeMinimumValue) {
		return nil, false
	}
	return o.RangeMinimumValue, true
}

// HasRangeMinimumValue returns a boolean if a field has been set.
func (o *ErrorResponseCommonDetailsInnerError) HasRangeMinimumValue() bool {
	if o != nil && !IsNil(o.RangeMinimumValue) {
		return true
	}

	return false
}

// SetRangeMinimumValue gets a reference to the given float32 and assigns it to the RangeMinimumValue field.
func (o *ErrorResponseCommonDetailsInnerError) SetRangeMinimumValue(v float32) {
	o.RangeMinimumValue = &v
}

// GetRetryAfter returns the RetryAfter field value if set, zero value otherwise.
func (o *ErrorResponseCommonDetailsInnerError) GetRetryAfter() string {
	if o == nil || IsNil(o.RetryAfter) {
		var ret string
		return ret
	}
	return *o.RetryAfter
}

// GetRetryAfterOk returns a tuple with the RetryAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorResponseCommonDetailsInnerError) GetRetryAfterOk() (*string, bool) {
	if o == nil || IsNil(o.RetryAfter) {
		return nil, false
	}
	return o.RetryAfter, true
}

// HasRetryAfter returns a boolean if a field has been set.
func (o *ErrorResponseCommonDetailsInnerError) HasRetryAfter() bool {
	if o != nil && !IsNil(o.RetryAfter) {
		return true
	}

	return false
}

// SetRetryAfter gets a reference to the given string and assigns it to the RetryAfter field.
func (o *ErrorResponseCommonDetailsInnerError) SetRetryAfter(v string) {
	o.RetryAfter = &v
}

func (o ErrorResponseCommonDetailsInnerError) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ErrorResponseCommonDetailsInnerError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowedPattern) {
		toSerialize["allowedPattern"] = o.AllowedPattern
	}
	if !IsNil(o.AllowedValues) {
		toSerialize["allowedValues"] = o.AllowedValues
	}
	if !IsNil(o.MaximumValue) {
		toSerialize["maximumValue"] = o.MaximumValue
	}
	if !IsNil(o.QuotaLimit) {
		toSerialize["quotaLimit"] = o.QuotaLimit
	}
	if !IsNil(o.QuotaResetTime) {
		toSerialize["quotaResetTime"] = o.QuotaResetTime
	}
	if !IsNil(o.RangeMaximumValue) {
		toSerialize["rangeMaximumValue"] = o.RangeMaximumValue
	}
	if !IsNil(o.RangeMinimumValue) {
		toSerialize["rangeMinimumValue"] = o.RangeMinimumValue
	}
	if !IsNil(o.RetryAfter) {
		toSerialize["retryAfter"] = o.RetryAfter
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ErrorResponseCommonDetailsInnerError) UnmarshalJSON(data []byte) (err error) {
	varErrorResponseCommonDetailsInnerError := _ErrorResponseCommonDetailsInnerError{}

	err = json.Unmarshal(data, &varErrorResponseCommonDetailsInnerError)

	if err != nil {
		return err
	}

	*o = ErrorResponseCommonDetailsInnerError(varErrorResponseCommonDetailsInnerError)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "allowedPattern")
		delete(additionalProperties, "allowedValues")
		delete(additionalProperties, "maximumValue")
		delete(additionalProperties, "quotaLimit")
		delete(additionalProperties, "quotaResetTime")
		delete(additionalProperties, "rangeMaximumValue")
		delete(additionalProperties, "rangeMinimumValue")
		delete(additionalProperties, "retryAfter")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

func (o ErrorResponseCommonDetailsInnerError) LogValue() slog.Value {
	logAttrs := make([]slog.Attr, 0)

	if !IsNil(o.AllowedPattern) {
		logAttrs = append(logAttrs, slog.Any("allowedPattern", *o.AllowedPattern))
	}
	if !IsNil(o.AllowedValues) {
		logAttrs = append(logAttrs, slog.Any("allowedValues", o.AllowedValues))
	}
	if !IsNil(o.MaximumValue) {
		logAttrs = append(logAttrs, slog.Any("maximumValue", *o.MaximumValue))
	}
	if !IsNil(o.QuotaLimit) {
		logAttrs = append(logAttrs, slog.Any("quotaLimit", *o.QuotaLimit))
	}
	if !IsNil(o.QuotaResetTime) {
		logAttrs = append(logAttrs, slog.Any("quotaResetTime", *o.QuotaResetTime))
	}
	if !IsNil(o.RangeMaximumValue) {
		logAttrs = append(logAttrs, slog.Any("rangeMaximumValue", *o.RangeMaximumValue))
	}
	if !IsNil(o.RangeMinimumValue) {
		logAttrs = append(logAttrs, slog.Any("rangeMinimumValue", *o.RangeMinimumValue))
	}
	if !IsNil(o.RetryAfter) {
		logAttrs = append(logAttrs, slog.Any("retryAfter", *o.RetryAfter))
	}
	logAttrs = append(logAttrs, slog.Any("additionalProperties", o.AdditionalProperties))

	return slog.GroupValue(logAttrs...)
}

type NullableErrorResponseCommonDetailsInnerError struct {
	value *ErrorResponseCommonDetailsInnerError
	isSet bool
}

func (v NullableErrorResponseCommonDetailsInnerError) Get() *ErrorResponseCommonDetailsInnerError {
	return v.value
}

func (v *NullableErrorResponseCommonDetailsInnerError) Set(val *ErrorResponseCommonDetailsInnerError) {
	v.value = val
	v.isSet = true
}

func (v NullableErrorResponseCommonDetailsInnerError) IsSet() bool {
	return v.isSet
}

func (v *NullableErrorResponseCommonDetailsInnerError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableErrorResponseCommonDetailsInnerError(val *ErrorResponseCommonDetailsInnerError) *NullableErrorResponseCommonDetailsInnerError {
	return &NullableErrorResponseCommonDetailsInnerError{value: val, isSet: true}
}

func (v NullableErrorResponseCommonDetailsInnerError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableErrorResponseCommonDetailsInnerError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
