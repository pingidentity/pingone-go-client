// Copyright Â© 2025 Ping Identity Corporation
/*
PingOne Platform User and Configuration Management API - SDK Generator

PingOne is a cloud-based framework for secure identity access management. The PingOne API gives developers the tools to integrate enterprise and third-party applications with the PingOne platform.

Contact: devex@pingidentity.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
	"fmt"
	"log/slog"
)

// checks if the DaVinciApplicationResponseLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DaVinciApplicationResponseLinks{}

// checks if the DaVinciApplicationResponseLinks type satisfies the LogValuer interface at compile time
var _ slog.LogValuer = &DaVinciApplicationResponseLinks{}

// DaVinciApplicationResponseLinks struct for DaVinciApplicationResponseLinks
type DaVinciApplicationResponseLinks struct {
	Self                           JSONHALLink `json:"self"`
	Environment                    JSONHALLink `json:"environment"`
	FlowPolicies                   JSONHALLink `json:"flowPolicies"`
	DavinciApplicationRotateKey    JSONHALLink `json:"davinciApplication.rotateKey"`
	DavinciApplicationRotateSecret JSONHALLink `json:"davinciApplication.rotateSecret"`
	AdditionalProperties           map[string]interface{}
}

type _DaVinciApplicationResponseLinks DaVinciApplicationResponseLinks

// NewDaVinciApplicationResponseLinks instantiates a new DaVinciApplicationResponseLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDaVinciApplicationResponseLinks(self JSONHALLink, environment JSONHALLink, flowPolicies JSONHALLink, davinciApplicationRotateKey JSONHALLink, davinciApplicationRotateSecret JSONHALLink) *DaVinciApplicationResponseLinks {
	this := DaVinciApplicationResponseLinks{}
	this.Self = self
	this.Environment = environment
	this.FlowPolicies = flowPolicies
	this.DavinciApplicationRotateKey = davinciApplicationRotateKey
	this.DavinciApplicationRotateSecret = davinciApplicationRotateSecret
	return &this
}

// NewDaVinciApplicationResponseLinksWithDefaults instantiates a new DaVinciApplicationResponseLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDaVinciApplicationResponseLinksWithDefaults() *DaVinciApplicationResponseLinks {
	this := DaVinciApplicationResponseLinks{}
	return &this
}

// GetSelf returns the Self field value
func (o *DaVinciApplicationResponseLinks) GetSelf() JSONHALLink {
	if o == nil {
		var ret JSONHALLink
		return ret
	}

	return o.Self
}

// GetSelfOk returns a tuple with the Self field value
// and a boolean to check if the value has been set.
func (o *DaVinciApplicationResponseLinks) GetSelfOk() (*JSONHALLink, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Self, true
}

// SetSelf sets field value
func (o *DaVinciApplicationResponseLinks) SetSelf(v JSONHALLink) {
	o.Self = v
}

// GetEnvironment returns the Environment field value
func (o *DaVinciApplicationResponseLinks) GetEnvironment() JSONHALLink {
	if o == nil {
		var ret JSONHALLink
		return ret
	}

	return o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value
// and a boolean to check if the value has been set.
func (o *DaVinciApplicationResponseLinks) GetEnvironmentOk() (*JSONHALLink, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Environment, true
}

// SetEnvironment sets field value
func (o *DaVinciApplicationResponseLinks) SetEnvironment(v JSONHALLink) {
	o.Environment = v
}

// GetFlowPolicies returns the FlowPolicies field value
func (o *DaVinciApplicationResponseLinks) GetFlowPolicies() JSONHALLink {
	if o == nil {
		var ret JSONHALLink
		return ret
	}

	return o.FlowPolicies
}

// GetFlowPoliciesOk returns a tuple with the FlowPolicies field value
// and a boolean to check if the value has been set.
func (o *DaVinciApplicationResponseLinks) GetFlowPoliciesOk() (*JSONHALLink, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FlowPolicies, true
}

// SetFlowPolicies sets field value
func (o *DaVinciApplicationResponseLinks) SetFlowPolicies(v JSONHALLink) {
	o.FlowPolicies = v
}

// GetDavinciApplicationRotateKey returns the DavinciApplicationRotateKey field value
func (o *DaVinciApplicationResponseLinks) GetDavinciApplicationRotateKey() JSONHALLink {
	if o == nil {
		var ret JSONHALLink
		return ret
	}

	return o.DavinciApplicationRotateKey
}

// GetDavinciApplicationRotateKeyOk returns a tuple with the DavinciApplicationRotateKey field value
// and a boolean to check if the value has been set.
func (o *DaVinciApplicationResponseLinks) GetDavinciApplicationRotateKeyOk() (*JSONHALLink, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DavinciApplicationRotateKey, true
}

// SetDavinciApplicationRotateKey sets field value
func (o *DaVinciApplicationResponseLinks) SetDavinciApplicationRotateKey(v JSONHALLink) {
	o.DavinciApplicationRotateKey = v
}

// GetDavinciApplicationRotateSecret returns the DavinciApplicationRotateSecret field value
func (o *DaVinciApplicationResponseLinks) GetDavinciApplicationRotateSecret() JSONHALLink {
	if o == nil {
		var ret JSONHALLink
		return ret
	}

	return o.DavinciApplicationRotateSecret
}

// GetDavinciApplicationRotateSecretOk returns a tuple with the DavinciApplicationRotateSecret field value
// and a boolean to check if the value has been set.
func (o *DaVinciApplicationResponseLinks) GetDavinciApplicationRotateSecretOk() (*JSONHALLink, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DavinciApplicationRotateSecret, true
}

// SetDavinciApplicationRotateSecret sets field value
func (o *DaVinciApplicationResponseLinks) SetDavinciApplicationRotateSecret(v JSONHALLink) {
	o.DavinciApplicationRotateSecret = v
}

func (o DaVinciApplicationResponseLinks) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DaVinciApplicationResponseLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["self"] = o.Self
	toSerialize["environment"] = o.Environment
	toSerialize["flowPolicies"] = o.FlowPolicies
	toSerialize["davinciApplication.rotateKey"] = o.DavinciApplicationRotateKey
	toSerialize["davinciApplication.rotateSecret"] = o.DavinciApplicationRotateSecret

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DaVinciApplicationResponseLinks) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"self",
		"environment",
		"flowPolicies",
		"davinciApplication.rotateKey",
		"davinciApplication.rotateSecret",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDaVinciApplicationResponseLinks := _DaVinciApplicationResponseLinks{}

	err = json.Unmarshal(data, &varDaVinciApplicationResponseLinks)

	if err != nil {
		return err
	}

	*o = DaVinciApplicationResponseLinks(varDaVinciApplicationResponseLinks)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "self")
		delete(additionalProperties, "environment")
		delete(additionalProperties, "flowPolicies")
		delete(additionalProperties, "davinciApplication.rotateKey")
		delete(additionalProperties, "davinciApplication.rotateSecret")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

func (o DaVinciApplicationResponseLinks) LogValue() slog.Value {
	logAttrs := make([]slog.Attr, 0)

	logAttrs = append(logAttrs, slog.Any("self", o.Self))
	logAttrs = append(logAttrs, slog.Any("environment", o.Environment))
	logAttrs = append(logAttrs, slog.Any("flowPolicies", o.FlowPolicies))
	logAttrs = append(logAttrs, slog.Any("davinciApplication.rotateKey", o.DavinciApplicationRotateKey))
	logAttrs = append(logAttrs, slog.Any("davinciApplication.rotateSecret", o.DavinciApplicationRotateSecret))
	logAttrs = append(logAttrs, slog.Any("additionalProperties", o.AdditionalProperties))

	return slog.GroupValue(logAttrs...)
}

type NullableDaVinciApplicationResponseLinks struct {
	value *DaVinciApplicationResponseLinks
	isSet bool
}

func (v NullableDaVinciApplicationResponseLinks) Get() *DaVinciApplicationResponseLinks {
	return v.value
}

func (v *NullableDaVinciApplicationResponseLinks) Set(val *DaVinciApplicationResponseLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableDaVinciApplicationResponseLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableDaVinciApplicationResponseLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDaVinciApplicationResponseLinks(val *DaVinciApplicationResponseLinks) *NullableDaVinciApplicationResponseLinks {
	return &NullableDaVinciApplicationResponseLinks{value: val, isSet: true}
}

func (v NullableDaVinciApplicationResponseLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDaVinciApplicationResponseLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
