// Copyright Â© 2025 Ping Identity Corporation
/*
PingOne Platform User and Configuration Management API - SDK Generator

PingOne is a cloud-based framework for secure identity access management. The PingOne API gives developers the tools to integrate enterprise and third-party applications with the PingOne platform.

Contact: devex@pingidentity.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
	"log/slog"
	"time"
)

// checks if the EnvironmentBillOfMaterialsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnvironmentBillOfMaterialsResponse{}

// checks if the EnvironmentBillOfMaterialsResponse type satisfies the LogValuer interface at compile time
var _ slog.LogValuer = &EnvironmentBillOfMaterialsResponse{}

// EnvironmentBillOfMaterialsResponse struct for EnvironmentBillOfMaterialsResponse
type EnvironmentBillOfMaterialsResponse struct {
	Embedded             map[string]map[string]interface{}   `json:"_embedded,omitempty"`
	Links                map[string]JSONHALLink              `json:"_links,omitempty"`
	CreatedAt            *time.Time                          `json:"createdAt,omitempty"`
	Products             []EnvironmentBillOfMaterialsProduct `json:"products,omitempty"`
	SolutionType         *string                             `json:"solutionType,omitempty"`
	UpdatedAt            *time.Time                          `json:"updatedAt,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _EnvironmentBillOfMaterialsResponse EnvironmentBillOfMaterialsResponse

// NewEnvironmentBillOfMaterialsResponse instantiates a new EnvironmentBillOfMaterialsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvironmentBillOfMaterialsResponse() *EnvironmentBillOfMaterialsResponse {
	this := EnvironmentBillOfMaterialsResponse{}
	return &this
}

// NewEnvironmentBillOfMaterialsResponseWithDefaults instantiates a new EnvironmentBillOfMaterialsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvironmentBillOfMaterialsResponseWithDefaults() *EnvironmentBillOfMaterialsResponse {
	this := EnvironmentBillOfMaterialsResponse{}
	return &this
}

// GetEmbedded returns the Embedded field value if set, zero value otherwise.
func (o *EnvironmentBillOfMaterialsResponse) GetEmbedded() map[string]map[string]interface{} {
	if o == nil || IsNil(o.Embedded) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.Embedded
}

// GetEmbeddedOk returns a tuple with the Embedded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentBillOfMaterialsResponse) GetEmbeddedOk() (map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Embedded) {
		return map[string]map[string]interface{}{}, false
	}
	return o.Embedded, true
}

// HasEmbedded returns a boolean if a field has been set.
func (o *EnvironmentBillOfMaterialsResponse) HasEmbedded() bool {
	if o != nil && !IsNil(o.Embedded) {
		return true
	}

	return false
}

// SetEmbedded gets a reference to the given map[string]map[string]interface{} and assigns it to the Embedded field.
func (o *EnvironmentBillOfMaterialsResponse) SetEmbedded(v map[string]map[string]interface{}) {
	o.Embedded = v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *EnvironmentBillOfMaterialsResponse) GetLinks() map[string]JSONHALLink {
	if o == nil || IsNil(o.Links) {
		var ret map[string]JSONHALLink
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentBillOfMaterialsResponse) GetLinksOk() (map[string]JSONHALLink, bool) {
	if o == nil || IsNil(o.Links) {
		return map[string]JSONHALLink{}, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *EnvironmentBillOfMaterialsResponse) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given map[string]JSONHALLink and assigns it to the Links field.
func (o *EnvironmentBillOfMaterialsResponse) SetLinks(v map[string]JSONHALLink) {
	o.Links = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *EnvironmentBillOfMaterialsResponse) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentBillOfMaterialsResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *EnvironmentBillOfMaterialsResponse) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *EnvironmentBillOfMaterialsResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetProducts returns the Products field value if set, zero value otherwise.
func (o *EnvironmentBillOfMaterialsResponse) GetProducts() []EnvironmentBillOfMaterialsProduct {
	if o == nil || IsNil(o.Products) {
		var ret []EnvironmentBillOfMaterialsProduct
		return ret
	}
	return o.Products
}

// GetProductsOk returns a tuple with the Products field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentBillOfMaterialsResponse) GetProductsOk() ([]EnvironmentBillOfMaterialsProduct, bool) {
	if o == nil || IsNil(o.Products) {
		return nil, false
	}
	return o.Products, true
}

// HasProducts returns a boolean if a field has been set.
func (o *EnvironmentBillOfMaterialsResponse) HasProducts() bool {
	if o != nil && !IsNil(o.Products) {
		return true
	}

	return false
}

// SetProducts gets a reference to the given []EnvironmentBillOfMaterialsProduct and assigns it to the Products field.
func (o *EnvironmentBillOfMaterialsResponse) SetProducts(v []EnvironmentBillOfMaterialsProduct) {
	o.Products = v
}

// GetSolutionType returns the SolutionType field value if set, zero value otherwise.
func (o *EnvironmentBillOfMaterialsResponse) GetSolutionType() string {
	if o == nil || IsNil(o.SolutionType) {
		var ret string
		return ret
	}
	return *o.SolutionType
}

// GetSolutionTypeOk returns a tuple with the SolutionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentBillOfMaterialsResponse) GetSolutionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SolutionType) {
		return nil, false
	}
	return o.SolutionType, true
}

// HasSolutionType returns a boolean if a field has been set.
func (o *EnvironmentBillOfMaterialsResponse) HasSolutionType() bool {
	if o != nil && !IsNil(o.SolutionType) {
		return true
	}

	return false
}

// SetSolutionType gets a reference to the given string and assigns it to the SolutionType field.
func (o *EnvironmentBillOfMaterialsResponse) SetSolutionType(v string) {
	o.SolutionType = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *EnvironmentBillOfMaterialsResponse) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentBillOfMaterialsResponse) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *EnvironmentBillOfMaterialsResponse) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *EnvironmentBillOfMaterialsResponse) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o EnvironmentBillOfMaterialsResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnvironmentBillOfMaterialsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Embedded) {
		toSerialize["_embedded"] = o.Embedded
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.Products) {
		toSerialize["products"] = o.Products
	}
	if !IsNil(o.SolutionType) {
		toSerialize["solutionType"] = o.SolutionType
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EnvironmentBillOfMaterialsResponse) UnmarshalJSON(data []byte) (err error) {
	varEnvironmentBillOfMaterialsResponse := _EnvironmentBillOfMaterialsResponse{}

	err = json.Unmarshal(data, &varEnvironmentBillOfMaterialsResponse)

	if err != nil {
		return err
	}

	*o = EnvironmentBillOfMaterialsResponse(varEnvironmentBillOfMaterialsResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "_embedded")
		delete(additionalProperties, "_links")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "products")
		delete(additionalProperties, "solutionType")
		delete(additionalProperties, "updatedAt")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

func (o EnvironmentBillOfMaterialsResponse) LogValue() slog.Value {
	logAttrs := make([]slog.Attr, 0)

	if !IsNil(o.Embedded) {
		logAttrs = append(logAttrs, slog.Any("_embedded", o.Embedded))
	}
	if !IsNil(o.Links) {
		logAttrs = append(logAttrs, slog.Any("_links", o.Links))
	}
	if !IsNil(o.CreatedAt) {
		logAttrs = append(logAttrs, slog.Any("createdAt", *o.CreatedAt))
	}
	if !IsNil(o.Products) {
		logAttrs = append(logAttrs, slog.Any("products", o.Products))
	}
	if !IsNil(o.SolutionType) {
		logAttrs = append(logAttrs, slog.Any("solutionType", *o.SolutionType))
	}
	if !IsNil(o.UpdatedAt) {
		logAttrs = append(logAttrs, slog.Any("updatedAt", *o.UpdatedAt))
	}
	logAttrs = append(logAttrs, slog.Any("additionalProperties", o.AdditionalProperties))

	return slog.GroupValue(logAttrs...)
}

type NullableEnvironmentBillOfMaterialsResponse struct {
	value *EnvironmentBillOfMaterialsResponse
	isSet bool
}

func (v NullableEnvironmentBillOfMaterialsResponse) Get() *EnvironmentBillOfMaterialsResponse {
	return v.value
}

func (v *NullableEnvironmentBillOfMaterialsResponse) Set(val *EnvironmentBillOfMaterialsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentBillOfMaterialsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentBillOfMaterialsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentBillOfMaterialsResponse(val *EnvironmentBillOfMaterialsResponse) *NullableEnvironmentBillOfMaterialsResponse {
	return &NullableEnvironmentBillOfMaterialsResponse{value: val, isSet: true}
}

func (v NullableEnvironmentBillOfMaterialsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentBillOfMaterialsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
