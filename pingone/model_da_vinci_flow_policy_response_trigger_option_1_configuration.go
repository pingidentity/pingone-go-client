// Copyright Â© 2025 Ping Identity Corporation
/*
PingOne Platform User and Configuration Management API - Go SDK

PingOne is a cloud-based framework for secure identity access management. The PingOne API gives developers the tools to integrate enterprise and third-party applications with the PingOne platform.

Contact: developerexperiences@pingidentity.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
	"fmt"
	"log/slog"
)

// checks if the DaVinciFlowPolicyResponseTriggerOption1Configuration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DaVinciFlowPolicyResponseTriggerOption1Configuration{}

// checks if the DaVinciFlowPolicyResponseTriggerOption1Configuration type satisfies the LogValuer interface at compile time
var _ slog.LogValuer = &DaVinciFlowPolicyResponseTriggerOption1Configuration{}

// DaVinciFlowPolicyResponseTriggerOption1Configuration struct for DaVinciFlowPolicyResponseTriggerOption1Configuration
type DaVinciFlowPolicyResponseTriggerOption1Configuration struct {
	Mfa                  DaVinciFlowPolicyResponseTriggerOption1ConfigurationMFA      `json:"mfa"`
	Pwd                  DaVinciFlowPolicyResponseTriggerOption1ConfigurationPassword `json:"pwd"`
	AdditionalProperties map[string]interface{}
}

type _DaVinciFlowPolicyResponseTriggerOption1Configuration DaVinciFlowPolicyResponseTriggerOption1Configuration

// NewDaVinciFlowPolicyResponseTriggerOption1Configuration instantiates a new DaVinciFlowPolicyResponseTriggerOption1Configuration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDaVinciFlowPolicyResponseTriggerOption1Configuration(mfa DaVinciFlowPolicyResponseTriggerOption1ConfigurationMFA, pwd DaVinciFlowPolicyResponseTriggerOption1ConfigurationPassword) *DaVinciFlowPolicyResponseTriggerOption1Configuration {
	this := DaVinciFlowPolicyResponseTriggerOption1Configuration{}
	this.Mfa = mfa
	this.Pwd = pwd
	return &this
}

// NewDaVinciFlowPolicyResponseTriggerOption1ConfigurationWithDefaults instantiates a new DaVinciFlowPolicyResponseTriggerOption1Configuration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDaVinciFlowPolicyResponseTriggerOption1ConfigurationWithDefaults() *DaVinciFlowPolicyResponseTriggerOption1Configuration {
	this := DaVinciFlowPolicyResponseTriggerOption1Configuration{}
	return &this
}

// GetMfa returns the Mfa field value
func (o *DaVinciFlowPolicyResponseTriggerOption1Configuration) GetMfa() DaVinciFlowPolicyResponseTriggerOption1ConfigurationMFA {
	if o == nil {
		var ret DaVinciFlowPolicyResponseTriggerOption1ConfigurationMFA
		return ret
	}

	return o.Mfa
}

// GetMfaOk returns a tuple with the Mfa field value
// and a boolean to check if the value has been set.
func (o *DaVinciFlowPolicyResponseTriggerOption1Configuration) GetMfaOk() (*DaVinciFlowPolicyResponseTriggerOption1ConfigurationMFA, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Mfa, true
}

// SetMfa sets field value
func (o *DaVinciFlowPolicyResponseTriggerOption1Configuration) SetMfa(v DaVinciFlowPolicyResponseTriggerOption1ConfigurationMFA) {
	o.Mfa = v
}

// GetPwd returns the Pwd field value
func (o *DaVinciFlowPolicyResponseTriggerOption1Configuration) GetPwd() DaVinciFlowPolicyResponseTriggerOption1ConfigurationPassword {
	if o == nil {
		var ret DaVinciFlowPolicyResponseTriggerOption1ConfigurationPassword
		return ret
	}

	return o.Pwd
}

// GetPwdOk returns a tuple with the Pwd field value
// and a boolean to check if the value has been set.
func (o *DaVinciFlowPolicyResponseTriggerOption1Configuration) GetPwdOk() (*DaVinciFlowPolicyResponseTriggerOption1ConfigurationPassword, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pwd, true
}

// SetPwd sets field value
func (o *DaVinciFlowPolicyResponseTriggerOption1Configuration) SetPwd(v DaVinciFlowPolicyResponseTriggerOption1ConfigurationPassword) {
	o.Pwd = v
}

func (o DaVinciFlowPolicyResponseTriggerOption1Configuration) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DaVinciFlowPolicyResponseTriggerOption1Configuration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["mfa"] = o.Mfa
	toSerialize["pwd"] = o.Pwd

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DaVinciFlowPolicyResponseTriggerOption1Configuration) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"mfa",
		"pwd",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDaVinciFlowPolicyResponseTriggerOption1Configuration := _DaVinciFlowPolicyResponseTriggerOption1Configuration{}

	err = json.Unmarshal(data, &varDaVinciFlowPolicyResponseTriggerOption1Configuration)

	if err != nil {
		return err
	}

	*o = DaVinciFlowPolicyResponseTriggerOption1Configuration(varDaVinciFlowPolicyResponseTriggerOption1Configuration)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "mfa")
		delete(additionalProperties, "pwd")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

func (o DaVinciFlowPolicyResponseTriggerOption1Configuration) LogValue() slog.Value {
	logAttrs := make([]slog.Attr, 0)

	logAttrs = append(logAttrs, slog.Any("mfa", o.Mfa))
	logAttrs = append(logAttrs, slog.Any("pwd", o.Pwd))
	logAttrs = append(logAttrs, slog.Any("additionalProperties", o.AdditionalProperties))

	return slog.GroupValue(logAttrs...)
}

type NullableDaVinciFlowPolicyResponseTriggerOption1Configuration struct {
	value *DaVinciFlowPolicyResponseTriggerOption1Configuration
	isSet bool
}

func (v NullableDaVinciFlowPolicyResponseTriggerOption1Configuration) Get() *DaVinciFlowPolicyResponseTriggerOption1Configuration {
	return v.value
}

func (v *NullableDaVinciFlowPolicyResponseTriggerOption1Configuration) Set(val *DaVinciFlowPolicyResponseTriggerOption1Configuration) {
	v.value = val
	v.isSet = true
}

func (v NullableDaVinciFlowPolicyResponseTriggerOption1Configuration) IsSet() bool {
	return v.isSet
}

func (v *NullableDaVinciFlowPolicyResponseTriggerOption1Configuration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDaVinciFlowPolicyResponseTriggerOption1Configuration(val *DaVinciFlowPolicyResponseTriggerOption1Configuration) *NullableDaVinciFlowPolicyResponseTriggerOption1Configuration {
	return &NullableDaVinciFlowPolicyResponseTriggerOption1Configuration{value: val, isSet: true}
}

func (v NullableDaVinciFlowPolicyResponseTriggerOption1Configuration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDaVinciFlowPolicyResponseTriggerOption1Configuration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
