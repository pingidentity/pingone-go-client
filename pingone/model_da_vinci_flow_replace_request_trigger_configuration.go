// Copyright Â© 2025 Ping Identity Corporation
/*
PingOne Platform User and Configuration Management API - SDK Generator

PingOne is a cloud-based framework for secure identity access management. The PingOne API gives developers the tools to integrate enterprise and third-party applications with the PingOne platform.

Contact: devex@pingidentity.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
	"log/slog"
)

// checks if the DaVinciFlowReplaceRequestTriggerConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DaVinciFlowReplaceRequestTriggerConfiguration{}

// checks if the DaVinciFlowReplaceRequestTriggerConfiguration type satisfies the LogValuer interface at compile time
var _ slog.LogValuer = &DaVinciFlowReplaceRequestTriggerConfiguration{}

// DaVinciFlowReplaceRequestTriggerConfiguration struct for DaVinciFlowReplaceRequestTriggerConfiguration
type DaVinciFlowReplaceRequestTriggerConfiguration struct {
	Mfa                  *DaVinciFlowReplaceRequestTriggerConfigurationMFA      `json:"mfa,omitempty"`
	Pwd                  *DaVinciFlowReplaceRequestTriggerConfigurationPassword `json:"pwd,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DaVinciFlowReplaceRequestTriggerConfiguration DaVinciFlowReplaceRequestTriggerConfiguration

// NewDaVinciFlowReplaceRequestTriggerConfiguration instantiates a new DaVinciFlowReplaceRequestTriggerConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDaVinciFlowReplaceRequestTriggerConfiguration() *DaVinciFlowReplaceRequestTriggerConfiguration {
	this := DaVinciFlowReplaceRequestTriggerConfiguration{}
	return &this
}

// NewDaVinciFlowReplaceRequestTriggerConfigurationWithDefaults instantiates a new DaVinciFlowReplaceRequestTriggerConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDaVinciFlowReplaceRequestTriggerConfigurationWithDefaults() *DaVinciFlowReplaceRequestTriggerConfiguration {
	this := DaVinciFlowReplaceRequestTriggerConfiguration{}
	return &this
}

// GetMfa returns the Mfa field value if set, zero value otherwise.
func (o *DaVinciFlowReplaceRequestTriggerConfiguration) GetMfa() DaVinciFlowReplaceRequestTriggerConfigurationMFA {
	if o == nil || IsNil(o.Mfa) {
		var ret DaVinciFlowReplaceRequestTriggerConfigurationMFA
		return ret
	}
	return *o.Mfa
}

// GetMfaOk returns a tuple with the Mfa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaVinciFlowReplaceRequestTriggerConfiguration) GetMfaOk() (*DaVinciFlowReplaceRequestTriggerConfigurationMFA, bool) {
	if o == nil || IsNil(o.Mfa) {
		return nil, false
	}
	return o.Mfa, true
}

// HasMfa returns a boolean if a field has been set.
func (o *DaVinciFlowReplaceRequestTriggerConfiguration) HasMfa() bool {
	if o != nil && !IsNil(o.Mfa) {
		return true
	}

	return false
}

// SetMfa gets a reference to the given DaVinciFlowReplaceRequestTriggerConfigurationMFA and assigns it to the Mfa field.
func (o *DaVinciFlowReplaceRequestTriggerConfiguration) SetMfa(v DaVinciFlowReplaceRequestTriggerConfigurationMFA) {
	o.Mfa = &v
}

// GetPwd returns the Pwd field value if set, zero value otherwise.
func (o *DaVinciFlowReplaceRequestTriggerConfiguration) GetPwd() DaVinciFlowReplaceRequestTriggerConfigurationPassword {
	if o == nil || IsNil(o.Pwd) {
		var ret DaVinciFlowReplaceRequestTriggerConfigurationPassword
		return ret
	}
	return *o.Pwd
}

// GetPwdOk returns a tuple with the Pwd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DaVinciFlowReplaceRequestTriggerConfiguration) GetPwdOk() (*DaVinciFlowReplaceRequestTriggerConfigurationPassword, bool) {
	if o == nil || IsNil(o.Pwd) {
		return nil, false
	}
	return o.Pwd, true
}

// HasPwd returns a boolean if a field has been set.
func (o *DaVinciFlowReplaceRequestTriggerConfiguration) HasPwd() bool {
	if o != nil && !IsNil(o.Pwd) {
		return true
	}

	return false
}

// SetPwd gets a reference to the given DaVinciFlowReplaceRequestTriggerConfigurationPassword and assigns it to the Pwd field.
func (o *DaVinciFlowReplaceRequestTriggerConfiguration) SetPwd(v DaVinciFlowReplaceRequestTriggerConfigurationPassword) {
	o.Pwd = &v
}

func (o DaVinciFlowReplaceRequestTriggerConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DaVinciFlowReplaceRequestTriggerConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Mfa) {
		toSerialize["mfa"] = o.Mfa
	}
	if !IsNil(o.Pwd) {
		toSerialize["pwd"] = o.Pwd
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DaVinciFlowReplaceRequestTriggerConfiguration) UnmarshalJSON(data []byte) (err error) {
	varDaVinciFlowReplaceRequestTriggerConfiguration := _DaVinciFlowReplaceRequestTriggerConfiguration{}

	err = json.Unmarshal(data, &varDaVinciFlowReplaceRequestTriggerConfiguration)

	if err != nil {
		return err
	}

	*o = DaVinciFlowReplaceRequestTriggerConfiguration(varDaVinciFlowReplaceRequestTriggerConfiguration)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "mfa")
		delete(additionalProperties, "pwd")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

func (o DaVinciFlowReplaceRequestTriggerConfiguration) LogValue() slog.Value {
	logAttrs := make([]slog.Attr, 0)

	if !IsNil(o.Mfa) {
		logAttrs = append(logAttrs, slog.Any("mfa", *o.Mfa))
	}
	if !IsNil(o.Pwd) {
		logAttrs = append(logAttrs, slog.Any("pwd", *o.Pwd))
	}
	logAttrs = append(logAttrs, slog.Any("additionalProperties", o.AdditionalProperties))

	return slog.GroupValue(logAttrs...)
}

type NullableDaVinciFlowReplaceRequestTriggerConfiguration struct {
	value *DaVinciFlowReplaceRequestTriggerConfiguration
	isSet bool
}

func (v NullableDaVinciFlowReplaceRequestTriggerConfiguration) Get() *DaVinciFlowReplaceRequestTriggerConfiguration {
	return v.value
}

func (v *NullableDaVinciFlowReplaceRequestTriggerConfiguration) Set(val *DaVinciFlowReplaceRequestTriggerConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableDaVinciFlowReplaceRequestTriggerConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableDaVinciFlowReplaceRequestTriggerConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDaVinciFlowReplaceRequestTriggerConfiguration(val *DaVinciFlowReplaceRequestTriggerConfiguration) *NullableDaVinciFlowReplaceRequestTriggerConfiguration {
	return &NullableDaVinciFlowReplaceRequestTriggerConfiguration{value: val, isSet: true}
}

func (v NullableDaVinciFlowReplaceRequestTriggerConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDaVinciFlowReplaceRequestTriggerConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
