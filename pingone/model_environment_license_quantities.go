// Copyright Â© 2025 Ping Identity Corporation
/*
PingOne Platform User and Configuration Management API - SDK Generator

PingOne is a cloud-based framework for secure identity access management. The PingOne API gives developers the tools to integrate enterprise and third-party applications with the PingOne platform.

Contact: developerexperiences@pingidentity.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pingone

import (
	"encoding/json"
	"log/slog"
)

// checks if the EnvironmentLicenseQuantities type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnvironmentLicenseQuantities{}

// checks if the EnvironmentLicenseQuantities type satisfies the LogValuer interface at compile time
var _ slog.LogValuer = &EnvironmentLicenseQuantities{}

// EnvironmentLicenseQuantities struct for EnvironmentLicenseQuantities
type EnvironmentLicenseQuantities struct {
	NumberOfAadhaar           *int64               `json:"numberOfAadhaar,omitempty"`
	NumberOfAccountOwnership  *int64               `json:"numberOfAccountOwnership,omitempty"`
	NumberOfDataVerifications *int64               `json:"numberOfDataVerifications,omitempty"`
	RlgAnalyticsRpm           *EnvironmentAPILimit `json:"rlgAnalyticsRpm,omitempty"`
	RlgAppRegRpm              *EnvironmentAPILimit `json:"rlgAppRegRpm,omitempty"`
	RlgAuditRps               *EnvironmentAPILimit `json:"rlgAuditRps,omitempty"`
	RlgAuthnRps               *EnvironmentAPILimit `json:"rlgAuthnRps,omitempty"`
	RlgAuthzRps               *EnvironmentAPILimit `json:"rlgAuthzRps,omitempty"`
	RlgCatchAllRps            *EnvironmentAPILimit `json:"rlgCatchAllRps,omitempty"`
	RlgConfigRpm              *EnvironmentAPILimit `json:"rlgConfigRpm,omitempty"`
	RlgCredRpm                *EnvironmentAPILimit `json:"rlgCredRpm,omitempty"`
	RlgDirAccessRps           *EnvironmentAPILimit `json:"rlgDirAccessRps,omitempty"`
	RlgDirBulkRps             *EnvironmentAPILimit `json:"rlgDirBulkRps,omitempty"`
	RlgDirFixedRps            *EnvironmentAPILimit `json:"rlgDirFixedRps,omitempty"`
	RlgDirWriteRps            *EnvironmentAPILimit `json:"rlgDirWriteRps,omitempty"`
	RlgDvFlowCallbackRps      *EnvironmentAPILimit `json:"rlgDvFlowCallbackRps,omitempty"`
	RlgDvFlowExecRps          *EnvironmentAPILimit `json:"rlgDvFlowExecRps,omitempty"`
	RlgDvFlowStartRps         *EnvironmentAPILimit `json:"rlgDvFlowStartRps,omitempty"`
	RlgMfaFixedRps            *EnvironmentAPILimit `json:"rlgMfaFixedRps,omitempty"`
	RlgMfaPollingRps          *EnvironmentAPILimit `json:"rlgMfaPollingRps,omitempty"`
	RlgMfaRps                 *EnvironmentAPILimit `json:"rlgMfaRps,omitempty"`
	RlgRiskEvalsRps           *EnvironmentAPILimit `json:"rlgRiskEvalsRps,omitempty"`
	RlgTokenCheckRps          *EnvironmentAPILimit `json:"rlgTokenCheckRps,omitempty"`
	RlgVerifyRpm              *EnvironmentAPILimit `json:"rlgVerifyRpm,omitempty"`
	AdditionalProperties      map[string]interface{}
}

type _EnvironmentLicenseQuantities EnvironmentLicenseQuantities

// NewEnvironmentLicenseQuantities instantiates a new EnvironmentLicenseQuantities object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvironmentLicenseQuantities() *EnvironmentLicenseQuantities {
	this := EnvironmentLicenseQuantities{}
	return &this
}

// NewEnvironmentLicenseQuantitiesWithDefaults instantiates a new EnvironmentLicenseQuantities object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvironmentLicenseQuantitiesWithDefaults() *EnvironmentLicenseQuantities {
	this := EnvironmentLicenseQuantities{}
	return &this
}

// GetNumberOfAadhaar returns the NumberOfAadhaar field value if set, zero value otherwise.
func (o *EnvironmentLicenseQuantities) GetNumberOfAadhaar() int64 {
	if o == nil || IsNil(o.NumberOfAadhaar) {
		var ret int64
		return ret
	}
	return *o.NumberOfAadhaar
}

// GetNumberOfAadhaarOk returns a tuple with the NumberOfAadhaar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentLicenseQuantities) GetNumberOfAadhaarOk() (*int64, bool) {
	if o == nil || IsNil(o.NumberOfAadhaar) {
		return nil, false
	}
	return o.NumberOfAadhaar, true
}

// HasNumberOfAadhaar returns a boolean if a field has been set.
func (o *EnvironmentLicenseQuantities) HasNumberOfAadhaar() bool {
	if o != nil && !IsNil(o.NumberOfAadhaar) {
		return true
	}

	return false
}

// SetNumberOfAadhaar gets a reference to the given int64 and assigns it to the NumberOfAadhaar field.
func (o *EnvironmentLicenseQuantities) SetNumberOfAadhaar(v int64) {
	o.NumberOfAadhaar = &v
}

// GetNumberOfAccountOwnership returns the NumberOfAccountOwnership field value if set, zero value otherwise.
func (o *EnvironmentLicenseQuantities) GetNumberOfAccountOwnership() int64 {
	if o == nil || IsNil(o.NumberOfAccountOwnership) {
		var ret int64
		return ret
	}
	return *o.NumberOfAccountOwnership
}

// GetNumberOfAccountOwnershipOk returns a tuple with the NumberOfAccountOwnership field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentLicenseQuantities) GetNumberOfAccountOwnershipOk() (*int64, bool) {
	if o == nil || IsNil(o.NumberOfAccountOwnership) {
		return nil, false
	}
	return o.NumberOfAccountOwnership, true
}

// HasNumberOfAccountOwnership returns a boolean if a field has been set.
func (o *EnvironmentLicenseQuantities) HasNumberOfAccountOwnership() bool {
	if o != nil && !IsNil(o.NumberOfAccountOwnership) {
		return true
	}

	return false
}

// SetNumberOfAccountOwnership gets a reference to the given int64 and assigns it to the NumberOfAccountOwnership field.
func (o *EnvironmentLicenseQuantities) SetNumberOfAccountOwnership(v int64) {
	o.NumberOfAccountOwnership = &v
}

// GetNumberOfDataVerifications returns the NumberOfDataVerifications field value if set, zero value otherwise.
func (o *EnvironmentLicenseQuantities) GetNumberOfDataVerifications() int64 {
	if o == nil || IsNil(o.NumberOfDataVerifications) {
		var ret int64
		return ret
	}
	return *o.NumberOfDataVerifications
}

// GetNumberOfDataVerificationsOk returns a tuple with the NumberOfDataVerifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentLicenseQuantities) GetNumberOfDataVerificationsOk() (*int64, bool) {
	if o == nil || IsNil(o.NumberOfDataVerifications) {
		return nil, false
	}
	return o.NumberOfDataVerifications, true
}

// HasNumberOfDataVerifications returns a boolean if a field has been set.
func (o *EnvironmentLicenseQuantities) HasNumberOfDataVerifications() bool {
	if o != nil && !IsNil(o.NumberOfDataVerifications) {
		return true
	}

	return false
}

// SetNumberOfDataVerifications gets a reference to the given int64 and assigns it to the NumberOfDataVerifications field.
func (o *EnvironmentLicenseQuantities) SetNumberOfDataVerifications(v int64) {
	o.NumberOfDataVerifications = &v
}

// GetRlgAnalyticsRpm returns the RlgAnalyticsRpm field value if set, zero value otherwise.
func (o *EnvironmentLicenseQuantities) GetRlgAnalyticsRpm() EnvironmentAPILimit {
	if o == nil || IsNil(o.RlgAnalyticsRpm) {
		var ret EnvironmentAPILimit
		return ret
	}
	return *o.RlgAnalyticsRpm
}

// GetRlgAnalyticsRpmOk returns a tuple with the RlgAnalyticsRpm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentLicenseQuantities) GetRlgAnalyticsRpmOk() (*EnvironmentAPILimit, bool) {
	if o == nil || IsNil(o.RlgAnalyticsRpm) {
		return nil, false
	}
	return o.RlgAnalyticsRpm, true
}

// HasRlgAnalyticsRpm returns a boolean if a field has been set.
func (o *EnvironmentLicenseQuantities) HasRlgAnalyticsRpm() bool {
	if o != nil && !IsNil(o.RlgAnalyticsRpm) {
		return true
	}

	return false
}

// SetRlgAnalyticsRpm gets a reference to the given EnvironmentAPILimit and assigns it to the RlgAnalyticsRpm field.
func (o *EnvironmentLicenseQuantities) SetRlgAnalyticsRpm(v EnvironmentAPILimit) {
	o.RlgAnalyticsRpm = &v
}

// GetRlgAppRegRpm returns the RlgAppRegRpm field value if set, zero value otherwise.
func (o *EnvironmentLicenseQuantities) GetRlgAppRegRpm() EnvironmentAPILimit {
	if o == nil || IsNil(o.RlgAppRegRpm) {
		var ret EnvironmentAPILimit
		return ret
	}
	return *o.RlgAppRegRpm
}

// GetRlgAppRegRpmOk returns a tuple with the RlgAppRegRpm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentLicenseQuantities) GetRlgAppRegRpmOk() (*EnvironmentAPILimit, bool) {
	if o == nil || IsNil(o.RlgAppRegRpm) {
		return nil, false
	}
	return o.RlgAppRegRpm, true
}

// HasRlgAppRegRpm returns a boolean if a field has been set.
func (o *EnvironmentLicenseQuantities) HasRlgAppRegRpm() bool {
	if o != nil && !IsNil(o.RlgAppRegRpm) {
		return true
	}

	return false
}

// SetRlgAppRegRpm gets a reference to the given EnvironmentAPILimit and assigns it to the RlgAppRegRpm field.
func (o *EnvironmentLicenseQuantities) SetRlgAppRegRpm(v EnvironmentAPILimit) {
	o.RlgAppRegRpm = &v
}

// GetRlgAuditRps returns the RlgAuditRps field value if set, zero value otherwise.
func (o *EnvironmentLicenseQuantities) GetRlgAuditRps() EnvironmentAPILimit {
	if o == nil || IsNil(o.RlgAuditRps) {
		var ret EnvironmentAPILimit
		return ret
	}
	return *o.RlgAuditRps
}

// GetRlgAuditRpsOk returns a tuple with the RlgAuditRps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentLicenseQuantities) GetRlgAuditRpsOk() (*EnvironmentAPILimit, bool) {
	if o == nil || IsNil(o.RlgAuditRps) {
		return nil, false
	}
	return o.RlgAuditRps, true
}

// HasRlgAuditRps returns a boolean if a field has been set.
func (o *EnvironmentLicenseQuantities) HasRlgAuditRps() bool {
	if o != nil && !IsNil(o.RlgAuditRps) {
		return true
	}

	return false
}

// SetRlgAuditRps gets a reference to the given EnvironmentAPILimit and assigns it to the RlgAuditRps field.
func (o *EnvironmentLicenseQuantities) SetRlgAuditRps(v EnvironmentAPILimit) {
	o.RlgAuditRps = &v
}

// GetRlgAuthnRps returns the RlgAuthnRps field value if set, zero value otherwise.
func (o *EnvironmentLicenseQuantities) GetRlgAuthnRps() EnvironmentAPILimit {
	if o == nil || IsNil(o.RlgAuthnRps) {
		var ret EnvironmentAPILimit
		return ret
	}
	return *o.RlgAuthnRps
}

// GetRlgAuthnRpsOk returns a tuple with the RlgAuthnRps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentLicenseQuantities) GetRlgAuthnRpsOk() (*EnvironmentAPILimit, bool) {
	if o == nil || IsNil(o.RlgAuthnRps) {
		return nil, false
	}
	return o.RlgAuthnRps, true
}

// HasRlgAuthnRps returns a boolean if a field has been set.
func (o *EnvironmentLicenseQuantities) HasRlgAuthnRps() bool {
	if o != nil && !IsNil(o.RlgAuthnRps) {
		return true
	}

	return false
}

// SetRlgAuthnRps gets a reference to the given EnvironmentAPILimit and assigns it to the RlgAuthnRps field.
func (o *EnvironmentLicenseQuantities) SetRlgAuthnRps(v EnvironmentAPILimit) {
	o.RlgAuthnRps = &v
}

// GetRlgAuthzRps returns the RlgAuthzRps field value if set, zero value otherwise.
func (o *EnvironmentLicenseQuantities) GetRlgAuthzRps() EnvironmentAPILimit {
	if o == nil || IsNil(o.RlgAuthzRps) {
		var ret EnvironmentAPILimit
		return ret
	}
	return *o.RlgAuthzRps
}

// GetRlgAuthzRpsOk returns a tuple with the RlgAuthzRps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentLicenseQuantities) GetRlgAuthzRpsOk() (*EnvironmentAPILimit, bool) {
	if o == nil || IsNil(o.RlgAuthzRps) {
		return nil, false
	}
	return o.RlgAuthzRps, true
}

// HasRlgAuthzRps returns a boolean if a field has been set.
func (o *EnvironmentLicenseQuantities) HasRlgAuthzRps() bool {
	if o != nil && !IsNil(o.RlgAuthzRps) {
		return true
	}

	return false
}

// SetRlgAuthzRps gets a reference to the given EnvironmentAPILimit and assigns it to the RlgAuthzRps field.
func (o *EnvironmentLicenseQuantities) SetRlgAuthzRps(v EnvironmentAPILimit) {
	o.RlgAuthzRps = &v
}

// GetRlgCatchAllRps returns the RlgCatchAllRps field value if set, zero value otherwise.
func (o *EnvironmentLicenseQuantities) GetRlgCatchAllRps() EnvironmentAPILimit {
	if o == nil || IsNil(o.RlgCatchAllRps) {
		var ret EnvironmentAPILimit
		return ret
	}
	return *o.RlgCatchAllRps
}

// GetRlgCatchAllRpsOk returns a tuple with the RlgCatchAllRps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentLicenseQuantities) GetRlgCatchAllRpsOk() (*EnvironmentAPILimit, bool) {
	if o == nil || IsNil(o.RlgCatchAllRps) {
		return nil, false
	}
	return o.RlgCatchAllRps, true
}

// HasRlgCatchAllRps returns a boolean if a field has been set.
func (o *EnvironmentLicenseQuantities) HasRlgCatchAllRps() bool {
	if o != nil && !IsNil(o.RlgCatchAllRps) {
		return true
	}

	return false
}

// SetRlgCatchAllRps gets a reference to the given EnvironmentAPILimit and assigns it to the RlgCatchAllRps field.
func (o *EnvironmentLicenseQuantities) SetRlgCatchAllRps(v EnvironmentAPILimit) {
	o.RlgCatchAllRps = &v
}

// GetRlgConfigRpm returns the RlgConfigRpm field value if set, zero value otherwise.
func (o *EnvironmentLicenseQuantities) GetRlgConfigRpm() EnvironmentAPILimit {
	if o == nil || IsNil(o.RlgConfigRpm) {
		var ret EnvironmentAPILimit
		return ret
	}
	return *o.RlgConfigRpm
}

// GetRlgConfigRpmOk returns a tuple with the RlgConfigRpm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentLicenseQuantities) GetRlgConfigRpmOk() (*EnvironmentAPILimit, bool) {
	if o == nil || IsNil(o.RlgConfigRpm) {
		return nil, false
	}
	return o.RlgConfigRpm, true
}

// HasRlgConfigRpm returns a boolean if a field has been set.
func (o *EnvironmentLicenseQuantities) HasRlgConfigRpm() bool {
	if o != nil && !IsNil(o.RlgConfigRpm) {
		return true
	}

	return false
}

// SetRlgConfigRpm gets a reference to the given EnvironmentAPILimit and assigns it to the RlgConfigRpm field.
func (o *EnvironmentLicenseQuantities) SetRlgConfigRpm(v EnvironmentAPILimit) {
	o.RlgConfigRpm = &v
}

// GetRlgCredRpm returns the RlgCredRpm field value if set, zero value otherwise.
func (o *EnvironmentLicenseQuantities) GetRlgCredRpm() EnvironmentAPILimit {
	if o == nil || IsNil(o.RlgCredRpm) {
		var ret EnvironmentAPILimit
		return ret
	}
	return *o.RlgCredRpm
}

// GetRlgCredRpmOk returns a tuple with the RlgCredRpm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentLicenseQuantities) GetRlgCredRpmOk() (*EnvironmentAPILimit, bool) {
	if o == nil || IsNil(o.RlgCredRpm) {
		return nil, false
	}
	return o.RlgCredRpm, true
}

// HasRlgCredRpm returns a boolean if a field has been set.
func (o *EnvironmentLicenseQuantities) HasRlgCredRpm() bool {
	if o != nil && !IsNil(o.RlgCredRpm) {
		return true
	}

	return false
}

// SetRlgCredRpm gets a reference to the given EnvironmentAPILimit and assigns it to the RlgCredRpm field.
func (o *EnvironmentLicenseQuantities) SetRlgCredRpm(v EnvironmentAPILimit) {
	o.RlgCredRpm = &v
}

// GetRlgDirAccessRps returns the RlgDirAccessRps field value if set, zero value otherwise.
func (o *EnvironmentLicenseQuantities) GetRlgDirAccessRps() EnvironmentAPILimit {
	if o == nil || IsNil(o.RlgDirAccessRps) {
		var ret EnvironmentAPILimit
		return ret
	}
	return *o.RlgDirAccessRps
}

// GetRlgDirAccessRpsOk returns a tuple with the RlgDirAccessRps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentLicenseQuantities) GetRlgDirAccessRpsOk() (*EnvironmentAPILimit, bool) {
	if o == nil || IsNil(o.RlgDirAccessRps) {
		return nil, false
	}
	return o.RlgDirAccessRps, true
}

// HasRlgDirAccessRps returns a boolean if a field has been set.
func (o *EnvironmentLicenseQuantities) HasRlgDirAccessRps() bool {
	if o != nil && !IsNil(o.RlgDirAccessRps) {
		return true
	}

	return false
}

// SetRlgDirAccessRps gets a reference to the given EnvironmentAPILimit and assigns it to the RlgDirAccessRps field.
func (o *EnvironmentLicenseQuantities) SetRlgDirAccessRps(v EnvironmentAPILimit) {
	o.RlgDirAccessRps = &v
}

// GetRlgDirBulkRps returns the RlgDirBulkRps field value if set, zero value otherwise.
func (o *EnvironmentLicenseQuantities) GetRlgDirBulkRps() EnvironmentAPILimit {
	if o == nil || IsNil(o.RlgDirBulkRps) {
		var ret EnvironmentAPILimit
		return ret
	}
	return *o.RlgDirBulkRps
}

// GetRlgDirBulkRpsOk returns a tuple with the RlgDirBulkRps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentLicenseQuantities) GetRlgDirBulkRpsOk() (*EnvironmentAPILimit, bool) {
	if o == nil || IsNil(o.RlgDirBulkRps) {
		return nil, false
	}
	return o.RlgDirBulkRps, true
}

// HasRlgDirBulkRps returns a boolean if a field has been set.
func (o *EnvironmentLicenseQuantities) HasRlgDirBulkRps() bool {
	if o != nil && !IsNil(o.RlgDirBulkRps) {
		return true
	}

	return false
}

// SetRlgDirBulkRps gets a reference to the given EnvironmentAPILimit and assigns it to the RlgDirBulkRps field.
func (o *EnvironmentLicenseQuantities) SetRlgDirBulkRps(v EnvironmentAPILimit) {
	o.RlgDirBulkRps = &v
}

// GetRlgDirFixedRps returns the RlgDirFixedRps field value if set, zero value otherwise.
func (o *EnvironmentLicenseQuantities) GetRlgDirFixedRps() EnvironmentAPILimit {
	if o == nil || IsNil(o.RlgDirFixedRps) {
		var ret EnvironmentAPILimit
		return ret
	}
	return *o.RlgDirFixedRps
}

// GetRlgDirFixedRpsOk returns a tuple with the RlgDirFixedRps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentLicenseQuantities) GetRlgDirFixedRpsOk() (*EnvironmentAPILimit, bool) {
	if o == nil || IsNil(o.RlgDirFixedRps) {
		return nil, false
	}
	return o.RlgDirFixedRps, true
}

// HasRlgDirFixedRps returns a boolean if a field has been set.
func (o *EnvironmentLicenseQuantities) HasRlgDirFixedRps() bool {
	if o != nil && !IsNil(o.RlgDirFixedRps) {
		return true
	}

	return false
}

// SetRlgDirFixedRps gets a reference to the given EnvironmentAPILimit and assigns it to the RlgDirFixedRps field.
func (o *EnvironmentLicenseQuantities) SetRlgDirFixedRps(v EnvironmentAPILimit) {
	o.RlgDirFixedRps = &v
}

// GetRlgDirWriteRps returns the RlgDirWriteRps field value if set, zero value otherwise.
func (o *EnvironmentLicenseQuantities) GetRlgDirWriteRps() EnvironmentAPILimit {
	if o == nil || IsNil(o.RlgDirWriteRps) {
		var ret EnvironmentAPILimit
		return ret
	}
	return *o.RlgDirWriteRps
}

// GetRlgDirWriteRpsOk returns a tuple with the RlgDirWriteRps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentLicenseQuantities) GetRlgDirWriteRpsOk() (*EnvironmentAPILimit, bool) {
	if o == nil || IsNil(o.RlgDirWriteRps) {
		return nil, false
	}
	return o.RlgDirWriteRps, true
}

// HasRlgDirWriteRps returns a boolean if a field has been set.
func (o *EnvironmentLicenseQuantities) HasRlgDirWriteRps() bool {
	if o != nil && !IsNil(o.RlgDirWriteRps) {
		return true
	}

	return false
}

// SetRlgDirWriteRps gets a reference to the given EnvironmentAPILimit and assigns it to the RlgDirWriteRps field.
func (o *EnvironmentLicenseQuantities) SetRlgDirWriteRps(v EnvironmentAPILimit) {
	o.RlgDirWriteRps = &v
}

// GetRlgDvFlowCallbackRps returns the RlgDvFlowCallbackRps field value if set, zero value otherwise.
func (o *EnvironmentLicenseQuantities) GetRlgDvFlowCallbackRps() EnvironmentAPILimit {
	if o == nil || IsNil(o.RlgDvFlowCallbackRps) {
		var ret EnvironmentAPILimit
		return ret
	}
	return *o.RlgDvFlowCallbackRps
}

// GetRlgDvFlowCallbackRpsOk returns a tuple with the RlgDvFlowCallbackRps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentLicenseQuantities) GetRlgDvFlowCallbackRpsOk() (*EnvironmentAPILimit, bool) {
	if o == nil || IsNil(o.RlgDvFlowCallbackRps) {
		return nil, false
	}
	return o.RlgDvFlowCallbackRps, true
}

// HasRlgDvFlowCallbackRps returns a boolean if a field has been set.
func (o *EnvironmentLicenseQuantities) HasRlgDvFlowCallbackRps() bool {
	if o != nil && !IsNil(o.RlgDvFlowCallbackRps) {
		return true
	}

	return false
}

// SetRlgDvFlowCallbackRps gets a reference to the given EnvironmentAPILimit and assigns it to the RlgDvFlowCallbackRps field.
func (o *EnvironmentLicenseQuantities) SetRlgDvFlowCallbackRps(v EnvironmentAPILimit) {
	o.RlgDvFlowCallbackRps = &v
}

// GetRlgDvFlowExecRps returns the RlgDvFlowExecRps field value if set, zero value otherwise.
func (o *EnvironmentLicenseQuantities) GetRlgDvFlowExecRps() EnvironmentAPILimit {
	if o == nil || IsNil(o.RlgDvFlowExecRps) {
		var ret EnvironmentAPILimit
		return ret
	}
	return *o.RlgDvFlowExecRps
}

// GetRlgDvFlowExecRpsOk returns a tuple with the RlgDvFlowExecRps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentLicenseQuantities) GetRlgDvFlowExecRpsOk() (*EnvironmentAPILimit, bool) {
	if o == nil || IsNil(o.RlgDvFlowExecRps) {
		return nil, false
	}
	return o.RlgDvFlowExecRps, true
}

// HasRlgDvFlowExecRps returns a boolean if a field has been set.
func (o *EnvironmentLicenseQuantities) HasRlgDvFlowExecRps() bool {
	if o != nil && !IsNil(o.RlgDvFlowExecRps) {
		return true
	}

	return false
}

// SetRlgDvFlowExecRps gets a reference to the given EnvironmentAPILimit and assigns it to the RlgDvFlowExecRps field.
func (o *EnvironmentLicenseQuantities) SetRlgDvFlowExecRps(v EnvironmentAPILimit) {
	o.RlgDvFlowExecRps = &v
}

// GetRlgDvFlowStartRps returns the RlgDvFlowStartRps field value if set, zero value otherwise.
func (o *EnvironmentLicenseQuantities) GetRlgDvFlowStartRps() EnvironmentAPILimit {
	if o == nil || IsNil(o.RlgDvFlowStartRps) {
		var ret EnvironmentAPILimit
		return ret
	}
	return *o.RlgDvFlowStartRps
}

// GetRlgDvFlowStartRpsOk returns a tuple with the RlgDvFlowStartRps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentLicenseQuantities) GetRlgDvFlowStartRpsOk() (*EnvironmentAPILimit, bool) {
	if o == nil || IsNil(o.RlgDvFlowStartRps) {
		return nil, false
	}
	return o.RlgDvFlowStartRps, true
}

// HasRlgDvFlowStartRps returns a boolean if a field has been set.
func (o *EnvironmentLicenseQuantities) HasRlgDvFlowStartRps() bool {
	if o != nil && !IsNil(o.RlgDvFlowStartRps) {
		return true
	}

	return false
}

// SetRlgDvFlowStartRps gets a reference to the given EnvironmentAPILimit and assigns it to the RlgDvFlowStartRps field.
func (o *EnvironmentLicenseQuantities) SetRlgDvFlowStartRps(v EnvironmentAPILimit) {
	o.RlgDvFlowStartRps = &v
}

// GetRlgMfaFixedRps returns the RlgMfaFixedRps field value if set, zero value otherwise.
func (o *EnvironmentLicenseQuantities) GetRlgMfaFixedRps() EnvironmentAPILimit {
	if o == nil || IsNil(o.RlgMfaFixedRps) {
		var ret EnvironmentAPILimit
		return ret
	}
	return *o.RlgMfaFixedRps
}

// GetRlgMfaFixedRpsOk returns a tuple with the RlgMfaFixedRps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentLicenseQuantities) GetRlgMfaFixedRpsOk() (*EnvironmentAPILimit, bool) {
	if o == nil || IsNil(o.RlgMfaFixedRps) {
		return nil, false
	}
	return o.RlgMfaFixedRps, true
}

// HasRlgMfaFixedRps returns a boolean if a field has been set.
func (o *EnvironmentLicenseQuantities) HasRlgMfaFixedRps() bool {
	if o != nil && !IsNil(o.RlgMfaFixedRps) {
		return true
	}

	return false
}

// SetRlgMfaFixedRps gets a reference to the given EnvironmentAPILimit and assigns it to the RlgMfaFixedRps field.
func (o *EnvironmentLicenseQuantities) SetRlgMfaFixedRps(v EnvironmentAPILimit) {
	o.RlgMfaFixedRps = &v
}

// GetRlgMfaPollingRps returns the RlgMfaPollingRps field value if set, zero value otherwise.
func (o *EnvironmentLicenseQuantities) GetRlgMfaPollingRps() EnvironmentAPILimit {
	if o == nil || IsNil(o.RlgMfaPollingRps) {
		var ret EnvironmentAPILimit
		return ret
	}
	return *o.RlgMfaPollingRps
}

// GetRlgMfaPollingRpsOk returns a tuple with the RlgMfaPollingRps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentLicenseQuantities) GetRlgMfaPollingRpsOk() (*EnvironmentAPILimit, bool) {
	if o == nil || IsNil(o.RlgMfaPollingRps) {
		return nil, false
	}
	return o.RlgMfaPollingRps, true
}

// HasRlgMfaPollingRps returns a boolean if a field has been set.
func (o *EnvironmentLicenseQuantities) HasRlgMfaPollingRps() bool {
	if o != nil && !IsNil(o.RlgMfaPollingRps) {
		return true
	}

	return false
}

// SetRlgMfaPollingRps gets a reference to the given EnvironmentAPILimit and assigns it to the RlgMfaPollingRps field.
func (o *EnvironmentLicenseQuantities) SetRlgMfaPollingRps(v EnvironmentAPILimit) {
	o.RlgMfaPollingRps = &v
}

// GetRlgMfaRps returns the RlgMfaRps field value if set, zero value otherwise.
func (o *EnvironmentLicenseQuantities) GetRlgMfaRps() EnvironmentAPILimit {
	if o == nil || IsNil(o.RlgMfaRps) {
		var ret EnvironmentAPILimit
		return ret
	}
	return *o.RlgMfaRps
}

// GetRlgMfaRpsOk returns a tuple with the RlgMfaRps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentLicenseQuantities) GetRlgMfaRpsOk() (*EnvironmentAPILimit, bool) {
	if o == nil || IsNil(o.RlgMfaRps) {
		return nil, false
	}
	return o.RlgMfaRps, true
}

// HasRlgMfaRps returns a boolean if a field has been set.
func (o *EnvironmentLicenseQuantities) HasRlgMfaRps() bool {
	if o != nil && !IsNil(o.RlgMfaRps) {
		return true
	}

	return false
}

// SetRlgMfaRps gets a reference to the given EnvironmentAPILimit and assigns it to the RlgMfaRps field.
func (o *EnvironmentLicenseQuantities) SetRlgMfaRps(v EnvironmentAPILimit) {
	o.RlgMfaRps = &v
}

// GetRlgRiskEvalsRps returns the RlgRiskEvalsRps field value if set, zero value otherwise.
func (o *EnvironmentLicenseQuantities) GetRlgRiskEvalsRps() EnvironmentAPILimit {
	if o == nil || IsNil(o.RlgRiskEvalsRps) {
		var ret EnvironmentAPILimit
		return ret
	}
	return *o.RlgRiskEvalsRps
}

// GetRlgRiskEvalsRpsOk returns a tuple with the RlgRiskEvalsRps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentLicenseQuantities) GetRlgRiskEvalsRpsOk() (*EnvironmentAPILimit, bool) {
	if o == nil || IsNil(o.RlgRiskEvalsRps) {
		return nil, false
	}
	return o.RlgRiskEvalsRps, true
}

// HasRlgRiskEvalsRps returns a boolean if a field has been set.
func (o *EnvironmentLicenseQuantities) HasRlgRiskEvalsRps() bool {
	if o != nil && !IsNil(o.RlgRiskEvalsRps) {
		return true
	}

	return false
}

// SetRlgRiskEvalsRps gets a reference to the given EnvironmentAPILimit and assigns it to the RlgRiskEvalsRps field.
func (o *EnvironmentLicenseQuantities) SetRlgRiskEvalsRps(v EnvironmentAPILimit) {
	o.RlgRiskEvalsRps = &v
}

// GetRlgTokenCheckRps returns the RlgTokenCheckRps field value if set, zero value otherwise.
func (o *EnvironmentLicenseQuantities) GetRlgTokenCheckRps() EnvironmentAPILimit {
	if o == nil || IsNil(o.RlgTokenCheckRps) {
		var ret EnvironmentAPILimit
		return ret
	}
	return *o.RlgTokenCheckRps
}

// GetRlgTokenCheckRpsOk returns a tuple with the RlgTokenCheckRps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentLicenseQuantities) GetRlgTokenCheckRpsOk() (*EnvironmentAPILimit, bool) {
	if o == nil || IsNil(o.RlgTokenCheckRps) {
		return nil, false
	}
	return o.RlgTokenCheckRps, true
}

// HasRlgTokenCheckRps returns a boolean if a field has been set.
func (o *EnvironmentLicenseQuantities) HasRlgTokenCheckRps() bool {
	if o != nil && !IsNil(o.RlgTokenCheckRps) {
		return true
	}

	return false
}

// SetRlgTokenCheckRps gets a reference to the given EnvironmentAPILimit and assigns it to the RlgTokenCheckRps field.
func (o *EnvironmentLicenseQuantities) SetRlgTokenCheckRps(v EnvironmentAPILimit) {
	o.RlgTokenCheckRps = &v
}

// GetRlgVerifyRpm returns the RlgVerifyRpm field value if set, zero value otherwise.
func (o *EnvironmentLicenseQuantities) GetRlgVerifyRpm() EnvironmentAPILimit {
	if o == nil || IsNil(o.RlgVerifyRpm) {
		var ret EnvironmentAPILimit
		return ret
	}
	return *o.RlgVerifyRpm
}

// GetRlgVerifyRpmOk returns a tuple with the RlgVerifyRpm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentLicenseQuantities) GetRlgVerifyRpmOk() (*EnvironmentAPILimit, bool) {
	if o == nil || IsNil(o.RlgVerifyRpm) {
		return nil, false
	}
	return o.RlgVerifyRpm, true
}

// HasRlgVerifyRpm returns a boolean if a field has been set.
func (o *EnvironmentLicenseQuantities) HasRlgVerifyRpm() bool {
	if o != nil && !IsNil(o.RlgVerifyRpm) {
		return true
	}

	return false
}

// SetRlgVerifyRpm gets a reference to the given EnvironmentAPILimit and assigns it to the RlgVerifyRpm field.
func (o *EnvironmentLicenseQuantities) SetRlgVerifyRpm(v EnvironmentAPILimit) {
	o.RlgVerifyRpm = &v
}

func (o EnvironmentLicenseQuantities) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnvironmentLicenseQuantities) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NumberOfAadhaar) {
		toSerialize["numberOfAadhaar"] = o.NumberOfAadhaar
	}
	if !IsNil(o.NumberOfAccountOwnership) {
		toSerialize["numberOfAccountOwnership"] = o.NumberOfAccountOwnership
	}
	if !IsNil(o.NumberOfDataVerifications) {
		toSerialize["numberOfDataVerifications"] = o.NumberOfDataVerifications
	}
	if !IsNil(o.RlgAnalyticsRpm) {
		toSerialize["rlgAnalyticsRpm"] = o.RlgAnalyticsRpm
	}
	if !IsNil(o.RlgAppRegRpm) {
		toSerialize["rlgAppRegRpm"] = o.RlgAppRegRpm
	}
	if !IsNil(o.RlgAuditRps) {
		toSerialize["rlgAuditRps"] = o.RlgAuditRps
	}
	if !IsNil(o.RlgAuthnRps) {
		toSerialize["rlgAuthnRps"] = o.RlgAuthnRps
	}
	if !IsNil(o.RlgAuthzRps) {
		toSerialize["rlgAuthzRps"] = o.RlgAuthzRps
	}
	if !IsNil(o.RlgCatchAllRps) {
		toSerialize["rlgCatchAllRps"] = o.RlgCatchAllRps
	}
	if !IsNil(o.RlgConfigRpm) {
		toSerialize["rlgConfigRpm"] = o.RlgConfigRpm
	}
	if !IsNil(o.RlgCredRpm) {
		toSerialize["rlgCredRpm"] = o.RlgCredRpm
	}
	if !IsNil(o.RlgDirAccessRps) {
		toSerialize["rlgDirAccessRps"] = o.RlgDirAccessRps
	}
	if !IsNil(o.RlgDirBulkRps) {
		toSerialize["rlgDirBulkRps"] = o.RlgDirBulkRps
	}
	if !IsNil(o.RlgDirFixedRps) {
		toSerialize["rlgDirFixedRps"] = o.RlgDirFixedRps
	}
	if !IsNil(o.RlgDirWriteRps) {
		toSerialize["rlgDirWriteRps"] = o.RlgDirWriteRps
	}
	if !IsNil(o.RlgDvFlowCallbackRps) {
		toSerialize["rlgDvFlowCallbackRps"] = o.RlgDvFlowCallbackRps
	}
	if !IsNil(o.RlgDvFlowExecRps) {
		toSerialize["rlgDvFlowExecRps"] = o.RlgDvFlowExecRps
	}
	if !IsNil(o.RlgDvFlowStartRps) {
		toSerialize["rlgDvFlowStartRps"] = o.RlgDvFlowStartRps
	}
	if !IsNil(o.RlgMfaFixedRps) {
		toSerialize["rlgMfaFixedRps"] = o.RlgMfaFixedRps
	}
	if !IsNil(o.RlgMfaPollingRps) {
		toSerialize["rlgMfaPollingRps"] = o.RlgMfaPollingRps
	}
	if !IsNil(o.RlgMfaRps) {
		toSerialize["rlgMfaRps"] = o.RlgMfaRps
	}
	if !IsNil(o.RlgRiskEvalsRps) {
		toSerialize["rlgRiskEvalsRps"] = o.RlgRiskEvalsRps
	}
	if !IsNil(o.RlgTokenCheckRps) {
		toSerialize["rlgTokenCheckRps"] = o.RlgTokenCheckRps
	}
	if !IsNil(o.RlgVerifyRpm) {
		toSerialize["rlgVerifyRpm"] = o.RlgVerifyRpm
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EnvironmentLicenseQuantities) UnmarshalJSON(data []byte) (err error) {
	varEnvironmentLicenseQuantities := _EnvironmentLicenseQuantities{}

	err = json.Unmarshal(data, &varEnvironmentLicenseQuantities)

	if err != nil {
		return err
	}

	*o = EnvironmentLicenseQuantities(varEnvironmentLicenseQuantities)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "numberOfAadhaar")
		delete(additionalProperties, "numberOfAccountOwnership")
		delete(additionalProperties, "numberOfDataVerifications")
		delete(additionalProperties, "rlgAnalyticsRpm")
		delete(additionalProperties, "rlgAppRegRpm")
		delete(additionalProperties, "rlgAuditRps")
		delete(additionalProperties, "rlgAuthnRps")
		delete(additionalProperties, "rlgAuthzRps")
		delete(additionalProperties, "rlgCatchAllRps")
		delete(additionalProperties, "rlgConfigRpm")
		delete(additionalProperties, "rlgCredRpm")
		delete(additionalProperties, "rlgDirAccessRps")
		delete(additionalProperties, "rlgDirBulkRps")
		delete(additionalProperties, "rlgDirFixedRps")
		delete(additionalProperties, "rlgDirWriteRps")
		delete(additionalProperties, "rlgDvFlowCallbackRps")
		delete(additionalProperties, "rlgDvFlowExecRps")
		delete(additionalProperties, "rlgDvFlowStartRps")
		delete(additionalProperties, "rlgMfaFixedRps")
		delete(additionalProperties, "rlgMfaPollingRps")
		delete(additionalProperties, "rlgMfaRps")
		delete(additionalProperties, "rlgRiskEvalsRps")
		delete(additionalProperties, "rlgTokenCheckRps")
		delete(additionalProperties, "rlgVerifyRpm")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

func (o EnvironmentLicenseQuantities) LogValue() slog.Value {
	logAttrs := make([]slog.Attr, 0)

	if !IsNil(o.NumberOfAadhaar) {
		logAttrs = append(logAttrs, slog.Any("numberOfAadhaar", *o.NumberOfAadhaar))
	}
	if !IsNil(o.NumberOfAccountOwnership) {
		logAttrs = append(logAttrs, slog.Any("numberOfAccountOwnership", *o.NumberOfAccountOwnership))
	}
	if !IsNil(o.NumberOfDataVerifications) {
		logAttrs = append(logAttrs, slog.Any("numberOfDataVerifications", *o.NumberOfDataVerifications))
	}
	if !IsNil(o.RlgAnalyticsRpm) {
		logAttrs = append(logAttrs, slog.Any("rlgAnalyticsRpm", *o.RlgAnalyticsRpm))
	}
	if !IsNil(o.RlgAppRegRpm) {
		logAttrs = append(logAttrs, slog.Any("rlgAppRegRpm", *o.RlgAppRegRpm))
	}
	if !IsNil(o.RlgAuditRps) {
		logAttrs = append(logAttrs, slog.Any("rlgAuditRps", *o.RlgAuditRps))
	}
	if !IsNil(o.RlgAuthnRps) {
		logAttrs = append(logAttrs, slog.Any("rlgAuthnRps", *o.RlgAuthnRps))
	}
	if !IsNil(o.RlgAuthzRps) {
		logAttrs = append(logAttrs, slog.Any("rlgAuthzRps", *o.RlgAuthzRps))
	}
	if !IsNil(o.RlgCatchAllRps) {
		logAttrs = append(logAttrs, slog.Any("rlgCatchAllRps", *o.RlgCatchAllRps))
	}
	if !IsNil(o.RlgConfigRpm) {
		logAttrs = append(logAttrs, slog.Any("rlgConfigRpm", *o.RlgConfigRpm))
	}
	if !IsNil(o.RlgCredRpm) {
		logAttrs = append(logAttrs, slog.Any("rlgCredRpm", *o.RlgCredRpm))
	}
	if !IsNil(o.RlgDirAccessRps) {
		logAttrs = append(logAttrs, slog.Any("rlgDirAccessRps", *o.RlgDirAccessRps))
	}
	if !IsNil(o.RlgDirBulkRps) {
		logAttrs = append(logAttrs, slog.Any("rlgDirBulkRps", *o.RlgDirBulkRps))
	}
	if !IsNil(o.RlgDirFixedRps) {
		logAttrs = append(logAttrs, slog.Any("rlgDirFixedRps", *o.RlgDirFixedRps))
	}
	if !IsNil(o.RlgDirWriteRps) {
		logAttrs = append(logAttrs, slog.Any("rlgDirWriteRps", *o.RlgDirWriteRps))
	}
	if !IsNil(o.RlgDvFlowCallbackRps) {
		logAttrs = append(logAttrs, slog.Any("rlgDvFlowCallbackRps", *o.RlgDvFlowCallbackRps))
	}
	if !IsNil(o.RlgDvFlowExecRps) {
		logAttrs = append(logAttrs, slog.Any("rlgDvFlowExecRps", *o.RlgDvFlowExecRps))
	}
	if !IsNil(o.RlgDvFlowStartRps) {
		logAttrs = append(logAttrs, slog.Any("rlgDvFlowStartRps", *o.RlgDvFlowStartRps))
	}
	if !IsNil(o.RlgMfaFixedRps) {
		logAttrs = append(logAttrs, slog.Any("rlgMfaFixedRps", *o.RlgMfaFixedRps))
	}
	if !IsNil(o.RlgMfaPollingRps) {
		logAttrs = append(logAttrs, slog.Any("rlgMfaPollingRps", *o.RlgMfaPollingRps))
	}
	if !IsNil(o.RlgMfaRps) {
		logAttrs = append(logAttrs, slog.Any("rlgMfaRps", *o.RlgMfaRps))
	}
	if !IsNil(o.RlgRiskEvalsRps) {
		logAttrs = append(logAttrs, slog.Any("rlgRiskEvalsRps", *o.RlgRiskEvalsRps))
	}
	if !IsNil(o.RlgTokenCheckRps) {
		logAttrs = append(logAttrs, slog.Any("rlgTokenCheckRps", *o.RlgTokenCheckRps))
	}
	if !IsNil(o.RlgVerifyRpm) {
		logAttrs = append(logAttrs, slog.Any("rlgVerifyRpm", *o.RlgVerifyRpm))
	}
	logAttrs = append(logAttrs, slog.Any("additionalProperties", o.AdditionalProperties))

	return slog.GroupValue(logAttrs...)
}

type NullableEnvironmentLicenseQuantities struct {
	value *EnvironmentLicenseQuantities
	isSet bool
}

func (v NullableEnvironmentLicenseQuantities) Get() *EnvironmentLicenseQuantities {
	return v.value
}

func (v *NullableEnvironmentLicenseQuantities) Set(val *EnvironmentLicenseQuantities) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentLicenseQuantities) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentLicenseQuantities) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentLicenseQuantities(val *EnvironmentLicenseQuantities) *NullableEnvironmentLicenseQuantities {
	return &NullableEnvironmentLicenseQuantities{value: val, isSet: true}
}

func (v NullableEnvironmentLicenseQuantities) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentLicenseQuantities) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
